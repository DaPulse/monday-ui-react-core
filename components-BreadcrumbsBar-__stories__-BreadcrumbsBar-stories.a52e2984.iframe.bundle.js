"use strict";(globalThis.webpackChunkmonday_ui_react_core=globalThis.webpackChunkmonday_ui_react_core||[]).push([[803],{"./src/components/BreadcrumbsBar/__stories__/BreadcrumbsBar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NavigatableBreadcrumbs:()=>NavigatableBreadcrumbs,Overview:()=>Overview,TextOnly:()=>TextOnly,WithIcons:()=>WithIcons,__namedExportsOrder:()=>__namedExportsOrder,default:()=>BreadcrumbsBar_stories_BreadcrumbsBar_stories});__webpack_require__("../../node_modules/react/index.js");var BreadcrumbsBar=__webpack_require__("./src/components/BreadcrumbsBar/BreadcrumbsBar.tsx"),BreadcrumbItem=__webpack_require__("./src/components/BreadcrumbsBar/BreadcrumbItem/BreadcrumbItem.tsx"),Avatar=__webpack_require__("./src/components/Avatar/Avatar.tsx"),Workspace=__webpack_require__("./src/components/Icon/Icons/components/Workspace.tsx"),Folder=__webpack_require__("./src/components/Icon/Icons/components/Folder.tsx"),Board=__webpack_require__("./src/components/Icon/Icons/components/Board.tsx"),Group=__webpack_require__("./src/components/Icon/Icons/components/Group.tsx"),person3=__webpack_require__("./src/components/BreadcrumbsBar/__stories__/assets/person3.png"),createStoryMetaSettingsDecorator=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),BreadcrumbsBar_stories=__webpack_require__("../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/BreadcrumbsBar/__stories__/BreadcrumbsBar.stories.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(BreadcrumbsBar_stories.A,options);BreadcrumbsBar_stories.A&&BreadcrumbsBar_stories.A.locals&&BreadcrumbsBar_stories.A.locals;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const metaSettings=(0,createStoryMetaSettingsDecorator.B)({component:BreadcrumbsBar.A,enumPropNamesArray:["type"]}),breadcrumbsBarTemplate=args=>(0,jsx_runtime.jsx)(BreadcrumbsBar.A,{...args,children:args.children&&args.children.map((item=>(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:item.text,icon:item.icon},item.text)))});breadcrumbsBarTemplate.displayName="breadcrumbsBarTemplate";const BreadcrumbsBar_stories_BreadcrumbsBar_stories={parameters:{storySource:{source:'import React from "react";\nimport BreadcrumbsBar, { BreadcrumbBarProps } from "../BreadcrumbsBar";\nimport BreadcrumbItem, { BreadcrumbItemProps } from "../BreadcrumbItem/BreadcrumbItem";\nimport Avatar from "../../Avatar/Avatar";\nimport { Board, Folder, Group, Workspace } from "../../Icon/Icons";\nimport person3 from "./assets/person3.png";\nimport { createStoryMetaSettingsDecorator } from "../../../storybook/functions/createStoryMetaSettingsDecorator";\nimport "./BreadcrumbsBar.stories.scss";\n\nconst metaSettings = createStoryMetaSettingsDecorator({\n  component: BreadcrumbsBar,\n  enumPropNamesArray: ["type"]\n});\n\nconst breadcrumbsBarTemplate = (args: BreadcrumbBarProps) => {\n  return (\n    <BreadcrumbsBar {...args}>\n      {args.children &&\n        // @ts-ignore\n        args.children.map((item: BreadcrumbItemProps) => (\n          <BreadcrumbItem key={item.text} text={item.text} icon={item.icon} />\n        ))}\n    </BreadcrumbsBar>\n  );\n};\n\nexport default {\n  title: "Navigation/BreadcrumbsBar/BreadcrumbsBar",\n  component: BreadcrumbsBar,\n  argTypes: metaSettings.argTypes,\n  decorators: metaSettings.decorators\n};\n\nexport const Overview = {\n  render: breadcrumbsBarTemplate.bind({}),\n  name: "Overview",\n\n  args: {\n    children: [\n      {\n        text: "Workspace",\n        icon: Workspace\n      },\n      {\n        text: "Folder",\n        icon: Folder\n      },\n      {\n        text: "Board",\n        icon: Board\n      },\n      {\n        text: "Group",\n        icon: Group\n      }\n    ]\n  }\n};\n\nexport const TextOnly = {\n  render: () => (\n    <BreadcrumbsBar type={BreadcrumbsBar.types.INDICATION}>\n      <BreadcrumbItem text="Workspace" isCurrent />\n      <BreadcrumbItem text="Folder" />\n      <BreadcrumbItem text="Board" />\n      <BreadcrumbItem text="Group" />\n    </BreadcrumbsBar>\n  ),\n\n  name: "Text only"\n};\n\nexport const WithIcons = {\n  render: () => (\n    <BreadcrumbsBar type={BreadcrumbsBar.types.NAVIGATION}>\n      <BreadcrumbItem text="Workspace" icon={Workspace} isCurrent />\n      <BreadcrumbItem text="Folder" icon={Folder} />\n      <BreadcrumbItem text="Board" icon={Board} />\n      <BreadcrumbItem text="Group" icon={Group} />\n    </BreadcrumbsBar>\n  ),\n\n  name: "With icons"\n};\n\nexport const NavigatableBreadcrumbs = {\n  render: () => (\n    <div className="monday-storybook-breadcrumbs-bar_inline-wrapper">\n      <Avatar size={Avatar.sizes.MEDIUM} src={person3} type={Avatar.types.IMG} />\n      <div className="monday-storybook-breadcrumbs-bar_column-wrapper">\n        <span className="monday-storybook-breadcrumbs-bar_title">Rotem Dekel</span>\n        <BreadcrumbsBar type={BreadcrumbsBar.types.NAVIGATION}>\n          <BreadcrumbItem text="User research" icon={Board} />\n          <BreadcrumbItem text="Video sessions" icon={Group} />\n        </BreadcrumbsBar>\n      </div>\n    </div>\n  ),\n\n  name: "Navigatable breadcrumbs"\n};\n',locationsMap:{overview:{startLoc:{col:24,line:34},endLoc:{col:1,line:58},startBody:{col:24,line:34},endBody:{col:1,line:58}},"text-only":{startLoc:{col:24,line:60},endLoc:{col:1,line:71},startBody:{col:24,line:60},endBody:{col:1,line:71}},"with-icons":{startLoc:{col:25,line:73},endLoc:{col:1,line:84},startBody:{col:25,line:73},endBody:{col:1,line:84}},"navigatable-breadcrumbs":{startLoc:{col:38,line:86},endLoc:{col:1,line:101},startBody:{col:38,line:86},endBody:{col:1,line:101}}}}},title:"Navigation/BreadcrumbsBar/BreadcrumbsBar",component:BreadcrumbsBar.A,argTypes:metaSettings.argTypes,decorators:metaSettings.decorators},Overview={render:breadcrumbsBarTemplate.bind({}),name:"Overview",args:{children:[{text:"Workspace",icon:Workspace.A},{text:"Folder",icon:Folder.A},{text:"Board",icon:Board.A},{text:"Group",icon:Group.A}]}},TextOnly={render:()=>(0,jsx_runtime.jsxs)(BreadcrumbsBar.A,{type:BreadcrumbsBar.A.types.INDICATION,children:[(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Workspace",isCurrent:!0}),(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Folder"}),(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Board"}),(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Group"})]}),name:"Text only"},WithIcons={render:()=>(0,jsx_runtime.jsxs)(BreadcrumbsBar.A,{type:BreadcrumbsBar.A.types.NAVIGATION,children:[(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Workspace",icon:Workspace.A,isCurrent:!0}),(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Folder",icon:Folder.A}),(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Board",icon:Board.A}),(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Group",icon:Group.A})]}),name:"With icons"},NavigatableBreadcrumbs={render:()=>(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-breadcrumbs-bar_inline-wrapper",children:[(0,jsx_runtime.jsx)(Avatar.A,{size:Avatar.A.sizes.MEDIUM,src:person3,type:Avatar.A.types.IMG}),(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-breadcrumbs-bar_column-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-breadcrumbs-bar_title",children:"Rotem Dekel"}),(0,jsx_runtime.jsxs)(BreadcrumbsBar.A,{type:BreadcrumbsBar.A.types.NAVIGATION,children:[(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"User research",icon:Board.A}),(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Video sessions",icon:Group.A})]})]})]}),name:"Navigatable breadcrumbs"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: breadcrumbsBarTemplate.bind({}),\n  name: "Overview",\n  args: {\n    children: [{\n      text: "Workspace",\n      icon: Workspace\n    }, {\n      text: "Folder",\n      icon: Folder\n    }, {\n      text: "Board",\n      icon: Board\n    }, {\n      text: "Group",\n      icon: Group\n    }]\n  }\n}',...Overview.parameters?.docs?.source}}},TextOnly.parameters={...TextOnly.parameters,docs:{...TextOnly.parameters?.docs,source:{originalSource:'{\n  render: () => <BreadcrumbsBar type={BreadcrumbsBar.types.INDICATION}>\n      <BreadcrumbItem text="Workspace" isCurrent />\n      <BreadcrumbItem text="Folder" />\n      <BreadcrumbItem text="Board" />\n      <BreadcrumbItem text="Group" />\n    </BreadcrumbsBar>,\n  name: "Text only"\n}',...TextOnly.parameters?.docs?.source}}},WithIcons.parameters={...WithIcons.parameters,docs:{...WithIcons.parameters?.docs,source:{originalSource:'{\n  render: () => <BreadcrumbsBar type={BreadcrumbsBar.types.NAVIGATION}>\n      <BreadcrumbItem text="Workspace" icon={Workspace} isCurrent />\n      <BreadcrumbItem text="Folder" icon={Folder} />\n      <BreadcrumbItem text="Board" icon={Board} />\n      <BreadcrumbItem text="Group" icon={Group} />\n    </BreadcrumbsBar>,\n  name: "With icons"\n}',...WithIcons.parameters?.docs?.source}}},NavigatableBreadcrumbs.parameters={...NavigatableBreadcrumbs.parameters,docs:{...NavigatableBreadcrumbs.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="monday-storybook-breadcrumbs-bar_inline-wrapper">\n      <Avatar size={Avatar.sizes.MEDIUM} src={person3} type={Avatar.types.IMG} />\n      <div className="monday-storybook-breadcrumbs-bar_column-wrapper">\n        <span className="monday-storybook-breadcrumbs-bar_title">Rotem Dekel</span>\n        <BreadcrumbsBar type={BreadcrumbsBar.types.NAVIGATION}>\n          <BreadcrumbItem text="User research" icon={Board} />\n          <BreadcrumbItem text="Video sessions" icon={Group} />\n        </BreadcrumbsBar>\n      </div>\n    </div>,\n  name: "Navigatable breadcrumbs"\n}',...NavigatableBreadcrumbs.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","TextOnly","WithIcons","NavigatableBreadcrumbs"]},"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/BreadcrumbsBar/__stories__/BreadcrumbsBar.stories.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".monday-storybook-breadcrumbs-bar_inline-wrapper{display:flex;flex-direction:row;align-items:center;padding:8px 12px;gap:12px;width:320px}.monday-storybook-breadcrumbs-bar_line{display:flex;align-items:center;gap:10px;padding-left:5px}.monday-storybook-breadcrumbs-bar_title{font-style:normal;font-weight:500;font-size:16px;line-height:24px}.monday-storybook-breadcrumbs-bar_column-wrapper{display:flex;flex-direction:column}.monday-storybook-breadcrumbs-bar_column-wrapper ol{padding-inline-start:0;padding:0;margin:0}","",{version:3,sources:["webpack://./src/components/BreadcrumbsBar/__stories__/BreadcrumbsBar.stories.scss"],names:[],mappings:"AACE,iDACE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,gBAAA,CACA,QAAA,CACA,WAAA,CAGF,uCACE,YAAA,CACA,kBAAA,CACA,QAAA,CACA,gBAAA,CAGF,wCACE,iBAAA,CACA,eAAA,CACA,cAAA,CACA,gBAAA,CAGF,iDACE,YAAA,CACA,qBAAA,CACA,oDACE,sBAAA,CACA,SAAA,CACA,QAAA",sourcesContent:[".monday-storybook-breadcrumbs-bar {\n  &_inline-wrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 8px 12px;\n    gap: 12px;\n    width: 320px;\n  }\n\n  &_line {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding-left: 5px;\n  }\n\n  &_title {\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 24px;\n  }\n\n  &_column-wrapper {\n    display: flex;\n    flex-direction: column;\n    ol {\n      padding-inline-start: 0;\n      padding: 0;\n      margin: 0;\n    }\n  }\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/components/BreadcrumbsBar/__stories__/assets/person3.png":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"static/media/person3.7ed20eb8.png"}}]);