# This workflow will ensure all PRs are labeled so we can later create releases

name: Prerelease

on:
  push:
    branches:
      - "*"
      - "!master"

jobs:
  prerelease:
    if: "contains(github.event.head_commit.message, '[prerelease]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Run Setup
        uses: ./.github/actions/setup
        with:
          npm_token: ${{secrets.npm_token}}
      - uses: ./.github/actions/git-creds
      - name: Run Tests
        shell: bash
        run: yarn lerna run test --since
      - name: Run Build
        shell: bash
        run: lerna run build --since=origin/master
      - name: Run prerelease
        shell: bash
        id: prerelease
        run: |
          if [ lerna publish --canary --preid ${{ env.id }} --dist-tag ${{ env.tag }} --no-git-tag-version --no-commit-hooks --yes ]; then
            echo "prerelease_version=$id" >> "$GITHUB_OUTPUT"
            echo "is_released=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_released=false" >> "$GITHUB_OUTPUT"
            echo "Skipping prerelease. Nothing to prerelease as Lerna didn't detect any changes."
          fi
        env:
          id: ${{ github.ref_name }}-${{ github.run_id }}-${{ github.run_attempt }}
          tag: ${{ github.run_id }}-${{ github.run_attempt }}
      - name: Create comment with prerelease version details
        uses: peter-evans/create-or-update-comment@v1
        if: steps.prerelease.outputs.is_released == 'true'
        env:
          version: ${{ steps.prerelease.outputs.prerelease_version }}
        with:
          issue-number: ${{ github.event.number }}
          body: |
            A new prerelease version of this PR has been published: `${{ env.version }}`

            ```
            // To install this prerelease version using npm, please run the following command in your terminal:
            npm i monday-ui-react-core@${{ env.version }}
            // If you prefer using Yarn, you can use the following command instead:
            yarn add monday-ui-react-core@${{ env.version }}
            ```
