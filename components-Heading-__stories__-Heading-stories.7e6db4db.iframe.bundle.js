"use strict";(globalThis.webpackChunkmonday_ui_react_core=globalThis.webpackChunkmonday_ui_react_core||[]).push([[3891],{"./src/components/Heading/__stories__/Heading.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BuiltInPageHeaderNotEditable:()=>BuiltInPageHeaderNotEditable,Colors:()=>Colors,Overflow:()=>Overflow,Overview:()=>Overview,TypesAndWeights:()=>TypesAndWeights,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Heading_stories});__webpack_require__("../../node_modules/react/index.js");var createStoryMetaSettingsDecorator=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),Flex=__webpack_require__("./src/components/Flex/Flex.tsx"),createComponentTemplate=__webpack_require__("../storybook-blocks/dist/src/functions/createComponentTemplate.js"),Heading=__webpack_require__("./src/components/Heading/Heading.tsx");var Tooltip_interactions=__webpack_require__("./src/components/Tooltip/__tests__/Tooltip.interactions.ts");const headingOverflowSuite=(0,__webpack_require__("./src/tests/interactions-utils.ts").Ld)({tests:[async function isTooltipAppearOnHover(canvas){await(0,Tooltip_interactions.K)(canvas,(async()=>await canvas.findByTestId("ellipsis-title-example")))}]});var Divider=__webpack_require__("./src/components/Divider/Divider.tsx"),Search=__webpack_require__("./src/components/Search/Search.tsx"),Checkbox=__webpack_require__("./src/components/Checkbox/Checkbox.tsx"),Button=__webpack_require__("./src/components/Button/Button.tsx"),Custom=__webpack_require__("./src/components/Icon/Icons/components/Custom.tsx"),injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),Heading_stories_module=__webpack_require__("../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/Heading/__stories__/Heading.stories.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(Heading_stories_module.A,options);const _stories_Heading_stories_module=Heading_stories_module.A&&Heading_stories_module.A.locals?Heading_stories_module.A.locals:void 0;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const metaSettings=(0,createStoryMetaSettingsDecorator.B)({component:Heading.A,iconPropNamesArray:[],actionPropsArray:[]}),textTemplate=(0,createComponentTemplate.M)(Heading.A),Heading_stories={parameters:{storySource:{source:'import React from "react";\nimport { createStoryMetaSettingsDecorator } from "../../../storybook";\nimport Flex from "../../Flex/Flex";\nimport { createComponentTemplate } from "vibe-storybook-components";\nimport Heading from "../Heading";\nimport { ONE_LINE_ELLIPSIS_TEST_ID, OVERFLOW_TITLE_CONTAINER_ID } from "../__tests__/headingTestsConstants";\nimport { headingOverflowSuite } from "../__tests__/Heading.interactions";\nimport Divider from "../../Divider/Divider";\nimport Search from "../../Search/Search";\nimport Checkbox from "../../Checkbox/Checkbox";\nimport Button from "../../Button/Button";\nimport { Custom } from "../../Icon/Icons";\nimport styles from "./Heading.stories.module.scss";\n\nconst metaSettings = createStoryMetaSettingsDecorator({\n  component: Heading,\n  iconPropNamesArray: [], // List props that are typed as icons here\n  actionPropsArray: [] // List the component\'s actions here\n});\n\nconst textTemplate = createComponentTemplate(Heading);\n\nexport default {\n  title: "Text/Heading",\n  component: Heading,\n  argTypes: metaSettings.argTypes,\n  decorators: metaSettings.decorators\n};\n\nexport const Overview = {\n  render: textTemplate.bind({}),\n  name: "Overview",\n\n  args: {\n    children: "Title"\n  }\n};\n\nexport const TypesAndWeights = {\n  render: () => (\n    <Flex\n      gap={Flex.gaps.LARGE}\n      direction={Flex.directions.COLUMN}\n      justify={Flex.justify.START}\n      align={Flex.align.START}\n    >\n      <Flex\n        gap={Flex.gaps.SMALL}\n        direction={Flex.directions.COLUMN}\n        justify={Flex.justify.START}\n        align={Flex.align.START}\n      >\n        <Heading type={Heading.types.H1} weight={Heading.weights.BOLD}>\n          Bold H1 title\n        </Heading>\n        <Heading type={Heading.types.H1} weight={Heading.weights.MEDIUM}>\n          Medium H1 title\n        </Heading>\n        <Heading type={Heading.types.H1} weight={Heading.weights.NORMAL}>\n          Normal H1 title\n        </Heading>\n        <Heading type={Heading.types.H1} weight={Heading.weights.LIGHT}>\n          Light H1 title\n        </Heading>\n      </Flex>\n      <Flex\n        gap={Flex.gaps.SMALL}\n        direction={Flex.directions.COLUMN}\n        justify={Flex.justify.START}\n        align={Flex.align.START}\n      >\n        <Heading type={Heading.types.H2} weight={Heading.weights.BOLD}>\n          Bold H2 title\n        </Heading>\n        <Heading type={Heading.types.H2} weight={Heading.weights.MEDIUM}>\n          Medium H2 title\n        </Heading>\n        <Heading type={Heading.types.H2} weight={Heading.weights.NORMAL}>\n          Normal H2 title\n        </Heading>\n        <Heading type={Heading.types.H2} weight={Heading.weights.LIGHT}>\n          Light H2 title\n        </Heading>\n      </Flex>\n      <Flex\n        gap={Flex.gaps.SMALL}\n        direction={Flex.directions.COLUMN}\n        justify={Flex.justify.START}\n        align={Flex.align.START}\n      >\n        <Heading type={Heading.types.H3} weight={Heading.weights.BOLD}>\n          Bold H3 title\n        </Heading>\n        <Heading type={Heading.types.H3} weight={Heading.weights.MEDIUM}>\n          Medium H3 title\n        </Heading>\n        <Heading type={Heading.types.H3} weight={Heading.weights.NORMAL}>\n          Normal H3 title\n        </Heading>\n        <Heading type={Heading.types.H3} weight={Heading.weights.LIGHT}>\n          Light H3 title\n        </Heading>\n      </Flex>\n    </Flex>\n  ),\n\n  name: "Types and weights"\n};\n\nexport const Colors = {\n  render: () => (\n    <Flex direction={Flex.directions.COLUMN} align={Flex.align.START} gap={Flex.gaps.SMALL}>\n      <Heading type={Heading.types.H2} color={Heading.colors.PRIMARY}>\n        Primary title\n      </Heading>\n      <Heading type={Heading.types.H2} color={Heading.colors.SECONDARY}>\n        Secondary title\n      </Heading>\n      <Heading\n        element="div"\n        type={Heading.types.H2}\n        className={styles.primaryBackground}\n        align={Heading.align.CENTER}\n        color={Heading.colors.ON_PRIMARY}\n      >\n        On primary title\n      </Heading>\n      <Heading\n        element="div"\n        type={Heading.types.H2}\n        className={styles.invertedBackground}\n        align={Heading.align.CENTER}\n        color={Heading.colors.ON_INVERTED}\n      >\n        On inverted title\n      </Heading>\n    </Flex>\n  ),\n\n  name: "Colors"\n};\n\nexport const Overflow = {\n  render: () => (\n    <Flex\n      id={OVERFLOW_TITLE_CONTAINER_ID}\n      direction={Flex.directions.COLUMN}\n      gap={Flex.gaps.MEDIUM}\n      align={Flex.align.STRETCH}\n      style={{ width: "480px" }}\n    >\n      <Heading type={Heading.types.H2}>Heading without overflow</Heading>\n      <Heading\n        type={Heading.types.H2}\n        /**for testing purposes**/\n        data-testid={ONE_LINE_ELLIPSIS_TEST_ID}\n        tooltipProps={{\n          containerSelector: `#${OVERFLOW_TITLE_CONTAINER_ID}`\n        }}\n      >\n        Heading with ellipsis and tooltip when hovering\n      </Heading>\n      <div>\n        <Heading type={Heading.types.H2} maxLines={2}>\n          Heading with two lines overflow and a tooltip. Heading with two lines overflow and a tooltip. Heading with two\n          lines overflow and a tooltip.\n        </Heading>\n      </div>\n    </Flex>\n  ),\n\n  name: "Overflow",\n  play: headingOverflowSuite\n};\n\nexport const BuiltInPageHeaderNotEditable = {\n  render: () => (\n    <div\n      style={{\n        width: "100%"\n      }}\n    >\n      <Heading type={Heading.types.H1} id="my-work-id">\n        My work\n      </Heading>\n      <Divider className={styles.pageDivider} />\n      <Flex align={Flex.align.CENTER} gap={Flex.gaps.SMALL} aria-labelledby="my-work-id">\n        <Search className={styles.pageHeaderSearch} placeholder="Search" />\n        <Checkbox label="Hide done items" checked />\n        <Button leftIcon={Custom} kind={Button.kinds.TERTIARY}>\n          Customize\n        </Button>\n      </Flex>\n    </div>\n  ),\n\n  name: "Built-in page header (not editable)"\n};\n',locationsMap:{overview:{startLoc:{col:24,line:30},endLoc:{col:1,line:37},startBody:{col:24,line:30},endBody:{col:1,line:37}},"types-and-weights":{startLoc:{col:31,line:39},endLoc:{col:1,line:108},startBody:{col:31,line:39},endBody:{col:1,line:108}},colors:{startLoc:{col:22,line:110},endLoc:{col:1,line:141},startBody:{col:22,line:110},endBody:{col:1,line:141}},overflow:{startLoc:{col:24,line:143},endLoc:{col:1,line:174},startBody:{col:24,line:143},endBody:{col:1,line:174}},"built-in-page-header-not-editable":{startLoc:{col:44,line:176},endLoc:{col:1,line:198},startBody:{col:44,line:176},endBody:{col:1,line:198}}}}},title:"Text/Heading",component:Heading.A,argTypes:metaSettings.argTypes,decorators:metaSettings.decorators},Overview={render:textTemplate.bind({}),name:"Overview",args:{children:"Title"}},TypesAndWeights={render:()=>(0,jsx_runtime.jsxs)(Flex.A,{gap:Flex.A.gaps.LARGE,direction:Flex.A.directions.COLUMN,justify:Flex.A.justify.START,align:Flex.A.align.START,children:[(0,jsx_runtime.jsxs)(Flex.A,{gap:Flex.A.gaps.SMALL,direction:Flex.A.directions.COLUMN,justify:Flex.A.justify.START,align:Flex.A.align.START,children:[(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H1,weight:Heading.A.weights.BOLD,children:"Bold H1 title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H1,weight:Heading.A.weights.MEDIUM,children:"Medium H1 title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H1,weight:Heading.A.weights.NORMAL,children:"Normal H1 title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H1,weight:Heading.A.weights.LIGHT,children:"Light H1 title"})]}),(0,jsx_runtime.jsxs)(Flex.A,{gap:Flex.A.gaps.SMALL,direction:Flex.A.directions.COLUMN,justify:Flex.A.justify.START,align:Flex.A.align.START,children:[(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H2,weight:Heading.A.weights.BOLD,children:"Bold H2 title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H2,weight:Heading.A.weights.MEDIUM,children:"Medium H2 title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H2,weight:Heading.A.weights.NORMAL,children:"Normal H2 title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H2,weight:Heading.A.weights.LIGHT,children:"Light H2 title"})]}),(0,jsx_runtime.jsxs)(Flex.A,{gap:Flex.A.gaps.SMALL,direction:Flex.A.directions.COLUMN,justify:Flex.A.justify.START,align:Flex.A.align.START,children:[(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H3,weight:Heading.A.weights.BOLD,children:"Bold H3 title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H3,weight:Heading.A.weights.MEDIUM,children:"Medium H3 title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H3,weight:Heading.A.weights.NORMAL,children:"Normal H3 title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H3,weight:Heading.A.weights.LIGHT,children:"Light H3 title"})]})]}),name:"Types and weights"},Colors={render:()=>(0,jsx_runtime.jsxs)(Flex.A,{direction:Flex.A.directions.COLUMN,align:Flex.A.align.START,gap:Flex.A.gaps.SMALL,children:[(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H2,color:Heading.A.colors.PRIMARY,children:"Primary title"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H2,color:Heading.A.colors.SECONDARY,children:"Secondary title"}),(0,jsx_runtime.jsx)(Heading.A,{element:"div",type:Heading.A.types.H2,className:_stories_Heading_stories_module.primaryBackground,align:Heading.A.align.CENTER,color:Heading.A.colors.ON_PRIMARY,children:"On primary title"}),(0,jsx_runtime.jsx)(Heading.A,{element:"div",type:Heading.A.types.H2,className:_stories_Heading_stories_module.invertedBackground,align:Heading.A.align.CENTER,color:Heading.A.colors.ON_INVERTED,children:"On inverted title"})]}),name:"Colors"},Overflow={render:()=>(0,jsx_runtime.jsxs)(Flex.A,{id:"overflow-title-examples-container",direction:Flex.A.directions.COLUMN,gap:Flex.A.gaps.MEDIUM,align:Flex.A.align.STRETCH,style:{width:"480px"},children:[(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H2,children:"Heading without overflow"}),(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H2,"data-testid":"ellipsis-title-example",tooltipProps:{containerSelector:"#overflow-title-examples-container"},children:"Heading with ellipsis and tooltip when hovering"}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H2,maxLines:2,children:"Heading with two lines overflow and a tooltip. Heading with two lines overflow and a tooltip. Heading with two lines overflow and a tooltip."})})]}),name:"Overflow",play:headingOverflowSuite},BuiltInPageHeaderNotEditable={render:()=>(0,jsx_runtime.jsxs)("div",{style:{width:"100%"},children:[(0,jsx_runtime.jsx)(Heading.A,{type:Heading.A.types.H1,id:"my-work-id",children:"My work"}),(0,jsx_runtime.jsx)(Divider.A,{className:_stories_Heading_stories_module.pageDivider}),(0,jsx_runtime.jsxs)(Flex.A,{align:Flex.A.align.CENTER,gap:Flex.A.gaps.SMALL,"aria-labelledby":"my-work-id",children:[(0,jsx_runtime.jsx)(Search.A,{className:_stories_Heading_stories_module.pageHeaderSearch,placeholder:"Search"}),(0,jsx_runtime.jsx)(Checkbox.A,{label:"Hide done items",checked:!0}),(0,jsx_runtime.jsx)(Button.A,{leftIcon:Custom.A,kind:Button.A.kinds.TERTIARY,children:"Customize"})]})]}),name:"Built-in page header (not editable)"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: textTemplate.bind({}),\n  name: "Overview",\n  args: {\n    children: "Title"\n  }\n}',...Overview.parameters?.docs?.source}}},TypesAndWeights.parameters={...TypesAndWeights.parameters,docs:{...TypesAndWeights.parameters?.docs,source:{originalSource:'{\n  render: () => <Flex gap={Flex.gaps.LARGE} direction={Flex.directions.COLUMN} justify={Flex.justify.START} align={Flex.align.START}>\n      <Flex gap={Flex.gaps.SMALL} direction={Flex.directions.COLUMN} justify={Flex.justify.START} align={Flex.align.START}>\n        <Heading type={Heading.types.H1} weight={Heading.weights.BOLD}>\n          Bold H1 title\n        </Heading>\n        <Heading type={Heading.types.H1} weight={Heading.weights.MEDIUM}>\n          Medium H1 title\n        </Heading>\n        <Heading type={Heading.types.H1} weight={Heading.weights.NORMAL}>\n          Normal H1 title\n        </Heading>\n        <Heading type={Heading.types.H1} weight={Heading.weights.LIGHT}>\n          Light H1 title\n        </Heading>\n      </Flex>\n      <Flex gap={Flex.gaps.SMALL} direction={Flex.directions.COLUMN} justify={Flex.justify.START} align={Flex.align.START}>\n        <Heading type={Heading.types.H2} weight={Heading.weights.BOLD}>\n          Bold H2 title\n        </Heading>\n        <Heading type={Heading.types.H2} weight={Heading.weights.MEDIUM}>\n          Medium H2 title\n        </Heading>\n        <Heading type={Heading.types.H2} weight={Heading.weights.NORMAL}>\n          Normal H2 title\n        </Heading>\n        <Heading type={Heading.types.H2} weight={Heading.weights.LIGHT}>\n          Light H2 title\n        </Heading>\n      </Flex>\n      <Flex gap={Flex.gaps.SMALL} direction={Flex.directions.COLUMN} justify={Flex.justify.START} align={Flex.align.START}>\n        <Heading type={Heading.types.H3} weight={Heading.weights.BOLD}>\n          Bold H3 title\n        </Heading>\n        <Heading type={Heading.types.H3} weight={Heading.weights.MEDIUM}>\n          Medium H3 title\n        </Heading>\n        <Heading type={Heading.types.H3} weight={Heading.weights.NORMAL}>\n          Normal H3 title\n        </Heading>\n        <Heading type={Heading.types.H3} weight={Heading.weights.LIGHT}>\n          Light H3 title\n        </Heading>\n      </Flex>\n    </Flex>,\n  name: "Types and weights"\n}',...TypesAndWeights.parameters?.docs?.source}}},Colors.parameters={...Colors.parameters,docs:{...Colors.parameters?.docs,source:{originalSource:'{\n  render: () => <Flex direction={Flex.directions.COLUMN} align={Flex.align.START} gap={Flex.gaps.SMALL}>\n      <Heading type={Heading.types.H2} color={Heading.colors.PRIMARY}>\n        Primary title\n      </Heading>\n      <Heading type={Heading.types.H2} color={Heading.colors.SECONDARY}>\n        Secondary title\n      </Heading>\n      <Heading element="div" type={Heading.types.H2} className={styles.primaryBackground} align={Heading.align.CENTER} color={Heading.colors.ON_PRIMARY}>\n        On primary title\n      </Heading>\n      <Heading element="div" type={Heading.types.H2} className={styles.invertedBackground} align={Heading.align.CENTER} color={Heading.colors.ON_INVERTED}>\n        On inverted title\n      </Heading>\n    </Flex>,\n  name: "Colors"\n}',...Colors.parameters?.docs?.source}}},Overflow.parameters={...Overflow.parameters,docs:{...Overflow.parameters?.docs,source:{originalSource:'{\n  render: () => <Flex id={OVERFLOW_TITLE_CONTAINER_ID} direction={Flex.directions.COLUMN} gap={Flex.gaps.MEDIUM} align={Flex.align.STRETCH} style={{\n    width: "480px"\n  }}>\n      <Heading type={Heading.types.H2}>Heading without overflow</Heading>\n      <Heading type={Heading.types.H2}\n    /**for testing purposes**/ data-testid={ONE_LINE_ELLIPSIS_TEST_ID} tooltipProps={{\n      containerSelector: `#${OVERFLOW_TITLE_CONTAINER_ID}`\n    }}>\n        Heading with ellipsis and tooltip when hovering\n      </Heading>\n      <div>\n        <Heading type={Heading.types.H2} maxLines={2}>\n          Heading with two lines overflow and a tooltip. Heading with two lines overflow and a tooltip. Heading with two\n          lines overflow and a tooltip.\n        </Heading>\n      </div>\n    </Flex>,\n  name: "Overflow",\n  play: headingOverflowSuite\n}',...Overflow.parameters?.docs?.source}}},BuiltInPageHeaderNotEditable.parameters={...BuiltInPageHeaderNotEditable.parameters,docs:{...BuiltInPageHeaderNotEditable.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "100%"\n  }}>\n      <Heading type={Heading.types.H1} id="my-work-id">\n        My work\n      </Heading>\n      <Divider className={styles.pageDivider} />\n      <Flex align={Flex.align.CENTER} gap={Flex.gaps.SMALL} aria-labelledby="my-work-id">\n        <Search className={styles.pageHeaderSearch} placeholder="Search" />\n        <Checkbox label="Hide done items" checked />\n        <Button leftIcon={Custom} kind={Button.kinds.TERTIARY}>\n          Customize\n        </Button>\n      </Flex>\n    </div>,\n  name: "Built-in page header (not editable)"\n}',...BuiltInPageHeaderNotEditable.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","TypesAndWeights","Colors","Overflow","BuiltInPageHeaderNotEditable"]},"../storybook-blocks/dist/src/functions/createComponentTemplate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>r});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function r(r){return e=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(r,Object.assign({},e))}},"./src/components/Tooltip/__tests__/Tooltip.interactions.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>testHoverTooltipTrigger});var _storybook_jest__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@storybook/jest/dist/index.mjs"),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/testing-library/dist/index.mjs"),_tests_test_ids_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/tests/test-ids-utils.ts");async function testHoverTooltipTrigger(canvas,getHoverableElement){let tooltipData=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};await(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.fm)((async()=>{const hoverableElement=await getHoverableElement();_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.hover(hoverableElement);const{id,content,showDelay=100}=tooltipData;await new Promise((resolve=>{setTimeout(resolve,showDelay)}));const tooltipElement=void 0!==content?canvas.getByText(content):canvas.getByTestId((0,_tests_test_ids_utils__WEBPACK_IMPORTED_MODULE_1__.G)(_tests_test_ids_utils__WEBPACK_IMPORTED_MODULE_1__.w.TOOLTIP,id));(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(tooltipElement).toBeInTheDocument(),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.unhover(hoverableElement)}),{timeout:1e3})}},"./src/tests/interactions-utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Jw:()=>expectActiveElementToHavePartialText,Ld:()=>interactionSuite,NX:()=>getByLabelText,Tf:()=>getByText,Xr:()=>getFirstByClassName,Z8:()=>clearText,cb:()=>delay,gy:()=>getByRole,h5:()=>getByTestId,jp:()=>clickElement,kD:()=>typeMultipleTimes,lI:()=>waitForElementVisible,vZ:()=>pressNavigationKey,wQ:()=>typeText});var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/testing-library/dist/index.mjs"),_testing_library_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@testing-library/react/dist/@testing-library/react.esm.js"),_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/tests/constants.ts"),_storybook_jest__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@storybook/jest/dist/index.mjs");const testFunctionWrapper=testFunc=>async _ref=>{let{canvasElement,args}=_ref;const canvas=getWithin(canvasElement);return testFunc(canvas,args)},clearText=async element=>{_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.clear(element)};function logFunctionStart(name){(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(` ➡️ ${name}`).toBeDefined()}function getWithin(canvasOrValidTestElement){if(canvasOrValidTestElement instanceof HTMLElement){const result=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasOrValidTestElement);if(result instanceof Error)throw result;return result}if(canvasOrValidTestElement.getByRole)return canvasOrValidTestElement}const interactionSuite=_ref3=>{let{beforeEach=null,beforeAll=null,skip=!1,tests,afterEach=null,afterAll=null}=_ref3;return async _ref4=>{let{canvasElement,args}=_ref4;if(!skip){beforeAll&&(logFunctionStart("Before all:"),await testFunctionWrapper(beforeAll)({canvasElement,args}));for(const test of tests){const fnName=test.name;beforeEach&&(logFunctionStart(`Before: ${fnName}`),await testFunctionWrapper(beforeEach)({canvasElement,args})),logFunctionStart(`Running : ${fnName}`),await testFunctionWrapper(test)({canvasElement,args}),afterEach&&(logFunctionStart(`After: ${fnName}`),await testFunctionWrapper(afterEach)({canvasElement,args}))}afterAll&&(logFunctionStart("After all:"),await testFunctionWrapper(afterAll)({canvasElement,args}))}}},getByTestId=(rootElement,dataTestId)=>getWithin(rootElement).getByTestId(dataTestId),getFirstByClassName=className=>document.getElementsByClassName(className)[0],getByRole=function(rootElement,role){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return getWithin(rootElement).getByRole(role,options)},getByLabelText=(rootElement,text)=>getWithin(rootElement).getByLabelText(text),getByText=function(rootElement,text){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return getWithin(rootElement).getByText(text,options)},clickElement=element=>_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.click(element),typeText=async function(element,text){let waitForDebounceMs=arguments.length>2&&void 0!==arguments[2]?arguments[2]:250;const promise=_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.type(element,text,{delay:50}),result=await promise;return await delay(waitForDebounceMs),result},expectActiveElementToHavePartialText=text=>{(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(document.activeElement).toHaveTextContent(text)},pressNavigationKey=async function(){let command=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_constants__WEBPACK_IMPORTED_MODULE_3__.G.TAB,waitForDebounceMs=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const promise=command===_constants__WEBPACK_IMPORTED_MODULE_3__.G.TAB?_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.tab():_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard(command),result=await promise;return await delay(waitForDebounceMs),result};function delay(timeout){return new Promise((resolve=>{if(!timeout)return resolve(void 0);setTimeout(resolve,timeout)}))}const waitForElementVisible=getterFunc=>new Promise((resolve=>{let element;(0,_testing_library_react__WEBPACK_IMPORTED_MODULE_1__.fm)((async()=>{element=await getterFunc(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(element).toBeVisible()})).then((()=>{resolve(element)}))})),typeMultipleTimes=async function(text,count){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{delay:70};text=text.repeat(count),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard(text,options)}},"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/Heading/__stories__/Heading.stories.module.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".Heading-stories-module_pageDivider{margin-block:var(--sb-spacing-medium)}.Heading-stories-module_primaryBackground{width:210px;padding:var(--sb-spacing-small);background-color:var(--sb-primary-color)}.Heading-stories-module_invertedBackground{width:210px;padding:var(--sb-spacing-small);background-color:var(--sb-inverted-color-background)}.Heading-stories-module_pageHeaderCommands{margin-top:var(--sb-spacing-large)}.Heading-stories-module_pageHeaderCommands>*{margin-left:var(--sb-spacing-small)}.Heading-stories-module_pageHeaderSearch{width:146px}","",{version:3,sources:["webpack://./src/components/Heading/__stories__/Heading.stories.module.scss"],names:[],mappings:"AAKA,oCACE,qCAAA,CAGF,0CARE,WAAA,CACA,+BAAA,CASA,wCAAA,CAGF,2CAbE,WAAA,CACA,+BAAA,CAcA,oDAAA,CAGF,2CACE,kCAAA,CACA,6CACE,mCAAA,CAGJ,yCACE,WAAA",sourcesContent:["@mixin color-rectangle-example {\n  width: 210px;\n  padding: var(--sb-spacing-small);\n}\n\n.pageDivider {\n  margin-block: var(--sb-spacing-medium);\n}\n\n.primaryBackground {\n  @include color-rectangle-example;\n  background-color: var(--sb-primary-color);\n}\n\n.invertedBackground {\n  @include color-rectangle-example;\n  background-color: var(--sb-inverted-color-background);\n}\n\n.pageHeaderCommands {\n  margin-top: var(--sb-spacing-large);\n  & > * {\n    margin-left: var(--sb-spacing-small);\n  }\n}\n.pageHeaderSearch {\n  width: 146px;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={pageDivider:"Heading-stories-module_pageDivider",primaryBackground:"Heading-stories-module_primaryBackground",invertedBackground:"Heading-stories-module_invertedBackground",pageHeaderCommands:"Heading-stories-module_pageHeaderCommands",pageHeaderSearch:"Heading-stories-module_pageHeaderSearch"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);