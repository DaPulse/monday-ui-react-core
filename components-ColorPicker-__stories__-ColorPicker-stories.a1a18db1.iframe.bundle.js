"use strict";(globalThis.webpackChunkmonday_ui_react_core=globalThis.webpackChunkmonday_ui_react_core||[]).push([[131],{"./src/components/ColorPicker/__stories__/ColorPicker.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NoColor:()=>NoColor,Overview:()=>Overview,Selected:()=>Selected,SelectedIcon:()=>SelectedIcon,Shapes:()=>Shapes,TextIndication:()=>TextIndication,WithIndicator:()=>WithIndicator,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ColorPicker_stories});var ColorPicker=__webpack_require__("./src/components/ColorPicker/ColorPicker.tsx"),TextColorIndicator=__webpack_require__("./src/components/Icon/Icons/components/TextColorIndicator.tsx"),Check=__webpack_require__("./src/components/Icon/Icons/components/Check.tsx"),createStoryMetaSettingsDecorator=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),dist=__webpack_require__("../../node_modules/@storybook/testing-library/dist/index.mjs"),colors_vars_map=__webpack_require__("./src/utils/colors-vars-map.ts"),interactions_helper=__webpack_require__("./src/__tests__/interactions-helper.ts"),constants=__webpack_require__("./src/tests/constants.ts"),interactions_utils=__webpack_require__("./src/tests/interactions-utils.ts"),jest_dist=__webpack_require__("../../node_modules/@storybook/jest/dist/index.mjs"),test_ids_utils=__webpack_require__("./src/tests/test-ids-utils.ts");const noColorInteractionSuite=(0,interactions_utils.Ld)({tests:[async function selectAndResetWithKeyboard(canvas){await clickOnColor(canvas,colors_vars_map.D.BRIGHT_GREEN),await expectColorToBeSelected(canvas,colors_vars_map.D.BRIGHT_GREEN),await(0,interactions_utils.kD)("{arrowDown}",7),await expectColorToBeActive(canvas,colors_vars_map.D.STEEL),await dist.Q4.keyboard(" "),await expectColorToBeActive(canvas,colors_vars_map.D.STEEL),await expectColorToBeSelected(canvas,colors_vars_map.D.STEEL),await expectColorToBeNotSelected(canvas,colors_vars_map.D.BRIGHT_GREEN),await dist.Q4.keyboard("{arrowDown}"),await expectColorToBeNotActive(canvas,colors_vars_map.D.STEEL),await dist.Q4.keyboard("{Enter}"),await expectColorToBeNotSelected(canvas,colors_vars_map.D.STEEL)}],afterEach:async()=>{await(0,interactions_helper.S)()}});const multiSelectionInteractionSuite=(0,interactions_utils.Ld)({tests:[async function selectMultiColorsWithKeyboardAndMouse(canvas){await clickOnColor(canvas,colors_vars_map.D.DARK_PURPLE),await expectColorToBeSelected(canvas,colors_vars_map.D.DARK_PURPLE),await(0,interactions_utils.kD)("{arrowRight}",3),await expectColorToBeActive(canvas,colors_vars_map.D.INDIGO),await dist.Q4.keyboard("{Enter}"),await expectColorToBeSelected(canvas,colors_vars_map.D.DARK_PURPLE),await expectColorToBeSelected(canvas,colors_vars_map.D.INDIGO),await expectColorToBeActive(canvas,colors_vars_map.D.INDIGO),await clickOnColor(canvas,colors_vars_map.D.DARK_PURPLE),await expectColorToBeNotSelected(canvas,colors_vars_map.D.DARK_PURPLE),await expectColorToBeSelected(canvas,colors_vars_map.D.INDIGO),await expectColorToBeNotActive(canvas,colors_vars_map.D.DARK_PURPLE),await expectColorToBeNotActive(canvas,colors_vars_map.D.INDIGO)}],afterEach:async()=>{await(0,interactions_helper.S)()}});async function clickOnColor(canvas,color){const element=await findColorItem(canvas,color),toClick=await(0,dist.ux)(element).findByLabelText(color);await dist.Q4.click(toClick)}async function expectColorToBeSelected(canvas,color){const element=await findColorItem(canvas,color);(0,jest_dist.E)(element.getAttribute("class")).toContain("selectedColor")}async function expectColorToBeNotSelected(canvas,color){const element=await findColorItem(canvas,color);(0,jest_dist.E)(element.getAttribute("class")).not.toContain("selectedColor")}async function expectColorToBeActive(canvas,color){const element=await findColorItem(canvas,color);(0,jest_dist.E)(element.getAttribute("class")).toContain("active")}async function expectColorToBeNotActive(canvas,color){const element=await findColorItem(canvas,color);(0,jest_dist.E)(element.getAttribute("class")).not.toContain("active")}async function findColorItem(canvas,color){return await canvas.findByTestId((0,test_ids_utils.G)(constants.w.COLOR_PICKER_ITEM,color))}var createComponentTemplate=__webpack_require__("../storybook-blocks/dist/src/functions/createComponentTemplate.js");const metaSettings=(0,createStoryMetaSettingsDecorator.B)({component:ColorPicker.A,enumPropNamesArray:["colorStyle","colorSize","colorShape"],iconPropNamesArray:["ColorIndicatorIcon","SelectedIndicatorIcon","NoColorIcon"],actionPropsArray:[{name:"onSave",linkedToPropValue:"value"}]}),ColorPicker_stories={parameters:{storySource:{source:'import ColorPicker from "../ColorPicker";\nimport TextColorIndicator from "../../Icon/Icons/components/TextColorIndicator";\nimport Check from "../../Icon/Icons/components/Check";\nimport { createStoryMetaSettingsDecorator } from "../../../storybook";\nimport { multiSelectionInteractionSuite, noColorInteractionSuite } from "../__tests__/ColorPicker.interactions.js";\nimport { createComponentTemplate } from "vibe-storybook-components";\n\nconst metaSettings = createStoryMetaSettingsDecorator({\n  component: ColorPicker,\n  enumPropNamesArray: ["colorStyle", "colorSize", "colorShape"],\n  iconPropNamesArray: ["ColorIndicatorIcon", "SelectedIndicatorIcon", "NoColorIcon"],\n  actionPropsArray: [{ name: "onSave", linkedToPropValue: "value" }]\n});\n\nexport default {\n  title: "Pickers/ColorPicker",\n  component: ColorPicker,\n  argTypes: metaSettings.argTypes,\n  decorators: metaSettings.decorators\n};\n\nconst colorPickerTemplate = createComponentTemplate(ColorPicker);\n\nexport const Overview = {\n  render: colorPickerTemplate.bind({}),\n  name: "Overview"\n};\n\nexport const WithIndicator = {\n  render: colorPickerTemplate.bind({}),\n  args: {\n    ColorIndicatorIcon: TextColorIndicator\n  },\n  name: "With Indicator"\n};\n\nexport const TextIndication = {\n  render: colorPickerTemplate.bind({}),\n  args: {\n    ColorIndicatorIcon: TextColorIndicator,\n    value: "peach",\n    shouldRenderIndicatorWithoutBackground: true\n  },\n  name: "Text Indication"\n};\n\nexport const Selected = {\n  render: colorPickerTemplate.bind({}),\n  args: {\n    ColorIndicatorIcon: TextColorIndicator,\n    colorStyle: ColorPicker.COLOR_STYLES.SELECTED\n  },\n  name: "Selected"\n};\n\nexport const NoColor = {\n  render: colorPickerTemplate.bind({}),\n  args: {\n    noColorText: "Clear color"\n  },\n  name: "No color",\n  play: noColorInteractionSuite\n};\n\nexport const SelectedIcon = {\n  render: colorPickerTemplate.bind({}),\n  args: {\n    isMultiselect: true,\n    SelectedIndicatorIcon: Check,\n    value: "peach"\n  },\n  name: "Selected icon",\n  play: multiSelectionInteractionSuite\n};\n\nexport const Shapes = {\n  render: colorPickerTemplate.bind({}),\n  args: {\n    colorShape: ColorPicker.colorShapes.CIRCLE\n  },\n  name: "Shapes"\n};\n',locationsMap:{overview:{startLoc:{col:24,line:24},endLoc:{col:1,line:27},startBody:{col:24,line:24},endBody:{col:1,line:27}},"with-indicator":{startLoc:{col:29,line:29},endLoc:{col:1,line:35},startBody:{col:29,line:29},endBody:{col:1,line:35}},"text-indication":{startLoc:{col:30,line:37},endLoc:{col:1,line:45},startBody:{col:30,line:37},endBody:{col:1,line:45}},selected:{startLoc:{col:24,line:47},endLoc:{col:1,line:54},startBody:{col:24,line:47},endBody:{col:1,line:54}},"no-color":{startLoc:{col:23,line:56},endLoc:{col:1,line:63},startBody:{col:23,line:56},endBody:{col:1,line:63}},"selected-icon":{startLoc:{col:28,line:65},endLoc:{col:1,line:74},startBody:{col:28,line:65},endBody:{col:1,line:74}},shapes:{startLoc:{col:22,line:76},endLoc:{col:1,line:82},startBody:{col:22,line:76},endBody:{col:1,line:82}}}}},title:"Pickers/ColorPicker",component:ColorPicker.A,argTypes:metaSettings.argTypes,decorators:metaSettings.decorators},colorPickerTemplate=(0,createComponentTemplate.M)(ColorPicker.A),Overview={render:colorPickerTemplate.bind({}),name:"Overview"},WithIndicator={render:colorPickerTemplate.bind({}),args:{ColorIndicatorIcon:TextColorIndicator.A},name:"With Indicator"},TextIndication={render:colorPickerTemplate.bind({}),args:{ColorIndicatorIcon:TextColorIndicator.A,value:"peach",shouldRenderIndicatorWithoutBackground:!0},name:"Text Indication"},Selected={render:colorPickerTemplate.bind({}),args:{ColorIndicatorIcon:TextColorIndicator.A,colorStyle:ColorPicker.A.COLOR_STYLES.SELECTED},name:"Selected"},NoColor={render:colorPickerTemplate.bind({}),args:{noColorText:"Clear color"},name:"No color",play:noColorInteractionSuite},SelectedIcon={render:colorPickerTemplate.bind({}),args:{isMultiselect:!0,SelectedIndicatorIcon:Check.A,value:"peach"},name:"Selected icon",play:multiSelectionInteractionSuite},Shapes={render:colorPickerTemplate.bind({}),args:{colorShape:ColorPicker.A.colorShapes.CIRCLE},name:"Shapes"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: colorPickerTemplate.bind({}),\n  name: "Overview"\n}',...Overview.parameters?.docs?.source}}},WithIndicator.parameters={...WithIndicator.parameters,docs:{...WithIndicator.parameters?.docs,source:{originalSource:'{\n  render: colorPickerTemplate.bind({}),\n  args: {\n    ColorIndicatorIcon: TextColorIndicator\n  },\n  name: "With Indicator"\n}',...WithIndicator.parameters?.docs?.source}}},TextIndication.parameters={...TextIndication.parameters,docs:{...TextIndication.parameters?.docs,source:{originalSource:'{\n  render: colorPickerTemplate.bind({}),\n  args: {\n    ColorIndicatorIcon: TextColorIndicator,\n    value: "peach",\n    shouldRenderIndicatorWithoutBackground: true\n  },\n  name: "Text Indication"\n}',...TextIndication.parameters?.docs?.source}}},Selected.parameters={...Selected.parameters,docs:{...Selected.parameters?.docs,source:{originalSource:'{\n  render: colorPickerTemplate.bind({}),\n  args: {\n    ColorIndicatorIcon: TextColorIndicator,\n    colorStyle: ColorPicker.COLOR_STYLES.SELECTED\n  },\n  name: "Selected"\n}',...Selected.parameters?.docs?.source}}},NoColor.parameters={...NoColor.parameters,docs:{...NoColor.parameters?.docs,source:{originalSource:'{\n  render: colorPickerTemplate.bind({}),\n  args: {\n    noColorText: "Clear color"\n  },\n  name: "No color",\n  play: noColorInteractionSuite\n}',...NoColor.parameters?.docs?.source}}},SelectedIcon.parameters={...SelectedIcon.parameters,docs:{...SelectedIcon.parameters?.docs,source:{originalSource:'{\n  render: colorPickerTemplate.bind({}),\n  args: {\n    isMultiselect: true,\n    SelectedIndicatorIcon: Check,\n    value: "peach"\n  },\n  name: "Selected icon",\n  play: multiSelectionInteractionSuite\n}',...SelectedIcon.parameters?.docs?.source}}},Shapes.parameters={...Shapes.parameters,docs:{...Shapes.parameters?.docs,source:{originalSource:'{\n  render: colorPickerTemplate.bind({}),\n  args: {\n    colorShape: ColorPicker.colorShapes.CIRCLE\n  },\n  name: "Shapes"\n}',...Shapes.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","WithIndicator","TextIndication","Selected","NoColor","SelectedIcon","Shapes"]},"../storybook-blocks/dist/src/functions/createComponentTemplate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>r});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function r(r){return e=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(r,Object.assign({},e))}},"./src/__tests__/interactions-helper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>resetFocus});var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/testing-library/dist/index.mjs");async function resetFocus(){const focusTrap=document.querySelector("[data-testid=focusTrap]");await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.click(focusTrap)}},"./src/tests/interactions-utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Jw:()=>expectActiveElementToHavePartialText,Ld:()=>interactionSuite,NX:()=>getByLabelText,Tf:()=>getByText,Xr:()=>getFirstByClassName,Z8:()=>clearText,cb:()=>delay,gy:()=>getByRole,h5:()=>getByTestId,jp:()=>clickElement,kD:()=>typeMultipleTimes,lI:()=>waitForElementVisible,vZ:()=>pressNavigationKey,wQ:()=>typeText});var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/testing-library/dist/index.mjs"),_testing_library_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@testing-library/react/dist/@testing-library/react.esm.js"),_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/tests/constants.ts"),_storybook_jest__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@storybook/jest/dist/index.mjs");const testFunctionWrapper=testFunc=>async _ref=>{let{canvasElement,args}=_ref;const canvas=getWithin(canvasElement);return testFunc(canvas,args)},clearText=async element=>{_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.clear(element)};function logFunctionStart(name){(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(` ➡️ ${name}`).toBeDefined()}function getWithin(canvasOrValidTestElement){if(canvasOrValidTestElement instanceof HTMLElement){const result=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasOrValidTestElement);if(result instanceof Error)throw result;return result}if(canvasOrValidTestElement.getByRole)return canvasOrValidTestElement}const interactionSuite=_ref3=>{let{beforeEach=null,beforeAll=null,skip=!1,tests,afterEach=null,afterAll=null}=_ref3;return async _ref4=>{let{canvasElement,args}=_ref4;if(!skip){beforeAll&&(logFunctionStart("Before all:"),await testFunctionWrapper(beforeAll)({canvasElement,args}));for(const test of tests){const fnName=test.name;beforeEach&&(logFunctionStart(`Before: ${fnName}`),await testFunctionWrapper(beforeEach)({canvasElement,args})),logFunctionStart(`Running : ${fnName}`),await testFunctionWrapper(test)({canvasElement,args}),afterEach&&(logFunctionStart(`After: ${fnName}`),await testFunctionWrapper(afterEach)({canvasElement,args}))}afterAll&&(logFunctionStart("After all:"),await testFunctionWrapper(afterAll)({canvasElement,args}))}}},getByTestId=(rootElement,dataTestId)=>getWithin(rootElement).getByTestId(dataTestId),getFirstByClassName=className=>document.getElementsByClassName(className)[0],getByRole=function(rootElement,role){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return getWithin(rootElement).getByRole(role,options)},getByLabelText=(rootElement,text)=>getWithin(rootElement).getByLabelText(text),getByText=function(rootElement,text){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return getWithin(rootElement).getByText(text,options)},clickElement=element=>_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.click(element),typeText=async function(element,text){let waitForDebounceMs=arguments.length>2&&void 0!==arguments[2]?arguments[2]:250;const promise=_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.type(element,text,{delay:50}),result=await promise;return await delay(waitForDebounceMs),result},expectActiveElementToHavePartialText=text=>{(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(document.activeElement).toHaveTextContent(text)},pressNavigationKey=async function(){let command=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_constants__WEBPACK_IMPORTED_MODULE_3__.G.TAB,waitForDebounceMs=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const promise=command===_constants__WEBPACK_IMPORTED_MODULE_3__.G.TAB?_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.tab():_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard(command),result=await promise;return await delay(waitForDebounceMs),result};function delay(timeout){return new Promise((resolve=>{if(!timeout)return resolve(void 0);setTimeout(resolve,timeout)}))}const waitForElementVisible=getterFunc=>new Promise((resolve=>{let element;(0,_testing_library_react__WEBPACK_IMPORTED_MODULE_1__.fm)((async()=>{element=await getterFunc(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(element).toBeVisible()})).then((()=>{resolve(element)}))})),typeMultipleTimes=async function(text,count){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{delay:70};text=text.repeat(count),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard(text,options)}}}]);