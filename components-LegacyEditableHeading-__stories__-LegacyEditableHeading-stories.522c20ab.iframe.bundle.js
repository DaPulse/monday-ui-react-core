"use strict";(globalThis.webpackChunkmonday_ui_react_core=globalThis.webpackChunkmonday_ui_react_core||[]).push([[6931],{"./src/components/LegacyEditableHeading/__stories__/LegacyEditableHeading.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Colors:()=>Colors,Overview:()=>Overview,Placeholder:()=>Placeholder,TextHighlight:()=>TextHighlight,Types:()=>Types,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LegacyEditableHeading_stories});__webpack_require__("../../node_modules/react/index.js");var LegacyEditableHeading=__webpack_require__("./src/components/LegacyEditableHeading/LegacyEditableHeading.tsx"),createStoryMetaSettingsDecorator=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),dist=__webpack_require__("../../node_modules/@storybook/jest/dist/index.mjs"),interactions_utils=__webpack_require__("./src/tests/interactions-utils.ts"),constants=__webpack_require__("./src/tests/constants.ts"),interactions_helper=__webpack_require__("./src/__tests__/interactions-helper.ts");const overviewPlaySuite=(0,interactions_utils.Ld)({tests:[async function textSimpleText(canvas){const editableHeadingInput=await(async canvas=>{await(0,interactions_helper.S)();const editableHeadingElement=(0,interactions_utils.h5)(canvas,constants.w.CLICKABLE);return(0,interactions_utils.jp)(editableHeadingElement),await(0,interactions_utils.cb)(50),(0,interactions_utils.h5)(canvas,constants.w.EDITABLE_INPUT)})(canvas);await(0,interactions_utils.Z8)(editableHeadingInput);const text="This heading is editable";await(0,interactions_utils.wQ)(editableHeadingInput,text),(0,dist.E)(editableHeadingInput).toHaveAttribute("value",text);const editableHeading=await(async canvas=>(await(0,interactions_helper.S)(),(0,interactions_utils.h5)(canvas,constants.w.HEADING)))(canvas);(0,dist.E)(editableHeading).toHaveTextContent(text)}]});try{overviewPlaySuite.displayName="overviewPlaySuite",overviewPlaySuite.__docgenInfo={description:"",displayName:"overviewPlaySuite",props:{canvasElement:{defaultValue:null,description:"",name:"canvasElement",required:!0,type:{name:'Screen<typeof import("/home/runner/work/vibe/vibe/node_modules/@testing-library/react/node_modules/@testing-library/dom/types/queries")>'}},args:{defaultValue:null,description:"",name:"args",required:!0,type:{name:"Record<string, any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/LegacyEditableHeading/__tests__/LegacyEditableHeading-interactions.tsx#overviewPlaySuite"]={docgenInfo:overviewPlaySuite.__docgenInfo,name:"overviewPlaySuite",path:"src/components/LegacyEditableHeading/__tests__/LegacyEditableHeading-interactions.tsx#overviewPlaySuite"})}catch(__react_docgen_typescript_loader_error){}var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const metaSettings=(0,createStoryMetaSettingsDecorator.B)({component:LegacyEditableHeading.A,enumPropNamesArray:["size","type"]}),LegacyEditableHeading_stories={parameters:{storySource:{source:'import React from "react";\nimport EditableHeading from "../LegacyEditableHeading";\nimport { createStoryMetaSettingsDecorator } from "../../../storybook";\nimport { overviewPlaySuite } from "../__tests__/LegacyEditableHeading-interactions";\n\nconst metaSettings = createStoryMetaSettingsDecorator({\n  component: EditableHeading,\n  enumPropNamesArray: ["size", "type"]\n});\n\nexport default {\n  title: "Inputs/LegacyEditableHeading [deprecated]",\n  component: EditableHeading,\n  argTypes: metaSettings.argTypes,\n  decorators: metaSettings.decorators\n};\n\nexport const Overview = {\n  render: () => <EditableHeading value="This heading is editable" type={EditableHeading.types.h1} />,\n  name: "Overview",\n  play: overviewPlaySuite\n};\n\nexport const Types = {\n  render: () => (\n    <>\n      {" "}\n      <EditableHeading type={EditableHeading.types.h1} value="H1 Header" />\n      <EditableHeading type={EditableHeading.types.h2} value="H2 Header" />\n      <EditableHeading type={EditableHeading.types.h3} value="H3 Header" />\n      <EditableHeading type={EditableHeading.types.h4} value="H4 Header" />\n      <EditableHeading type={EditableHeading.types.h5} value="H5 Header" />\n      <EditableHeading type={EditableHeading.types.h6} value="H6 Header" />\n    </>\n  ),\n  name: "Types"\n};\n\nexport const Placeholder = {\n  render: () => <EditableHeading type={EditableHeading.types.h1} placeholder="H1 Placeholder" />,\n  name: "Placeholder"\n};\n\nexport const TextHighlight = {\n  render: () => (\n    <>\n      <EditableHeading type={EditableHeading.types.h1} value="H1 Header" highlightTerm="head" />\n      <EditableHeading type={EditableHeading.types.h2} value="H2 Header" highlightTerm="head" />\n      <EditableHeading type={EditableHeading.types.h3} value="H3 Header" highlightTerm="head" />\n    </>\n  ),\n  name: "Text Highlight"\n};\n\nexport const Colors = {\n  render: () => (\n    <>\n      <EditableHeading type={EditableHeading.types.h1} value="H1 Header" customColor="blue" />\n      <EditableHeading type={EditableHeading.types.h2} value="H2 Header" customColor="red" />\n      <EditableHeading type={EditableHeading.types.h3} value="H3 Header" highlightTerm="head" customColor="#AA33FF" />\n    </>\n  ),\n  name: "Colors"\n};\n',locationsMap:{overview:{startLoc:{col:24,line:18},endLoc:{col:1,line:22},startBody:{col:24,line:18},endBody:{col:1,line:22}},types:{startLoc:{col:21,line:24},endLoc:{col:1,line:37},startBody:{col:21,line:24},endBody:{col:1,line:37}},placeholder:{startLoc:{col:27,line:39},endLoc:{col:1,line:42},startBody:{col:27,line:39},endBody:{col:1,line:42}},"text-highlight":{startLoc:{col:29,line:44},endLoc:{col:1,line:53},startBody:{col:29,line:44},endBody:{col:1,line:53}},colors:{startLoc:{col:22,line:55},endLoc:{col:1,line:64},startBody:{col:22,line:55},endBody:{col:1,line:64}}}}},title:"Inputs/LegacyEditableHeading [deprecated]",component:LegacyEditableHeading.A,argTypes:metaSettings.argTypes,decorators:metaSettings.decorators},Overview={render:()=>(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{value:"This heading is editable",type:LegacyEditableHeading.A.types.h1}),name:"Overview",play:overviewPlaySuite},Types={render:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[" ",(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h1,value:"H1 Header"}),(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h2,value:"H2 Header"}),(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h3,value:"H3 Header"}),(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h4,value:"H4 Header"}),(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h5,value:"H5 Header"}),(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h6,value:"H6 Header"})]}),name:"Types"},Placeholder={render:()=>(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h1,placeholder:"H1 Placeholder"}),name:"Placeholder"},TextHighlight={render:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h1,value:"H1 Header",highlightTerm:"head"}),(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h2,value:"H2 Header",highlightTerm:"head"}),(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h3,value:"H3 Header",highlightTerm:"head"})]}),name:"Text Highlight"},Colors={render:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h1,value:"H1 Header",customColor:"blue"}),(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h2,value:"H2 Header",customColor:"red"}),(0,jsx_runtime.jsx)(LegacyEditableHeading.A,{type:LegacyEditableHeading.A.types.h3,value:"H3 Header",highlightTerm:"head",customColor:"#AA33FF"})]}),name:"Colors"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: () => <EditableHeading value="This heading is editable" type={EditableHeading.types.h1} />,\n  name: "Overview",\n  play: overviewPlaySuite\n}',...Overview.parameters?.docs?.source}}},Types.parameters={...Types.parameters,docs:{...Types.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      {" "}\n      <EditableHeading type={EditableHeading.types.h1} value="H1 Header" />\n      <EditableHeading type={EditableHeading.types.h2} value="H2 Header" />\n      <EditableHeading type={EditableHeading.types.h3} value="H3 Header" />\n      <EditableHeading type={EditableHeading.types.h4} value="H4 Header" />\n      <EditableHeading type={EditableHeading.types.h5} value="H5 Header" />\n      <EditableHeading type={EditableHeading.types.h6} value="H6 Header" />\n    </>,\n  name: "Types"\n}',...Types.parameters?.docs?.source}}},Placeholder.parameters={...Placeholder.parameters,docs:{...Placeholder.parameters?.docs,source:{originalSource:'{\n  render: () => <EditableHeading type={EditableHeading.types.h1} placeholder="H1 Placeholder" />,\n  name: "Placeholder"\n}',...Placeholder.parameters?.docs?.source}}},TextHighlight.parameters={...TextHighlight.parameters,docs:{...TextHighlight.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <EditableHeading type={EditableHeading.types.h1} value="H1 Header" highlightTerm="head" />\n      <EditableHeading type={EditableHeading.types.h2} value="H2 Header" highlightTerm="head" />\n      <EditableHeading type={EditableHeading.types.h3} value="H3 Header" highlightTerm="head" />\n    </>,\n  name: "Text Highlight"\n}',...TextHighlight.parameters?.docs?.source}}},Colors.parameters={...Colors.parameters,docs:{...Colors.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <EditableHeading type={EditableHeading.types.h1} value="H1 Header" customColor="blue" />\n      <EditableHeading type={EditableHeading.types.h2} value="H2 Header" customColor="red" />\n      <EditableHeading type={EditableHeading.types.h3} value="H3 Header" highlightTerm="head" customColor="#AA33FF" />\n    </>,\n  name: "Colors"\n}',...Colors.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Types","Placeholder","TextHighlight","Colors"]},"./src/__tests__/interactions-helper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>resetFocus});var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/testing-library/dist/index.mjs");async function resetFocus(){const focusTrap=document.querySelector("[data-testid=focusTrap]");await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.click(focusTrap)}},"./src/tests/interactions-utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Jw:()=>expectActiveElementToHavePartialText,Ld:()=>interactionSuite,NX:()=>getByLabelText,Tf:()=>getByText,Xr:()=>getFirstByClassName,Z8:()=>clearText,cb:()=>delay,gy:()=>getByRole,h5:()=>getByTestId,jp:()=>clickElement,kD:()=>typeMultipleTimes,lI:()=>waitForElementVisible,vZ:()=>pressNavigationKey,wQ:()=>typeText});var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/testing-library/dist/index.mjs"),_testing_library_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@testing-library/react/dist/@testing-library/react.esm.js"),_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/tests/constants.ts"),_storybook_jest__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@storybook/jest/dist/index.mjs");const testFunctionWrapper=testFunc=>async _ref=>{let{canvasElement,args}=_ref;const canvas=getWithin(canvasElement);return testFunc(canvas,args)},clearText=async element=>{_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.clear(element)};function logFunctionStart(name){(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(` ➡️ ${name}`).toBeDefined()}function getWithin(canvasOrValidTestElement){if(canvasOrValidTestElement instanceof HTMLElement){const result=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasOrValidTestElement);if(result instanceof Error)throw result;return result}if(canvasOrValidTestElement.getByRole)return canvasOrValidTestElement}const interactionSuite=_ref3=>{let{beforeEach=null,beforeAll=null,skip=!1,tests,afterEach=null,afterAll=null}=_ref3;return async _ref4=>{let{canvasElement,args}=_ref4;if(!skip){beforeAll&&(logFunctionStart("Before all:"),await testFunctionWrapper(beforeAll)({canvasElement,args}));for(const test of tests){const fnName=test.name;beforeEach&&(logFunctionStart(`Before: ${fnName}`),await testFunctionWrapper(beforeEach)({canvasElement,args})),logFunctionStart(`Running : ${fnName}`),await testFunctionWrapper(test)({canvasElement,args}),afterEach&&(logFunctionStart(`After: ${fnName}`),await testFunctionWrapper(afterEach)({canvasElement,args}))}afterAll&&(logFunctionStart("After all:"),await testFunctionWrapper(afterAll)({canvasElement,args}))}}},getByTestId=(rootElement,dataTestId)=>getWithin(rootElement).getByTestId(dataTestId),getFirstByClassName=className=>document.getElementsByClassName(className)[0],getByRole=function(rootElement,role){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return getWithin(rootElement).getByRole(role,options)},getByLabelText=(rootElement,text)=>getWithin(rootElement).getByLabelText(text),getByText=function(rootElement,text){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return getWithin(rootElement).getByText(text,options)},clickElement=element=>_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.click(element),typeText=async function(element,text){let waitForDebounceMs=arguments.length>2&&void 0!==arguments[2]?arguments[2]:250;const promise=_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.type(element,text,{delay:50}),result=await promise;return await delay(waitForDebounceMs),result},expectActiveElementToHavePartialText=text=>{(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(document.activeElement).toHaveTextContent(text)},pressNavigationKey=async function(){let command=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_constants__WEBPACK_IMPORTED_MODULE_3__.G.TAB,waitForDebounceMs=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const promise=command===_constants__WEBPACK_IMPORTED_MODULE_3__.G.TAB?_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.tab():_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard(command),result=await promise;return await delay(waitForDebounceMs),result};function delay(timeout){return new Promise((resolve=>{if(!timeout)return resolve(void 0);setTimeout(resolve,timeout)}))}const waitForElementVisible=getterFunc=>new Promise((resolve=>{let element;(0,_testing_library_react__WEBPACK_IMPORTED_MODULE_1__.fm)((async()=>{element=await getterFunc(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.E)(element).toBeVisible()})).then((()=>{resolve(element)}))})),typeMultipleTimes=async function(text,count){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{delay:70};text=text.repeat(count),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard(text,options)}}}]);