"use strict";(globalThis.webpackChunkmonday_ui_react_core=globalThis.webpackChunkmonday_ui_react_core||[]).push([[1628],{"./src/components/Table/Table/__stories__/Table.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Borders:()=>Borders,HighlightedRow:()=>HighlightedRow,Loading:()=>Loading,Overview:()=>Overview,Scroll:()=>Scroll,Sizes:()=>Sizes,StickyColumn:()=>StickyColumn,TableHeaderFunctionality:()=>TableHeaderFunctionality,VirtualizedScroll:()=>VirtualizedScroll,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_Table__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Table/Table/Table.tsx"),_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Table/TableHeader/TableHeader.tsx"),_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Table/TableHeaderCell/TableHeaderCell.tsx"),_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/Table/TableBody/TableBody.tsx"),_TableVirtualizedBody_TableVirtualizedBody__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx"),_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/Table/TableRow/TableRow.tsx"),_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/Table/TableCell/TableCell.tsx"),_Label_Label__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./src/components/Label/Label.tsx"),_Flex_Flex__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./src/components/Flex/Flex.tsx"),_storybook__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/components/Table/Table/__stories__/Table.stories.helpers.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var metaSettings=(0,_storybook__WEBPACK_IMPORTED_MODULE_2__.B)({component:_Table__WEBPACK_IMPORTED_MODULE_3__.A,ignoreControlsPropNamesArray:["children","errorState","emptyState"]});const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'import React, { useState } from "react";\nimport Table, { ITableColumn, ITableProps } from "../Table";\nimport TableHeader from "../../TableHeader/TableHeader";\nimport TableHeaderCell from "../../TableHeaderCell/TableHeaderCell";\nimport TableBody from "../../TableBody/TableBody";\nimport TableVirtualizedBody from "../../TableVirtualizedBody/TableVirtualizedBody";\nimport TableRow from "../../TableRow/TableRow";\nimport TableCell from "../../TableCell/TableCell";\nimport Label from "../../../Label/Label";\nimport Flex from "../../../Flex/Flex";\nimport { createStoryMetaSettingsDecorator } from "../../../../storybook";\nimport {\n  emailColumns,\n  emailTableData,\n  priorityColumnToLabelColor,\n  scrollTableColumns,\n  scrollTableData,\n  sort,\n  statusColumnToLabelColor,\n  stickyColumns,\n  stickyTableData,\n  TableAvatar,\n  TableEmptyState,\n  TableErrorState,\n  virtualizedScrollTableColumns,\n  virtualizedScrollTableData\n} from "./Table.stories.helpers";\n\nconst metaSettings = createStoryMetaSettingsDecorator({\n  component: Table,\n  ignoreControlsPropNamesArray: ["children", "errorState", "emptyState"]\n});\n\nexport default {\n  title: "Data display/Table",\n  component: Table,\n  subcomponents: {\n    TableHeader,\n    TableHeaderCell,\n    TableBody,\n    TableRow,\n    TableCell,\n    TableVirtualizedBody\n  },\n  argTypes: metaSettings.argTypes,\n  decorators: metaSettings.decorators\n};\n\nconst tableTemplate = (args: ITableProps) => <Table {...args}></Table>;\n\nexport const Overview = {\n  render: tableTemplate.bind({}),\n  args: {\n    errorState: <TableErrorState />,\n    emptyState: <TableEmptyState />,\n    columns: [\n      {\n        id: "sentOn",\n        title: "Sent on",\n        width: 150,\n        loadingStateType: "medium-text"\n      },\n      {\n        id: "subject",\n        title: "Subject",\n        loadingStateType: "long-text"\n      },\n      {\n        id: "sentBy",\n        title: "Sent by",\n\n        width: {\n          min: 120,\n          max: 200\n        },\n\n        infoContent: "This is the sender",\n        loadingStateType: "circle"\n      },\n      {\n        id: "status",\n        title: "Status",\n        width: 150,\n        infoContent: "Info content for the status column",\n        loadingStateType: "medium-text"\n      },\n      {\n        id: "emailsSent",\n        title: "Emails sent",\n        width: 150,\n        loadingStateType: "medium-text"\n      }\n    ],\n    children: [\n      <TableHeader>\n        {[\n          {\n            id: "sentOn",\n            title: "Sent on",\n            width: 150,\n            loadingStateType: "medium-text"\n          },\n          {\n            id: "subject",\n            title: "Subject",\n            loadingStateType: "long-text"\n          },\n          {\n            id: "sentBy",\n            title: "Sent by",\n\n            width: {\n              min: 120,\n              max: 200\n            },\n\n            infoContent: "This is the sender",\n            loadingStateType: "circle"\n          },\n          {\n            id: "status",\n            title: "Status",\n            width: 150,\n            infoContent: "Info content for the status column",\n            loadingStateType: "medium-text"\n          },\n          {\n            id: "emailsSent",\n            title: "Emails sent",\n            width: 150,\n            loadingStateType: "medium-text"\n          }\n        ].map((headerCell, index) => (\n          <TableHeaderCell key={index} title={headerCell.title} />\n        ))}\n      </TableHeader>,\n      <TableBody>\n        {[\n          {\n            id: "1",\n            sentOn: "2020-01-01",\n            sentBy: "John Doe",\n            subject: "Lorem ipsum dolor",\n            status: "Sent",\n            emailsSent: 100\n          },\n          {\n            id: "3",\n            sentOn: "2023-03-03",\n            sentBy: "Some Person",\n            subject:\n              "This is the subject This is the subject This is the subject This is the subject This is the subject This is the subject",\n            status: "Sent",\n            emailsSent: 999\n          },\n          {\n            id: "2",\n            sentOn: "2022-02-02",\n            sentBy: "Other Name",\n            subject: "This is the subject",\n            status: "Sent",\n            emailsSent: 99\n          }\n        ].map(rowItem => (\n          <TableRow key={rowItem.id}>\n            <TableCell>{rowItem.sentOn}</TableCell>\n            <TableCell>{rowItem.subject}</TableCell>\n            <TableCell>\n              <TableAvatar text={rowItem.sentBy} />\n            </TableCell>\n            <TableCell>\n              <Label text={rowItem.status} color={Label.colors.POSITIVE} isAnimationDisabled />\n            </TableCell>\n            <TableCell>{rowItem.emailsSent}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    ]\n  },\n  name: "Overview"\n};\n\nexport const Sizes = {\n  render: () => {\n    const columns: ITableColumn[] = [\n      {\n        id: "sentOn",\n        title: "Sent on",\n        width: 180,\n        loadingStateType: "medium-text"\n      },\n      {\n        id: "subject",\n        title: "Subject",\n        width: 200,\n        loadingStateType: "long-text"\n      }\n    ];\n    const data = [\n      {\n        id: 1,\n        sentOn: "2020-01-01",\n        subject: "Lorem ipsum dolor"\n      },\n      {\n        id: 2,\n        sentOn: "2022-02-02",\n        subject: "This is the subject"\n      }\n    ];\n    return (\n      <>\n        <Table\n          style={{ width: "auto" }}\n          size={Table.sizes.MEDIUM}\n          errorState={<TableErrorState />}\n          emptyState={<TableEmptyState />}\n          columns={columns}\n        >\n          <TableHeader>\n            {columns.map((headerCell, index) => (\n              <TableHeaderCell\n                key={index}\n                title={headerCell.title}\n                icon={headerCell.icon}\n                infoContent={headerCell.infoContent}\n              />\n            ))}\n          </TableHeader>\n          <TableBody>\n            {data.map(rowItem => (\n              <TableRow key={rowItem.id}>\n                <TableCell>{rowItem.sentOn}</TableCell>\n                <TableCell>{rowItem.subject}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Table\n          style={{ width: "auto" }}\n          size={Table.sizes.LARGE}\n          errorState={<TableErrorState />}\n          emptyState={<TableEmptyState />}\n          columns={columns}\n        >\n          <TableHeader>\n            {columns.map((headerCell, index) => (\n              <TableHeaderCell\n                key={index}\n                title={headerCell.title}\n                icon={headerCell.icon}\n                infoContent={headerCell.infoContent}\n              />\n            ))}\n          </TableHeader>\n          <TableBody>\n            {data.map(rowItem => (\n              <TableRow key={rowItem.id}>\n                <TableCell>{rowItem.sentOn}</TableCell>\n                <TableCell>{rowItem.subject}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </>\n    );\n  },\n  decorators: [\n    (Story: typeof React.Component) => (\n      <Flex align={Flex.align.START} justify={Flex.justify.SPACE_BETWEEN} style={{ flex: 1 }}>\n        <Story />\n      </Flex>\n    )\n  ],\n  name: "Sizes"\n};\n\nexport const Borders = {\n  render: () => {\n    const columns: ITableColumn[] = [\n      {\n        id: "sentOn",\n        title: "Sent on",\n        width: 150,\n        loadingStateType: "medium-text"\n      },\n      {\n        id: "subject",\n        title: "Subject",\n        loadingStateType: "long-text"\n      },\n      {\n        id: "sentBy",\n        title: "Sent by",\n\n        width: {\n          min: 120,\n          max: 200\n        },\n\n        infoContent: "This is the sender",\n        loadingStateType: "circle"\n      },\n      {\n        id: "status",\n        title: "Status",\n        width: 150,\n        infoContent: "Info content for the status column",\n        loadingStateType: "medium-text"\n      },\n      {\n        id: "emailsSent",\n        title: "Emails sent",\n        width: 150,\n        loadingStateType: "medium-text"\n      }\n    ];\n    const data = [\n      {\n        id: "1",\n        sentOn: "2020-01-01",\n        sentBy: "John Doe",\n        subject: "Lorem ipsum dolor",\n        status: "Sent",\n        emailsSent: 100\n      },\n      {\n        id: "3",\n        sentOn: "2023-03-03",\n        sentBy: "Some Person",\n        subject:\n          "This is the subject This is the subject This is the subject This is the subject This is the subject This is the subject",\n        status: "Sent",\n        emailsSent: 999\n      },\n      {\n        id: "2",\n        sentOn: "2022-02-02",\n        sentBy: "Other Name",\n        subject: "This is the subject",\n        status: "Sent",\n        emailsSent: 99\n      }\n    ];\n    return (\n      <>\n        <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={columns}>\n          <TableHeader>\n            {columns.map((headerCell, index) => (\n              <TableHeaderCell key={index} title={headerCell.title} />\n            ))}\n          </TableHeader>\n          <TableBody>\n            {data.map(rowItem => (\n              <TableRow key={rowItem.id}>\n                <TableCell>{rowItem.sentOn}</TableCell>\n                <TableCell>{rowItem.subject}</TableCell>\n                <TableCell>\n                  <TableAvatar text={rowItem.sentBy} />\n                </TableCell>\n                <TableCell>\n                  <Label text={rowItem.status} color={Label.colors.POSITIVE} isAnimationDisabled />\n                </TableCell>\n                <TableCell>{rowItem.emailsSent}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={columns} withoutBorder>\n          <TableHeader>\n            {columns.map((headerCell, index) => (\n              <TableHeaderCell key={index} title={headerCell.title} />\n            ))}\n          </TableHeader>\n          <TableBody>\n            {data.map(rowItem => (\n              <TableRow key={rowItem.id}>\n                <TableCell>{rowItem.sentOn}</TableCell>\n                <TableCell>{rowItem.subject}</TableCell>\n                <TableCell>\n                  <TableAvatar text={rowItem.sentBy} />\n                </TableCell>\n                <TableCell>\n                  <Label text={rowItem.status} color={Label.colors.POSITIVE} isAnimationDisabled />\n                </TableCell>\n                <TableCell>{rowItem.emailsSent}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </>\n    );\n  },\n  decorators: [\n    (Story: typeof React.Component) => (\n      <Flex direction={Flex.directions.COLUMN} gap={40}>\n        <Story />\n      </Flex>\n    )\n  ],\n  name: "Borders"\n};\n\nexport const TableHeaderFunctionality = {\n  render: () => {\n    const [tableData, setTableData] = useState(emailTableData);\n    const [sorting, setSorting] = useState<{ [key: string]: "asc" | "desc" | "none" }>({});\n\n    const onSort = (columnId: string, sortState: "asc" | "desc" | "none") => {\n      setSorting({\n        [columnId]: sortState\n      });\n\n      setTableData(sort(columnId as keyof (typeof tableData)[number], sortState, tableData));\n    };\n\n    return (\n      <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={emailColumns}>\n        <TableHeader>\n          {emailColumns.map((headerCell, index) => (\n            <TableHeaderCell\n              key={index}\n              title={headerCell.title}\n              icon={headerCell.icon}\n              infoContent={headerCell.infoContent}\n              onSortClicked={sortState => onSort(headerCell.id, sortState)}\n              sortState={sorting[headerCell.id]}\n            />\n          ))}\n        </TableHeader>\n        <TableBody>\n          {tableData.map(rowItem => (\n            <TableRow key={rowItem.id}>\n              <TableCell>{rowItem.sentOn}</TableCell>\n              <TableCell>{rowItem.subject}</TableCell>\n              <TableCell>\n                <TableAvatar text={rowItem.sentBy} />\n              </TableCell>\n              <TableCell>\n                <Label text={rowItem.status} isAnimationDisabled color={Label.colors.POSITIVE} />\n              </TableCell>\n              <TableCell>{rowItem.emailsSent}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  },\n\n  name: "Table Header Functionality"\n};\n\nexport const Loading = {\n  render: () => (\n    <Table\n      dataState={{\n        isLoading: true\n      }}\n      errorState={<TableErrorState />}\n      emptyState={<TableEmptyState />}\n      columns={emailColumns}\n    >\n      <TableHeader>\n        {emailColumns.map((headerCell, index) => (\n          <TableHeaderCell key={index} title={headerCell.title} />\n        ))}\n      </TableHeader>\n      <TableBody>\n        {emailTableData.map(rowItem => (\n          <TableRow key={rowItem.id}>\n            <TableCell>{rowItem.sentOn}</TableCell>\n            <TableCell>{rowItem.subject}</TableCell>\n            <TableCell>\n              <TableAvatar text={rowItem.sentBy} />\n            </TableCell>\n            <TableCell>\n              <Label text={rowItem.status} color={Label.colors.POSITIVE} isAnimationDisabled />\n            </TableCell>\n            <TableCell>{rowItem.emailsSent}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  ),\n\n  name: "Loading"\n};\n\nexport const Scroll = {\n  render: () => (\n    <div\n      style={{\n        height: 220,\n        width: "100%"\n      }}\n    >\n      <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={scrollTableColumns}>\n        <TableHeader>\n          {scrollTableColumns.map((headerCell, index) => (\n            <TableHeaderCell key={index} title={headerCell.title} />\n          ))}\n        </TableHeader>\n        <TableBody>\n          {scrollTableData.map(rowItem => (\n            <TableRow key={rowItem.id}>\n              <TableCell>{rowItem.sentOn}</TableCell>\n              <TableCell>\n                <Label\n                  text={rowItem.priority}\n                  color={priorityColumnToLabelColor[rowItem.priority]}\n                  isAnimationDisabled\n                />\n              </TableCell>\n              <TableCell>{rowItem.subject}</TableCell>\n              <TableCell>\n                <TableAvatar text={rowItem.sentBy} />\n              </TableCell>\n              <TableCell>\n                <Label text={rowItem.status} color={statusColumnToLabelColor[rowItem.status]} isAnimationDisabled />\n              </TableCell>\n              <TableCell>{rowItem.emailsSent}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  ),\n\n  name: "Scroll"\n};\n\nexport const VirtualizedScroll = {\n  render: () => {\n    const Row = ({ num, text }: (typeof virtualizedScrollTableData)[number]) => {\n      return (\n        <TableRow>\n          <TableCell>{num}</TableCell>\n          <TableCell>{text}</TableCell>\n        </TableRow>\n      );\n    };\n\n    return (\n      <Table\n        errorState={<TableErrorState />}\n        emptyState={<TableEmptyState />}\n        columns={virtualizedScrollTableColumns}\n        style={{\n          height: 250\n        }}\n      >\n        <TableHeader>\n          {virtualizedScrollTableColumns.map((cell, index) => (\n            <TableHeaderCell key={index} {...cell} />\n          ))}\n        </TableHeader>\n        <TableVirtualizedBody rowRenderer={Row} items={virtualizedScrollTableData} />\n      </Table>\n    );\n  },\n\n  name: "Virtualized Scroll"\n};\n\nexport const StickyColumn = {\n  render: () => {\n    return (\n      <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={stickyColumns}>\n        <TableHeader>\n          {stickyColumns.map((headerCell, index) => (\n            <TableHeaderCell sticky={index === 0} key={index} title={headerCell.title} />\n          ))}\n        </TableHeader>\n        <TableBody>\n          {stickyTableData.map(rowItem => (\n            <TableRow key={rowItem.id}>\n              <TableCell sticky>{rowItem.projectName}</TableCell>\n              <TableCell>\n                <Label text={rowItem.status} color={statusColumnToLabelColor[rowItem.status]} isAnimationDisabled />\n              </TableCell>\n              <TableCell>{rowItem.description}</TableCell>\n              <TableCell>{rowItem.createdOn}</TableCell>\n              <TableCell>{rowItem.emailsSent}</TableCell>\n              <TableCell>{rowItem.owner}</TableCell>\n              <TableCell>{rowItem.priority}</TableCell>\n              <TableCell>{rowItem.category}</TableCell>\n              <TableCell>{rowItem.dueDate}</TableCell>\n              <TableCell>{rowItem.comments}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  },\n\n  name: "Sticky column"\n};\n\nexport const HighlightedRow = {\n  render: () => {\n    const shouldRowBeHighlighted = (rowItem: (typeof emailTableData)[number]) => {\n      return rowItem.id === "2";\n    };\n\n    return (\n      <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={emailColumns}>\n        <TableHeader>\n          {emailColumns.map((headerCell, index) => (\n            <TableHeaderCell key={index} title={headerCell.title} />\n          ))}\n        </TableHeader>\n        <TableBody>\n          {emailTableData.map(rowItem => (\n            <TableRow key={rowItem.id} highlighted={shouldRowBeHighlighted(rowItem)}>\n              <TableCell>{rowItem.sentOn}</TableCell>\n              <TableCell>{rowItem.subject}</TableCell>\n              <TableCell>\n                <TableAvatar text={rowItem.sentBy} />\n              </TableCell>\n              <TableCell>\n                <Label text={rowItem.status} isAnimationDisabled color={Label.colors.POSITIVE} />\n              </TableCell>\n              <TableCell>{rowItem.emailsSent}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  },\n\n  name: "Highlighted row"\n};\n',locationsMap:{overview:{startLoc:{col:24,line:51},endLoc:{col:1,line:181},startBody:{col:24,line:51},endBody:{col:1,line:181}},sizes:{startLoc:{col:21,line:183},endLoc:{col:1,line:276},startBody:{col:21,line:183},endBody:{col:1,line:276}},borders:{startLoc:{col:23,line:278},endLoc:{col:1,line:402},startBody:{col:23,line:278},endBody:{col:1,line:402}},"table-header-functionality":{startLoc:{col:40,line:404},endLoc:{col:1,line:451},startBody:{col:40,line:404},endBody:{col:1,line:451}},loading:{startLoc:{col:23,line:453},endLoc:{col:1,line:487},startBody:{col:23,line:453},endBody:{col:1,line:487}},scroll:{startLoc:{col:22,line:489},endLoc:{col:1,line:530},startBody:{col:22,line:489},endBody:{col:1,line:530}},"virtualized-scroll":{startLoc:{col:33,line:532},endLoc:{col:1,line:563},startBody:{col:33,line:532},endBody:{col:1,line:563}},"sticky-column":{startLoc:{col:28,line:565},endLoc:{col:1,line:597},startBody:{col:28,line:565},endBody:{col:1,line:597}},"highlighted-row":{startLoc:{col:30,line:599},endLoc:{col:1,line:632},startBody:{col:30,line:599},endBody:{col:1,line:632}}}}},title:"Data display/Table",component:_Table__WEBPACK_IMPORTED_MODULE_3__.A,subcomponents:{TableHeader:_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,TableHeaderCell:_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,TableBody:_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,TableRow:_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,TableCell:_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,TableVirtualizedBody:_TableVirtualizedBody_TableVirtualizedBody__WEBPACK_IMPORTED_MODULE_9__.A},argTypes:metaSettings.argTypes,decorators:metaSettings.decorators};var tableTemplate=function tableTemplate(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,_objectSpread({},args))};tableTemplate.displayName="tableTemplate";var Overview={render:tableTemplate.bind({}),args:{errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns:[{id:"sentOn",title:"Sent on",width:150,loadingStateType:"medium-text"},{id:"subject",title:"Subject",loadingStateType:"long-text"},{id:"sentBy",title:"Sent by",width:{min:120,max:200},infoContent:"This is the sender",loadingStateType:"circle"},{id:"status",title:"Status",width:150,infoContent:"Info content for the status column",loadingStateType:"medium-text"},{id:"emailsSent",title:"Emails sent",width:150,loadingStateType:"medium-text"}],children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:[{id:"sentOn",title:"Sent on",width:150,loadingStateType:"medium-text"},{id:"subject",title:"Subject",loadingStateType:"long-text"},{id:"sentBy",title:"Sent by",width:{min:120,max:200},infoContent:"This is the sender",loadingStateType:"circle"},{id:"status",title:"Status",width:150,infoContent:"Info content for the status column",loadingStateType:"medium-text"},{id:"emailsSent",title:"Emails sent",width:150,loadingStateType:"medium-text"}].map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{title:headerCell.title},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:[{id:"1",sentOn:"2020-01-01",sentBy:"John Doe",subject:"Lorem ipsum dolor",status:"Sent",emailsSent:100},{id:"3",sentOn:"2023-03-03",sentBy:"Some Person",subject:"This is the subject This is the subject This is the subject This is the subject This is the subject This is the subject",status:"Sent",emailsSent:999},{id:"2",sentOn:"2022-02-02",sentBy:"Other Name",subject:"This is the subject",status:"Sent",emailsSent:99}].map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.sentOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.subject}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.iN,{text:rowItem.sentBy})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A,{text:rowItem.status,color:_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A.colors.POSITIVE,isAnimationDisabled:!0})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.emailsSent})]},rowItem.id)}))})]},name:"Overview"},Sizes={render:function render(){var columns=[{id:"sentOn",title:"Sent on",width:180,loadingStateType:"medium-text"},{id:"subject",title:"Subject",width:200,loadingStateType:"long-text"}],data=[{id:1,sentOn:"2020-01-01",subject:"Lorem ipsum dolor"},{id:2,sentOn:"2022-02-02",subject:"This is the subject"}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{style:{width:"auto"},size:_Table__WEBPACK_IMPORTED_MODULE_3__.A.sizes.MEDIUM,errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:columns.map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{title:headerCell.title,icon:headerCell.icon,infoContent:headerCell.infoContent},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:data.map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.sentOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.subject})]},rowItem.id)}))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{style:{width:"auto"},size:_Table__WEBPACK_IMPORTED_MODULE_3__.A.sizes.LARGE,errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:columns.map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{title:headerCell.title,icon:headerCell.icon,infoContent:headerCell.infoContent},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:data.map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.sentOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.subject})]},rowItem.id)}))})]})]})},decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Flex_Flex__WEBPACK_IMPORTED_MODULE_12__.A,{align:_Flex_Flex__WEBPACK_IMPORTED_MODULE_12__.A.align.START,justify:_Flex_Flex__WEBPACK_IMPORTED_MODULE_12__.A.justify.SPACE_BETWEEN,style:{flex:1},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Story,{})})}],name:"Sizes"},Borders={render:function render(){var columns=[{id:"sentOn",title:"Sent on",width:150,loadingStateType:"medium-text"},{id:"subject",title:"Subject",loadingStateType:"long-text"},{id:"sentBy",title:"Sent by",width:{min:120,max:200},infoContent:"This is the sender",loadingStateType:"circle"},{id:"status",title:"Status",width:150,infoContent:"Info content for the status column",loadingStateType:"medium-text"},{id:"emailsSent",title:"Emails sent",width:150,loadingStateType:"medium-text"}],data=[{id:"1",sentOn:"2020-01-01",sentBy:"John Doe",subject:"Lorem ipsum dolor",status:"Sent",emailsSent:100},{id:"3",sentOn:"2023-03-03",sentBy:"Some Person",subject:"This is the subject This is the subject This is the subject This is the subject This is the subject This is the subject",status:"Sent",emailsSent:999},{id:"2",sentOn:"2022-02-02",sentBy:"Other Name",subject:"This is the subject",status:"Sent",emailsSent:99}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:columns.map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{title:headerCell.title},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:data.map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.sentOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.subject}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.iN,{text:rowItem.sentBy})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A,{text:rowItem.status,color:_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A.colors.POSITIVE,isAnimationDisabled:!0})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.emailsSent})]},rowItem.id)}))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns,withoutBorder:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:columns.map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{title:headerCell.title},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:data.map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.sentOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.subject}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.iN,{text:rowItem.sentBy})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A,{text:rowItem.status,color:_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A.colors.POSITIVE,isAnimationDisabled:!0})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.emailsSent})]},rowItem.id)}))})]})]})},decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Flex_Flex__WEBPACK_IMPORTED_MODULE_12__.A,{direction:_Flex_Flex__WEBPACK_IMPORTED_MODULE_12__.A.directions.COLUMN,gap:40,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Story,{})})}],name:"Borders"},TableHeaderFunctionality={render:function render(){var _useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.Vc),2),tableData=_useState2[0],setTableData=_useState2[1],_useState4=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),2),sorting=_useState4[0],setSorting=_useState4[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.WH,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.WH.map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{title:headerCell.title,icon:headerCell.icon,infoContent:headerCell.infoContent,onSortClicked:function onSortClicked(sortState){return function onSort(columnId,sortState){setSorting(_defineProperty({},columnId,sortState)),setTableData((0,_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.di)(columnId,sortState,tableData))}(headerCell.id,sortState)},sortState:sorting[headerCell.id]},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:tableData.map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.sentOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.subject}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.iN,{text:rowItem.sentBy})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A,{text:rowItem.status,isAnimationDisabled:!0,color:_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A.colors.POSITIVE})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.emailsSent})]},rowItem.id)}))})]})},name:"Table Header Functionality"},Loading={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{dataState:{isLoading:!0},errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.WH,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.WH.map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{title:headerCell.title},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.Vc.map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.sentOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.subject}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.iN,{text:rowItem.sentBy})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A,{text:rowItem.status,color:_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A.colors.POSITIVE,isAnimationDisabled:!0})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.emailsSent})]},rowItem.id)}))})]})},name:"Loading"},Scroll={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{height:220,width:"100%"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.fs,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.fs.map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{title:headerCell.title},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.sr.map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.sentOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A,{text:rowItem.priority,color:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.P8[rowItem.priority],isAnimationDisabled:!0})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.subject}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.iN,{text:rowItem.sentBy})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A,{text:rowItem.status,color:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.pu[rowItem.status],isAnimationDisabled:!0})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.emailsSent})]},rowItem.id)}))})]})})},name:"Scroll"},VirtualizedScroll={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.Yb,style:{height:250},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.Yb.map((function(cell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,_objectSpread({},cell),index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableVirtualizedBody_TableVirtualizedBody__WEBPACK_IMPORTED_MODULE_9__.A,{rowRenderer:function Row(_ref){var num=_ref.num,text=_ref.text;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:num}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:text})]})},items:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.V2})]})},name:"Virtualized Scroll"},StickyColumn={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.dW,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.dW.map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{sticky:0===index,title:headerCell.title},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.aN.map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{sticky:!0,children:rowItem.projectName}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A,{text:rowItem.status,color:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.pu[rowItem.status],isAnimationDisabled:!0})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.description}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.createdOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.emailsSent}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.owner}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.priority}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.category}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.dueDate}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.comments})]},rowItem.id)}))})]})},name:"Sticky column"},HighlightedRow={render:function render(){var shouldRowBeHighlighted=function shouldRowBeHighlighted(rowItem){return"2"===rowItem.id};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Table__WEBPACK_IMPORTED_MODULE_3__.A,{errorState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.MV,{}),emptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.D5,{}),columns:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.WH,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_4__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.WH.map((function(headerCell,index){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableHeaderCell_TableHeaderCell__WEBPACK_IMPORTED_MODULE_5__.A,{title:headerCell.title},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableBody_TableBody__WEBPACK_IMPORTED_MODULE_6__.A,{children:_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.Vc.map((function(rowItem){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_7__.A,{highlighted:shouldRowBeHighlighted(rowItem),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.sentOn}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.subject}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Table_stories_helpers__WEBPACK_IMPORTED_MODULE_10__.iN,{text:rowItem.sentBy})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A,{text:rowItem.status,isAnimationDisabled:!0,color:_Label_Label__WEBPACK_IMPORTED_MODULE_11__.A.colors.POSITIVE})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableCell_TableCell__WEBPACK_IMPORTED_MODULE_8__.A,{children:rowItem.emailsSent})]},rowItem.id)}))})]})},name:"Highlighted row"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: tableTemplate.bind({}),\n  args: {\n    errorState: <TableErrorState />,\n    emptyState: <TableEmptyState />,\n    columns: [{\n      id: "sentOn",\n      title: "Sent on",\n      width: 150,\n      loadingStateType: "medium-text"\n    }, {\n      id: "subject",\n      title: "Subject",\n      loadingStateType: "long-text"\n    }, {\n      id: "sentBy",\n      title: "Sent by",\n      width: {\n        min: 120,\n        max: 200\n      },\n      infoContent: "This is the sender",\n      loadingStateType: "circle"\n    }, {\n      id: "status",\n      title: "Status",\n      width: 150,\n      infoContent: "Info content for the status column",\n      loadingStateType: "medium-text"\n    }, {\n      id: "emailsSent",\n      title: "Emails sent",\n      width: 150,\n      loadingStateType: "medium-text"\n    }],\n    children: [<TableHeader>\n        {[{\n        id: "sentOn",\n        title: "Sent on",\n        width: 150,\n        loadingStateType: "medium-text"\n      }, {\n        id: "subject",\n        title: "Subject",\n        loadingStateType: "long-text"\n      }, {\n        id: "sentBy",\n        title: "Sent by",\n        width: {\n          min: 120,\n          max: 200\n        },\n        infoContent: "This is the sender",\n        loadingStateType: "circle"\n      }, {\n        id: "status",\n        title: "Status",\n        width: 150,\n        infoContent: "Info content for the status column",\n        loadingStateType: "medium-text"\n      }, {\n        id: "emailsSent",\n        title: "Emails sent",\n        width: 150,\n        loadingStateType: "medium-text"\n      }].map((headerCell, index) => <TableHeaderCell key={index} title={headerCell.title} />)}\n      </TableHeader>, <TableBody>\n        {[{\n        id: "1",\n        sentOn: "2020-01-01",\n        sentBy: "John Doe",\n        subject: "Lorem ipsum dolor",\n        status: "Sent",\n        emailsSent: 100\n      }, {\n        id: "3",\n        sentOn: "2023-03-03",\n        sentBy: "Some Person",\n        subject: "This is the subject This is the subject This is the subject This is the subject This is the subject This is the subject",\n        status: "Sent",\n        emailsSent: 999\n      }, {\n        id: "2",\n        sentOn: "2022-02-02",\n        sentBy: "Other Name",\n        subject: "This is the subject",\n        status: "Sent",\n        emailsSent: 99\n      }].map(rowItem => <TableRow key={rowItem.id}>\n            <TableCell>{rowItem.sentOn}</TableCell>\n            <TableCell>{rowItem.subject}</TableCell>\n            <TableCell>\n              <TableAvatar text={rowItem.sentBy} />\n            </TableCell>\n            <TableCell>\n              <Label text={rowItem.status} color={Label.colors.POSITIVE} isAnimationDisabled />\n            </TableCell>\n            <TableCell>{rowItem.emailsSent}</TableCell>\n          </TableRow>)}\n      </TableBody>]\n  },\n  name: "Overview"\n}',...Overview.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const columns: ITableColumn[] = [{\n      id: "sentOn",\n      title: "Sent on",\n      width: 180,\n      loadingStateType: "medium-text"\n    }, {\n      id: "subject",\n      title: "Subject",\n      width: 200,\n      loadingStateType: "long-text"\n    }];\n    const data = [{\n      id: 1,\n      sentOn: "2020-01-01",\n      subject: "Lorem ipsum dolor"\n    }, {\n      id: 2,\n      sentOn: "2022-02-02",\n      subject: "This is the subject"\n    }];\n    return <>\n        <Table style={{\n        width: "auto"\n      }} size={Table.sizes.MEDIUM} errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={columns}>\n          <TableHeader>\n            {columns.map((headerCell, index) => <TableHeaderCell key={index} title={headerCell.title} icon={headerCell.icon} infoContent={headerCell.infoContent} />)}\n          </TableHeader>\n          <TableBody>\n            {data.map(rowItem => <TableRow key={rowItem.id}>\n                <TableCell>{rowItem.sentOn}</TableCell>\n                <TableCell>{rowItem.subject}</TableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n        <Table style={{\n        width: "auto"\n      }} size={Table.sizes.LARGE} errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={columns}>\n          <TableHeader>\n            {columns.map((headerCell, index) => <TableHeaderCell key={index} title={headerCell.title} icon={headerCell.icon} infoContent={headerCell.infoContent} />)}\n          </TableHeader>\n          <TableBody>\n            {data.map(rowItem => <TableRow key={rowItem.id}>\n                <TableCell>{rowItem.sentOn}</TableCell>\n                <TableCell>{rowItem.subject}</TableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n      </>;\n  },\n  decorators: [(Story: typeof React.Component) => <Flex align={Flex.align.START} justify={Flex.justify.SPACE_BETWEEN} style={{\n    flex: 1\n  }}>\n        <Story />\n      </Flex>],\n  name: "Sizes"\n}',...Sizes.parameters?.docs?.source}}},Borders.parameters={...Borders.parameters,docs:{...Borders.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const columns: ITableColumn[] = [{\n      id: "sentOn",\n      title: "Sent on",\n      width: 150,\n      loadingStateType: "medium-text"\n    }, {\n      id: "subject",\n      title: "Subject",\n      loadingStateType: "long-text"\n    }, {\n      id: "sentBy",\n      title: "Sent by",\n      width: {\n        min: 120,\n        max: 200\n      },\n      infoContent: "This is the sender",\n      loadingStateType: "circle"\n    }, {\n      id: "status",\n      title: "Status",\n      width: 150,\n      infoContent: "Info content for the status column",\n      loadingStateType: "medium-text"\n    }, {\n      id: "emailsSent",\n      title: "Emails sent",\n      width: 150,\n      loadingStateType: "medium-text"\n    }];\n    const data = [{\n      id: "1",\n      sentOn: "2020-01-01",\n      sentBy: "John Doe",\n      subject: "Lorem ipsum dolor",\n      status: "Sent",\n      emailsSent: 100\n    }, {\n      id: "3",\n      sentOn: "2023-03-03",\n      sentBy: "Some Person",\n      subject: "This is the subject This is the subject This is the subject This is the subject This is the subject This is the subject",\n      status: "Sent",\n      emailsSent: 999\n    }, {\n      id: "2",\n      sentOn: "2022-02-02",\n      sentBy: "Other Name",\n      subject: "This is the subject",\n      status: "Sent",\n      emailsSent: 99\n    }];\n    return <>\n        <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={columns}>\n          <TableHeader>\n            {columns.map((headerCell, index) => <TableHeaderCell key={index} title={headerCell.title} />)}\n          </TableHeader>\n          <TableBody>\n            {data.map(rowItem => <TableRow key={rowItem.id}>\n                <TableCell>{rowItem.sentOn}</TableCell>\n                <TableCell>{rowItem.subject}</TableCell>\n                <TableCell>\n                  <TableAvatar text={rowItem.sentBy} />\n                </TableCell>\n                <TableCell>\n                  <Label text={rowItem.status} color={Label.colors.POSITIVE} isAnimationDisabled />\n                </TableCell>\n                <TableCell>{rowItem.emailsSent}</TableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n        <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={columns} withoutBorder>\n          <TableHeader>\n            {columns.map((headerCell, index) => <TableHeaderCell key={index} title={headerCell.title} />)}\n          </TableHeader>\n          <TableBody>\n            {data.map(rowItem => <TableRow key={rowItem.id}>\n                <TableCell>{rowItem.sentOn}</TableCell>\n                <TableCell>{rowItem.subject}</TableCell>\n                <TableCell>\n                  <TableAvatar text={rowItem.sentBy} />\n                </TableCell>\n                <TableCell>\n                  <Label text={rowItem.status} color={Label.colors.POSITIVE} isAnimationDisabled />\n                </TableCell>\n                <TableCell>{rowItem.emailsSent}</TableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n      </>;\n  },\n  decorators: [(Story: typeof React.Component) => <Flex direction={Flex.directions.COLUMN} gap={40}>\n        <Story />\n      </Flex>],\n  name: "Borders"\n}',...Borders.parameters?.docs?.source}}},TableHeaderFunctionality.parameters={...TableHeaderFunctionality.parameters,docs:{...TableHeaderFunctionality.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [tableData, setTableData] = useState(emailTableData);\n    const [sorting, setSorting] = useState<{\n      [key: string]: "asc" | "desc" | "none";\n    }>({});\n    const onSort = (columnId: string, sortState: "asc" | "desc" | "none") => {\n      setSorting({\n        [columnId]: sortState\n      });\n      setTableData(sort((columnId as keyof (typeof tableData)[number]), sortState, tableData));\n    };\n    return <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={emailColumns}>\n        <TableHeader>\n          {emailColumns.map((headerCell, index) => <TableHeaderCell key={index} title={headerCell.title} icon={headerCell.icon} infoContent={headerCell.infoContent} onSortClicked={sortState => onSort(headerCell.id, sortState)} sortState={sorting[headerCell.id]} />)}\n        </TableHeader>\n        <TableBody>\n          {tableData.map(rowItem => <TableRow key={rowItem.id}>\n              <TableCell>{rowItem.sentOn}</TableCell>\n              <TableCell>{rowItem.subject}</TableCell>\n              <TableCell>\n                <TableAvatar text={rowItem.sentBy} />\n              </TableCell>\n              <TableCell>\n                <Label text={rowItem.status} isAnimationDisabled color={Label.colors.POSITIVE} />\n              </TableCell>\n              <TableCell>{rowItem.emailsSent}</TableCell>\n            </TableRow>)}\n        </TableBody>\n      </Table>;\n  },\n  name: "Table Header Functionality"\n}',...TableHeaderFunctionality.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:'{\n  render: () => <Table dataState={{\n    isLoading: true\n  }} errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={emailColumns}>\n      <TableHeader>\n        {emailColumns.map((headerCell, index) => <TableHeaderCell key={index} title={headerCell.title} />)}\n      </TableHeader>\n      <TableBody>\n        {emailTableData.map(rowItem => <TableRow key={rowItem.id}>\n            <TableCell>{rowItem.sentOn}</TableCell>\n            <TableCell>{rowItem.subject}</TableCell>\n            <TableCell>\n              <TableAvatar text={rowItem.sentBy} />\n            </TableCell>\n            <TableCell>\n              <Label text={rowItem.status} color={Label.colors.POSITIVE} isAnimationDisabled />\n            </TableCell>\n            <TableCell>{rowItem.emailsSent}</TableCell>\n          </TableRow>)}\n      </TableBody>\n    </Table>,\n  name: "Loading"\n}',...Loading.parameters?.docs?.source}}},Scroll.parameters={...Scroll.parameters,docs:{...Scroll.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    height: 220,\n    width: "100%"\n  }}>\n      <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={scrollTableColumns}>\n        <TableHeader>\n          {scrollTableColumns.map((headerCell, index) => <TableHeaderCell key={index} title={headerCell.title} />)}\n        </TableHeader>\n        <TableBody>\n          {scrollTableData.map(rowItem => <TableRow key={rowItem.id}>\n              <TableCell>{rowItem.sentOn}</TableCell>\n              <TableCell>\n                <Label text={rowItem.priority} color={priorityColumnToLabelColor[rowItem.priority]} isAnimationDisabled />\n              </TableCell>\n              <TableCell>{rowItem.subject}</TableCell>\n              <TableCell>\n                <TableAvatar text={rowItem.sentBy} />\n              </TableCell>\n              <TableCell>\n                <Label text={rowItem.status} color={statusColumnToLabelColor[rowItem.status]} isAnimationDisabled />\n              </TableCell>\n              <TableCell>{rowItem.emailsSent}</TableCell>\n            </TableRow>)}\n        </TableBody>\n      </Table>\n    </div>,\n  name: "Scroll"\n}',...Scroll.parameters?.docs?.source}}},VirtualizedScroll.parameters={...VirtualizedScroll.parameters,docs:{...VirtualizedScroll.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const Row = ({\n      num,\n      text\n    }: (typeof virtualizedScrollTableData)[number]) => {\n      return <TableRow>\n          <TableCell>{num}</TableCell>\n          <TableCell>{text}</TableCell>\n        </TableRow>;\n    };\n    return <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={virtualizedScrollTableColumns} style={{\n      height: 250\n    }}>\n        <TableHeader>\n          {virtualizedScrollTableColumns.map((cell, index) => <TableHeaderCell key={index} {...cell} />)}\n        </TableHeader>\n        <TableVirtualizedBody rowRenderer={Row} items={virtualizedScrollTableData} />\n      </Table>;\n  },\n  name: "Virtualized Scroll"\n}',...VirtualizedScroll.parameters?.docs?.source}}},StickyColumn.parameters={...StickyColumn.parameters,docs:{...StickyColumn.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={stickyColumns}>\n        <TableHeader>\n          {stickyColumns.map((headerCell, index) => <TableHeaderCell sticky={index === 0} key={index} title={headerCell.title} />)}\n        </TableHeader>\n        <TableBody>\n          {stickyTableData.map(rowItem => <TableRow key={rowItem.id}>\n              <TableCell sticky>{rowItem.projectName}</TableCell>\n              <TableCell>\n                <Label text={rowItem.status} color={statusColumnToLabelColor[rowItem.status]} isAnimationDisabled />\n              </TableCell>\n              <TableCell>{rowItem.description}</TableCell>\n              <TableCell>{rowItem.createdOn}</TableCell>\n              <TableCell>{rowItem.emailsSent}</TableCell>\n              <TableCell>{rowItem.owner}</TableCell>\n              <TableCell>{rowItem.priority}</TableCell>\n              <TableCell>{rowItem.category}</TableCell>\n              <TableCell>{rowItem.dueDate}</TableCell>\n              <TableCell>{rowItem.comments}</TableCell>\n            </TableRow>)}\n        </TableBody>\n      </Table>;\n  },\n  name: "Sticky column"\n}',...StickyColumn.parameters?.docs?.source}}},HighlightedRow.parameters={...HighlightedRow.parameters,docs:{...HighlightedRow.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const shouldRowBeHighlighted = (rowItem: (typeof emailTableData)[number]) => {\n      return rowItem.id === "2";\n    };\n    return <Table errorState={<TableErrorState />} emptyState={<TableEmptyState />} columns={emailColumns}>\n        <TableHeader>\n          {emailColumns.map((headerCell, index) => <TableHeaderCell key={index} title={headerCell.title} />)}\n        </TableHeader>\n        <TableBody>\n          {emailTableData.map(rowItem => <TableRow key={rowItem.id} highlighted={shouldRowBeHighlighted(rowItem)}>\n              <TableCell>{rowItem.sentOn}</TableCell>\n              <TableCell>{rowItem.subject}</TableCell>\n              <TableCell>\n                <TableAvatar text={rowItem.sentBy} />\n              </TableCell>\n              <TableCell>\n                <Label text={rowItem.status} isAnimationDisabled color={Label.colors.POSITIVE} />\n              </TableCell>\n              <TableCell>{rowItem.emailsSent}</TableCell>\n            </TableRow>)}\n        </TableBody>\n      </Table>;\n  },\n  name: "Highlighted row"\n}',...HighlightedRow.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Sizes","Borders","TableHeaderFunctionality","Loading","Scroll","VirtualizedScroll","StickyColumn","HighlightedRow"]}}]);