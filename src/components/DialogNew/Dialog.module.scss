@import "../../styles/themes.scss";
/**
   * 1. Make the dialog container, and its child overlay spread across
   *    the entire window.
   */
.dialogContainer,
.dialogOverlay {
  position: fixed; /* 1 */
  top: 0; /* 1 */
  right: 0; /* 1 */
  bottom: 0; /* 1 */
  left: 0; /* 1 */
}

.dialogContainer {
  z-index: 2;
  display: flex;
}

.dialogContainer[aria-hidden="true"] {
  display: none;
}

.dialogOverlay {
  background-color: rgba(41, 47, 76, 0.7);
}

.dialogContentWrapper {
  margin: auto;
  z-index: 2;
  position: relative;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0px 15px 50px rgba(0, 0, 0, 0.3);
}

.dialogContent {
  display: flex;
  flex-direction: column;
  padding: 0 30px;
  overflow: auto;
  flex-grow: 1;
  background-color: var(--secondary-background-color);
  max-height: 90vh;
  max-width: 90vw;

  &.small {
    width: 350px;
  }
  &.medium {
    width: 550px;
  }
  &.large {
    width: 750px;
  }
  &.full {
    width: 100vw;
  }

  .titleWrapper {
    display: flex;
    align-items: center;
    .dialogTitle {
      font-size: var(--font-size-h2);
      font-weight: var(--font-weight-bold);
      color: var(--primary-text-color);
      flex-grow: 1;
      &:focus {
        color: red;
      }
    }
  }

  .innerContentWrapper {
    flex-grow: 1;
  }
}

.zoomIn {
  animation-name: zoomIn;
  animation-play-state: running;
  animation-duration: .2s;
}

.zoomOut {
  animation-name: zoomOut;
  animation-play-state: running;
  animation-duration: .1s;
}

.fadeId {
  animation-name: fadeIn;
  animation-play-state: running;
  animation-duration: .2s;
}

@keyframes zoomIn {
  0% {
    transform: scale(.02);
    opacity: 0
  }

  to {
    transform: scale(1);
    opacity: 1
  }
}

@keyframes zoomOut {
  0% {
    transform: scale(1)
  }

  to {
    transform: scale(.2);
    opacity: 0
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0
  }

  to {
    opacity: 1
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1
  }

  to {
    opacity: 0
  }
}