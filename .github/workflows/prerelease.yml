# This workflow will ensure all PRs are labeled so we can later create releases

name: Prerelease

on: push

jobs:
  prerelease:
    if: "contains(github.event.head_commit.message, '[prerelease]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: npm ci
      - name: Set up git credentials
        run: |
          git config --global user.name 'ci'
          git config --global user.email 'deploy@monday.com'
      - name: print PR number
        with:
          PR_A: ${{github.event.pull_request.number}}
          PR_B: ${{github.event.number}}
          PR_C: ${{github.event.issue.number}}
          run: |
            echo "$PR_A"
            echo "$PR_B"
            echo "$PR_C"
      - name: "Wait for tests to succeed"
        uses: fountainhead/action-wait-for-check@v1.1.0
        if: false
        id: wait-for-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "test"
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          timeoutSeconds: 1200
          intervalSeconds: 20
      - name: "Tests failed - exit"
        if: false && steps.wait-for-tests.outputs.conclusion != 'success'
        run: |
          echo "::error::test check failed - prerelease cancelled"
          exit 1
      - name: Create Updated version
        if: success()
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
        run: |
          npm run prerelease
          echo "package_version=$(node -e "console.log(require('./package.json').version)")" >> $GITHUB_OUTPUT
      - name: Publish the new version to npm
        if: success()
        run: | # Compare the latest version and the current version and publish only if the version changed
          if [ $(npm view monday-ui-react-core version) != $(node -e "console.log(require('./package.json').version)") ]; then npm run build && npm publish --tag prerelease; else echo ''; fi;
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: success()
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: prerelease
