"use strict";(globalThis.webpackChunkmonday_ui_react_core=globalThis.webpackChunkmonday_ui_react_core||[]).push([[3561],{"./src/hooks/useAfterFirstRender/__stories__/useAfterFirstRender.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Overview:()=>Overview,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useAfterFirstRender/index.ts"),_components_Button_Button__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Button/Button.tsx"),_components_Flex_Flex__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Flex/Flex.tsx"),_components_Heading_Heading__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Heading/Heading.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/useAfterFirstRender"},Overview={render:()=>{const isAfterFirstRender=(0,___WEBPACK_IMPORTED_MODULE_2__.A)(),[renderCount,setRenderCount]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components_Heading_Heading__WEBPACK_IMPORTED_MODULE_3__.A,{type:_components_Heading_Heading__WEBPACK_IMPORTED_MODULE_3__.A.types.H3,weight:_components_Heading_Heading__WEBPACK_IMPORTED_MODULE_3__.A.weights.NORMAL,children:isAfterFirstRender.current?"It is after the first render!":"This is the first render!"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("p",{children:["Rerender count: ",renderCount]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components_Button_Button__WEBPACK_IMPORTED_MODULE_4__.A,{onClick:()=>{setRenderCount((prevCount=>prevCount+1))},children:"Rerender component"})]})},decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components_Flex_Flex__WEBPACK_IMPORTED_MODULE_5__.A,{direction:_components_Flex_Flex__WEBPACK_IMPORTED_MODULE_5__.A.directions.COLUMN,align:_components_Flex_Flex__WEBPACK_IMPORTED_MODULE_5__.A.align.START,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Story,{})})],parameters:{docs:{liveEdit:{scope:{Heading:_components_Heading_Heading__WEBPACK_IMPORTED_MODULE_3__.A}}}}};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const isAfterFirstRender = useAfterFirstRender();\n    const [renderCount, setRenderCount] = useState(0);\n    const handleRerender = () => {\n      setRenderCount(prevCount => prevCount + 1);\n    };\n    return <>\n        <Heading type={Heading.types.H3} weight={Heading.weights.NORMAL}>\n          {isAfterFirstRender.current ? "It is after the first render!" : "This is the first render!"}\n        </Heading>\n        <p>Rerender count: {renderCount}</p>\n        <Button onClick={handleRerender}>Rerender component</Button>\n      </>;\n  },\n  decorators: [Story => <Flex direction={Flex.directions.COLUMN} align={Flex.align.START}>\n        <Story />\n      </Flex>],\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: {\n          Heading\n        }\n      }\n    }\n  }\n}',...Overview.parameters?.docs?.source}}};const __namedExportsOrder=["Overview"]}}]);