"use strict";(globalThis.webpackChunkmonday_ui_react_core=globalThis.webpackChunkmonday_ui_react_core||[]).push([[3123],{"./src/components/Modal/__stories__/Modal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlertModal:()=>AlertModal,ModalWithEditableTitle:()=>ModalWithEditableTitle,ModalWithIcon:()=>ModalWithIcon,Overview:()=>Overview,WidthVariantsCustom:()=>WidthVariantsCustom,WidthVariantsFull:()=>WidthVariantsFull,WidthVariantsNormal:()=>WidthVariantsNormal,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_storybook__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),_ModalContent_ModalContent__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Modal/ModalContent/ModalContent.tsx"),_ModalFooter_ModalFooter__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/Modal/ModalFooter/ModalFooter.tsx"),_ModalHeader_ModalHeader__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/Modal/ModalHeader/ModalHeader.tsx"),_Modal__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Modal/Modal.tsx"),_Modal_stories_helpers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Modal/__stories__/Modal.stories.helpers.tsx"),_components_EditableHeading_EditableHeading__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/components/EditableHeading/EditableHeading.tsx"),_ModalFooter_ModalFooterButtons_ModalFooterButtons__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/Modal/ModalFooter/ModalFooterButtons/ModalFooterButtons.tsx"),_Icon_Icons__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/components/Icon/Icons/components/Upgrade.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const metaSettings=(0,_storybook__WEBPACK_IMPORTED_MODULE_2__.B)({component:_Modal__WEBPACK_IMPORTED_MODULE_3__.A,enumPropNamesArray:["width"],actionPropsArray:["onClose"]}),modalTemplate=_ref=>{let{onClose,...modalProps}=_ref;const[show,setShow]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),openModalButtonRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),closeModal=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>setShow(!1)),[]),openModalButton=(0,_Modal_stories_helpers__WEBPACK_IMPORTED_MODULE_4__.T1)({title:modalProps.title,setShow,openModalButtonRef});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[openModalButton,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Modal__WEBPACK_IMPORTED_MODULE_3__.A,{id:"story-book-modal",title:"Modal title",description:"Subtitle description text goes here",contentSpacing:!0,triggerElement:openModalButtonRef.current,show,onClose:closeModal,...modalProps,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalContent_ModalContent__WEBPACK_IMPORTED_MODULE_5__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("p",{children:"Modal content goes here"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalFooter_ModalFooterButtons_ModalFooterButtons__WEBPACK_IMPORTED_MODULE_6__.A,{primaryButtonText:"Confirm",secondaryButtonText:"Cancel",onPrimaryButtonClick:closeModal,onSecondaryButtonClick:closeModal})]})]})};modalTemplate.displayName="modalTemplate";const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'import React, { useCallback, useRef, useState } from "react";\nimport { createStoryMetaSettingsDecorator } from "../../../storybook";\nimport ModalContent from "../ModalContent/ModalContent";\nimport ModalFooter from "../ModalFooter/ModalFooter";\nimport ModalHeader from "../ModalHeader/ModalHeader";\nimport Modal, { ModalProps } from "../Modal";\nimport { useHelperOpenModalButton } from "./Modal.stories.helpers";\nimport EditableHeading from "../../../components/EditableHeading/EditableHeading";\nimport ModalFooterButtons from "../ModalFooter/ModalFooterButtons/ModalFooterButtons";\nimport { Upgrade } from "../../Icon/Icons";\nconst metaSettings = createStoryMetaSettingsDecorator({\n  component: Modal,\n  enumPropNamesArray: ["width"], // List enum props here\n  actionPropsArray: ["onClose"] // List the component\'s actions here\n});\n\n\nconst modalTemplate = ({ onClose, ...modalProps }: ModalProps) => {\n  // For some reason storybook replace onClose with mock function as part of the template props so in purpose not pass it forward\n  // Control if modal is display or hidden\n  const [show, setShow] = useState(false);\n  const openModalButtonRef = useRef(null);\n  const closeModal = useCallback(() => setShow(false), []);\n  // Internal helper method for creating basic button which change the show state to true in order to display the modal\n  // This method is not part of our external API and not required for creating functional modal component\n  const openModalButton = useHelperOpenModalButton({ title: modalProps.title, setShow, openModalButtonRef });\n  return (\n    <div>\n      {openModalButton}\n      <Modal\n        id={"story-book-modal"}\n        title={"Modal title"}\n        description="Subtitle description text goes here"\n        contentSpacing\n        triggerElement={openModalButtonRef.current}\n        // is modal show or hidden\n        show={show}\n        // set show state to close\n        onClose={closeModal}\n        {...modalProps}\n      >\n        <ModalContent>\n          <p>Modal content goes here</p>\n        </ModalContent>\n        <ModalFooterButtons\n          primaryButtonText="Confirm"\n          secondaryButtonText="Cancel"\n          onPrimaryButtonClick={closeModal}\n          onSecondaryButtonClick={closeModal}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default {\n  title: "Feedback/Modal",\n  component: Modal,\n  subcomponents: {\n    ModalHeader,\n    ModalContent,\n    ModalFooter\n  },\n  argTypes: metaSettings.argTypes,\n  decorators: metaSettings.decorators\n};\n\nexport const Overview = {\n  render: modalTemplate.bind({}),\n  name: "Overview"\n};\n\nexport const WidthVariantsNormal = {\n  // Boilerplate for creating a modal, not relevant for this example\n  render:\n    // Internal helper, not part of the API\n    // internal helper, not part of the API\n    // Modal with default width variant\n    // Width prop effects on the modal width\n    () => {\n      const [show, setShow] = useState(false);\n      const openModalButtonRef = useRef(null);\n      const closeModal = useCallback(() => {\n        setShow(false);\n      }, []);\n\n      const openModalButton = useHelperOpenModalButton({\n        title: "Default",\n        setShow,\n        openModalButtonRef\n      });\n\n      return (\n        <>\n          {openModalButton}\n          <Modal\n            id="story-book-modal"\n            title="Modal title"\n            triggerElement={openModalButtonRef.current}\n            show={show}\n            onClose={closeModal}\n            width={Modal.width.DEFAULT}\n            contentSpacing\n          >\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons\n              primaryButtonText="Confirm"\n              secondaryButtonText="Cancel"\n              onPrimaryButtonClick={closeModal}\n              onSecondaryButtonClick={closeModal}\n            />\n          </Modal>\n        </>\n      );\n    },\n\n  name: "Width variants - Normal"\n};\n\nexport const WidthVariantsFull = {\n  // Boilerplate for creating a modal, not relevant for this example\n  render:\n    // Internal helper, not part of the API\n    // Modal with full width variant\n    // Width prop effects on the modal width\n    () => {\n      const [show, setShow] = useState(false);\n      const openModalButtonRef = useRef(null);\n\n      const closeModal = useCallback(() => {\n        setShow(false);\n      }, []);\n\n      const openModalButton = useHelperOpenModalButton({\n        title: "Full size",\n        setShow,\n        openModalButtonRef\n      });\n\n      return (\n        <>\n          {openModalButton}\n          <Modal\n            id="story-book-modal"\n            title="Modal title"\n            triggerElement={openModalButtonRef.current}\n            show={show}\n            onClose={closeModal}\n            width={Modal.width.FULL_WIDTH}\n            contentSpacing\n          >\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons\n              primaryButtonText="Confirm"\n              secondaryButtonText="Cancel"\n              onPrimaryButtonClick={closeModal}\n              onSecondaryButtonClick={closeModal}\n            />\n          </Modal>\n        </>\n      );\n    },\n\n  name: "Width variants - Full"\n};\n\nexport const WidthVariantsCustom = {\n  // Boilerplate for creating a modal, not relevant for this example\n  render:\n    // Internal helper, not part of the API\n    // Modal with full width variant\n    // Width prop effects on the modal width\n    () => {\n      const [show, setShow] = useState(false);\n      const openModalButtonRef = useRef(null);\n\n      const closeModal = useCallback(() => {\n        setShow(false);\n      }, []);\n\n      const openModalButton = useHelperOpenModalButton({\n        title: "Custom size (i.e. 720px)",\n        setShow,\n        openModalButtonRef\n      });\n\n      return (\n        <>\n          {openModalButton}\n          <Modal\n            id="story-book-modal"\n            title="Modal title"\n            triggerElement={openModalButtonRef.current}\n            show={show}\n            onClose={closeModal}\n            width={"720px"}\n            contentSpacing\n          >\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons\n              primaryButtonText="Confirm"\n              secondaryButtonText="Cancel"\n              onPrimaryButtonClick={closeModal}\n              onSecondaryButtonClick={closeModal}\n            />\n          </Modal>\n        </>\n      );\n    },\n\n  name: "Width variants - custom"\n};\n\nexport const ModalWithIcon = {\n  // Boilerplate for creating a modal, not relevant for add icon to the header\n  render:\n    // Internal helper, not part of the API\n    // Modal header with an icon example\n    /** Please implement your custom Modal header and set it as child for adding an Icon to your modal **/\n    () => {\n      const [show, setShow] = useState(false);\n      const openModalButtonRef = useRef(null);\n\n      const closeModal = useCallback(() => {\n        setShow(false);\n      }, []);\n\n      const openModalButton = useHelperOpenModalButton({\n        title: "Header with icon",\n        setShow,\n        openModalButtonRef\n      });\n\n      return (\n        <div>\n          {openModalButton}\n          <Modal\n            id={"story-book-modal"}\n            title="Modal header with an Icon"\n            triggerElement={openModalButtonRef.current}\n            show={show}\n            onClose={closeModal}\n            closeButtonAriaLabel={"close"}\n            width={Modal.width.DEFAULT}\n            contentSpacing\n          >\n            {}\n            <ModalHeader title={"Modal Heading"} icon={Upgrade} iconSize={32} />\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons\n              primaryButtonText="Confirm"\n              secondaryButtonText="Cancel"\n              onPrimaryButtonClick={closeModal}\n              onSecondaryButtonClick={closeModal}\n            />\n          </Modal>\n        </div>\n      );\n    },\n\n  name: "Modal with icon"\n};\n\nexport const AlertModal = {\n  // Boilerplate for creating a modal, not relevant for add icon to the header\n  render:\n    // Internal helper, not part of the API\n    // Modal header with an icon example\n    // this makes your modal as alert dialog\n    () => {\n      const [show, setShow] = useState(false);\n      const openModalButtonRef = useRef(null);\n\n      const closeModal = useCallback(() => {\n        setShow(false);\n      }, []);\n\n      const openModalButton = useHelperOpenModalButton({\n        title: "Alert dialog",\n        setShow,\n        openModalButtonRef\n      });\n\n      return (\n        <div>\n          {openModalButton}\n          <Modal\n            alertDialog\n            id="story-book-modal"\n            title="Alert modal"\n            triggerElement={openModalButtonRef.current}\n            show={show}\n            onClose={closeModal}\n            contentSpacing\n          >\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons\n              primaryButtonText="Confirm"\n              secondaryButtonText="Cancel"\n              onPrimaryButtonClick={closeModal}\n              onSecondaryButtonClick={closeModal}\n            />\n          </Modal>\n        </div>\n      );\n    },\n\n  name: "Alert Modal"\n};\n\nexport const ModalWithEditableTitle = {\n  // Boilerplate for creating a modal, not relevant for add icon to the header\n  render:\n    // Internal helper, not part of the API\n    // Modal header with an icon example\n    /** Please follow the design guidelines when implementing custom title **/\n    () => {\n      const [show, setShow] = useState(false);\n      const openModalButtonRef = useRef(null);\n\n      const closeModal = useCallback(() => {\n        setShow(false);\n      }, []);\n\n      const openModalButton = useHelperOpenModalButton({\n        title: "Open modal",\n        setShow,\n        openModalButtonRef\n      });\n\n      return (\n        <div>\n          {openModalButton}\n          <Modal\n            id={"story-book-modal"}\n            triggerElement={openModalButtonRef.current}\n            show={show}\n            onClose={closeModal}\n            closeButtonAriaLabel={"close"}\n            width={Modal.width.DEFAULT}\n            contentSpacing\n          >\n            <ModalHeader description={"Description text goes here"}>\n              <EditableHeading type={EditableHeading.types.H2} value={"Modal title"} />\n            </ModalHeader>\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons\n              primaryButtonText="Confirm"\n              secondaryButtonText="Cancel"\n              onPrimaryButtonClick={closeModal}\n              onSecondaryButtonClick={closeModal}\n            />\n          </Modal>\n        </div>\n      );\n    },\n\n  name: "Modal with editable title"\n};\n',locationsMap:{overview:{startLoc:{col:24,line:68},endLoc:{col:1,line:71},startBody:{col:24,line:68},endBody:{col:1,line:71}},"width-variants-normal":{startLoc:{col:35,line:73},endLoc:{col:1,line:118},startBody:{col:35,line:73},endBody:{col:1,line:118}},"width-variants-full":{startLoc:{col:33,line:120},endLoc:{col:1,line:165},startBody:{col:33,line:120},endBody:{col:1,line:165}},"width-variants-custom":{startLoc:{col:35,line:167},endLoc:{col:1,line:212},startBody:{col:35,line:167},endBody:{col:1,line:212}},"modal-with-icon":{startLoc:{col:29,line:214},endLoc:{col:1,line:262},startBody:{col:29,line:214},endBody:{col:1,line:262}},"alert-modal":{startLoc:{col:26,line:264},endLoc:{col:1,line:309},startBody:{col:26,line:264},endBody:{col:1,line:309}},"modal-with-editable-title":{startLoc:{col:38,line:311},endLoc:{col:1,line:359},startBody:{col:38,line:311},endBody:{col:1,line:359}}}}},title:"Feedback/Modal",component:_Modal__WEBPACK_IMPORTED_MODULE_3__.A,subcomponents:{ModalHeader:_ModalHeader_ModalHeader__WEBPACK_IMPORTED_MODULE_7__.A,ModalContent:_ModalContent_ModalContent__WEBPACK_IMPORTED_MODULE_5__.A,ModalFooter:_ModalFooter_ModalFooter__WEBPACK_IMPORTED_MODULE_8__.A},argTypes:metaSettings.argTypes,decorators:metaSettings.decorators},Overview={render:modalTemplate.bind({}),name:"Overview"},WidthVariantsNormal={render:()=>{const[show,setShow]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),openModalButtonRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),closeModal=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{setShow(!1)}),[]),openModalButton=(0,_Modal_stories_helpers__WEBPACK_IMPORTED_MODULE_4__.T1)({title:"Default",setShow,openModalButtonRef});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[openModalButton,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Modal__WEBPACK_IMPORTED_MODULE_3__.A,{id:"story-book-modal",title:"Modal title",triggerElement:openModalButtonRef.current,show,onClose:closeModal,width:_Modal__WEBPACK_IMPORTED_MODULE_3__.A.width.DEFAULT,contentSpacing:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalContent_ModalContent__WEBPACK_IMPORTED_MODULE_5__.A,{children:"Modal content goes here"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalFooter_ModalFooterButtons_ModalFooterButtons__WEBPACK_IMPORTED_MODULE_6__.A,{primaryButtonText:"Confirm",secondaryButtonText:"Cancel",onPrimaryButtonClick:closeModal,onSecondaryButtonClick:closeModal})]})]})},name:"Width variants - Normal"},WidthVariantsFull={render:()=>{const[show,setShow]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),openModalButtonRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),closeModal=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{setShow(!1)}),[]),openModalButton=(0,_Modal_stories_helpers__WEBPACK_IMPORTED_MODULE_4__.T1)({title:"Full size",setShow,openModalButtonRef});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[openModalButton,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Modal__WEBPACK_IMPORTED_MODULE_3__.A,{id:"story-book-modal",title:"Modal title",triggerElement:openModalButtonRef.current,show,onClose:closeModal,width:_Modal__WEBPACK_IMPORTED_MODULE_3__.A.width.FULL_WIDTH,contentSpacing:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalContent_ModalContent__WEBPACK_IMPORTED_MODULE_5__.A,{children:"Modal content goes here"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalFooter_ModalFooterButtons_ModalFooterButtons__WEBPACK_IMPORTED_MODULE_6__.A,{primaryButtonText:"Confirm",secondaryButtonText:"Cancel",onPrimaryButtonClick:closeModal,onSecondaryButtonClick:closeModal})]})]})},name:"Width variants - Full"},WidthVariantsCustom={render:()=>{const[show,setShow]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),openModalButtonRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),closeModal=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{setShow(!1)}),[]),openModalButton=(0,_Modal_stories_helpers__WEBPACK_IMPORTED_MODULE_4__.T1)({title:"Custom size (i.e. 720px)",setShow,openModalButtonRef});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[openModalButton,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Modal__WEBPACK_IMPORTED_MODULE_3__.A,{id:"story-book-modal",title:"Modal title",triggerElement:openModalButtonRef.current,show,onClose:closeModal,width:"720px",contentSpacing:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalContent_ModalContent__WEBPACK_IMPORTED_MODULE_5__.A,{children:"Modal content goes here"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalFooter_ModalFooterButtons_ModalFooterButtons__WEBPACK_IMPORTED_MODULE_6__.A,{primaryButtonText:"Confirm",secondaryButtonText:"Cancel",onPrimaryButtonClick:closeModal,onSecondaryButtonClick:closeModal})]})]})},name:"Width variants - custom"},ModalWithIcon={render:()=>{const[show,setShow]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),openModalButtonRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),closeModal=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{setShow(!1)}),[]),openModalButton=(0,_Modal_stories_helpers__WEBPACK_IMPORTED_MODULE_4__.T1)({title:"Header with icon",setShow,openModalButtonRef});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[openModalButton,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Modal__WEBPACK_IMPORTED_MODULE_3__.A,{id:"story-book-modal",title:"Modal header with an Icon",triggerElement:openModalButtonRef.current,show,onClose:closeModal,closeButtonAriaLabel:"close",width:_Modal__WEBPACK_IMPORTED_MODULE_3__.A.width.DEFAULT,contentSpacing:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalHeader_ModalHeader__WEBPACK_IMPORTED_MODULE_7__.A,{title:"Modal Heading",icon:_Icon_Icons__WEBPACK_IMPORTED_MODULE_9__.A,iconSize:32}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalContent_ModalContent__WEBPACK_IMPORTED_MODULE_5__.A,{children:"Modal content goes here"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalFooter_ModalFooterButtons_ModalFooterButtons__WEBPACK_IMPORTED_MODULE_6__.A,{primaryButtonText:"Confirm",secondaryButtonText:"Cancel",onPrimaryButtonClick:closeModal,onSecondaryButtonClick:closeModal})]})]})},name:"Modal with icon"},AlertModal={render:()=>{const[show,setShow]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),openModalButtonRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),closeModal=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{setShow(!1)}),[]),openModalButton=(0,_Modal_stories_helpers__WEBPACK_IMPORTED_MODULE_4__.T1)({title:"Alert dialog",setShow,openModalButtonRef});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[openModalButton,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Modal__WEBPACK_IMPORTED_MODULE_3__.A,{alertDialog:!0,id:"story-book-modal",title:"Alert modal",triggerElement:openModalButtonRef.current,show,onClose:closeModal,contentSpacing:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalContent_ModalContent__WEBPACK_IMPORTED_MODULE_5__.A,{children:"Modal content goes here"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalFooter_ModalFooterButtons_ModalFooterButtons__WEBPACK_IMPORTED_MODULE_6__.A,{primaryButtonText:"Confirm",secondaryButtonText:"Cancel",onPrimaryButtonClick:closeModal,onSecondaryButtonClick:closeModal})]})]})},name:"Alert Modal"},ModalWithEditableTitle={render:()=>{const[show,setShow]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),openModalButtonRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),closeModal=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{setShow(!1)}),[]),openModalButton=(0,_Modal_stories_helpers__WEBPACK_IMPORTED_MODULE_4__.T1)({title:"Open modal",setShow,openModalButtonRef});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[openModalButton,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Modal__WEBPACK_IMPORTED_MODULE_3__.A,{id:"story-book-modal",triggerElement:openModalButtonRef.current,show,onClose:closeModal,closeButtonAriaLabel:"close",width:_Modal__WEBPACK_IMPORTED_MODULE_3__.A.width.DEFAULT,contentSpacing:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalHeader_ModalHeader__WEBPACK_IMPORTED_MODULE_7__.A,{description:"Description text goes here",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components_EditableHeading_EditableHeading__WEBPACK_IMPORTED_MODULE_10__.A,{type:_components_EditableHeading_EditableHeading__WEBPACK_IMPORTED_MODULE_10__.A.types.H2,value:"Modal title"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalContent_ModalContent__WEBPACK_IMPORTED_MODULE_5__.A,{children:"Modal content goes here"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_ModalFooter_ModalFooterButtons_ModalFooterButtons__WEBPACK_IMPORTED_MODULE_6__.A,{primaryButtonText:"Confirm",secondaryButtonText:"Cancel",onPrimaryButtonClick:closeModal,onSecondaryButtonClick:closeModal})]})]})},name:"Modal with editable title"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: modalTemplate.bind({}),\n  name: "Overview"\n}',...Overview.parameters?.docs?.source}}},WidthVariantsNormal.parameters={...WidthVariantsNormal.parameters,docs:{...WidthVariantsNormal.parameters?.docs,source:{originalSource:'{\n  // Boilerplate for creating a modal, not relevant for this example\n  render:\n  // Internal helper, not part of the API\n  // internal helper, not part of the API\n  // Modal with default width variant\n  // Width prop effects on the modal width\n  () => {\n    const [show, setShow] = useState(false);\n    const openModalButtonRef = useRef(null);\n    const closeModal = useCallback(() => {\n      setShow(false);\n    }, []);\n    const openModalButton = useHelperOpenModalButton({\n      title: "Default",\n      setShow,\n      openModalButtonRef\n    });\n    return <>\n          {openModalButton}\n          <Modal id="story-book-modal" title="Modal title" triggerElement={openModalButtonRef.current} show={show} onClose={closeModal} width={Modal.width.DEFAULT} contentSpacing>\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons primaryButtonText="Confirm" secondaryButtonText="Cancel" onPrimaryButtonClick={closeModal} onSecondaryButtonClick={closeModal} />\n          </Modal>\n        </>;\n  },\n  name: "Width variants - Normal"\n}',...WidthVariantsNormal.parameters?.docs?.source}}},WidthVariantsFull.parameters={...WidthVariantsFull.parameters,docs:{...WidthVariantsFull.parameters?.docs,source:{originalSource:'{\n  // Boilerplate for creating a modal, not relevant for this example\n  render:\n  // Internal helper, not part of the API\n  // Modal with full width variant\n  // Width prop effects on the modal width\n  () => {\n    const [show, setShow] = useState(false);\n    const openModalButtonRef = useRef(null);\n    const closeModal = useCallback(() => {\n      setShow(false);\n    }, []);\n    const openModalButton = useHelperOpenModalButton({\n      title: "Full size",\n      setShow,\n      openModalButtonRef\n    });\n    return <>\n          {openModalButton}\n          <Modal id="story-book-modal" title="Modal title" triggerElement={openModalButtonRef.current} show={show} onClose={closeModal} width={Modal.width.FULL_WIDTH} contentSpacing>\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons primaryButtonText="Confirm" secondaryButtonText="Cancel" onPrimaryButtonClick={closeModal} onSecondaryButtonClick={closeModal} />\n          </Modal>\n        </>;\n  },\n  name: "Width variants - Full"\n}',...WidthVariantsFull.parameters?.docs?.source}}},WidthVariantsCustom.parameters={...WidthVariantsCustom.parameters,docs:{...WidthVariantsCustom.parameters?.docs,source:{originalSource:'{\n  // Boilerplate for creating a modal, not relevant for this example\n  render:\n  // Internal helper, not part of the API\n  // Modal with full width variant\n  // Width prop effects on the modal width\n  () => {\n    const [show, setShow] = useState(false);\n    const openModalButtonRef = useRef(null);\n    const closeModal = useCallback(() => {\n      setShow(false);\n    }, []);\n    const openModalButton = useHelperOpenModalButton({\n      title: "Custom size (i.e. 720px)",\n      setShow,\n      openModalButtonRef\n    });\n    return <>\n          {openModalButton}\n          <Modal id="story-book-modal" title="Modal title" triggerElement={openModalButtonRef.current} show={show} onClose={closeModal} width={"720px"} contentSpacing>\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons primaryButtonText="Confirm" secondaryButtonText="Cancel" onPrimaryButtonClick={closeModal} onSecondaryButtonClick={closeModal} />\n          </Modal>\n        </>;\n  },\n  name: "Width variants - custom"\n}',...WidthVariantsCustom.parameters?.docs?.source}}},ModalWithIcon.parameters={...ModalWithIcon.parameters,docs:{...ModalWithIcon.parameters?.docs,source:{originalSource:'{\n  // Boilerplate for creating a modal, not relevant for add icon to the header\n  render:\n  // Internal helper, not part of the API\n  // Modal header with an icon example\n  /** Please implement your custom Modal header and set it as child for adding an Icon to your modal **/\n  () => {\n    const [show, setShow] = useState(false);\n    const openModalButtonRef = useRef(null);\n    const closeModal = useCallback(() => {\n      setShow(false);\n    }, []);\n    const openModalButton = useHelperOpenModalButton({\n      title: "Header with icon",\n      setShow,\n      openModalButtonRef\n    });\n    return <div>\n          {openModalButton}\n          <Modal id={"story-book-modal"} title="Modal header with an Icon" triggerElement={openModalButtonRef.current} show={show} onClose={closeModal} closeButtonAriaLabel={"close"} width={Modal.width.DEFAULT} contentSpacing>\n            {}\n            <ModalHeader title={"Modal Heading"} icon={Upgrade} iconSize={32} />\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons primaryButtonText="Confirm" secondaryButtonText="Cancel" onPrimaryButtonClick={closeModal} onSecondaryButtonClick={closeModal} />\n          </Modal>\n        </div>;\n  },\n  name: "Modal with icon"\n}',...ModalWithIcon.parameters?.docs?.source}}},AlertModal.parameters={...AlertModal.parameters,docs:{...AlertModal.parameters?.docs,source:{originalSource:'{\n  // Boilerplate for creating a modal, not relevant for add icon to the header\n  render:\n  // Internal helper, not part of the API\n  // Modal header with an icon example\n  // this makes your modal as alert dialog\n  () => {\n    const [show, setShow] = useState(false);\n    const openModalButtonRef = useRef(null);\n    const closeModal = useCallback(() => {\n      setShow(false);\n    }, []);\n    const openModalButton = useHelperOpenModalButton({\n      title: "Alert dialog",\n      setShow,\n      openModalButtonRef\n    });\n    return <div>\n          {openModalButton}\n          <Modal alertDialog id="story-book-modal" title="Alert modal" triggerElement={openModalButtonRef.current} show={show} onClose={closeModal} contentSpacing>\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons primaryButtonText="Confirm" secondaryButtonText="Cancel" onPrimaryButtonClick={closeModal} onSecondaryButtonClick={closeModal} />\n          </Modal>\n        </div>;\n  },\n  name: "Alert Modal"\n}',...AlertModal.parameters?.docs?.source}}},ModalWithEditableTitle.parameters={...ModalWithEditableTitle.parameters,docs:{...ModalWithEditableTitle.parameters?.docs,source:{originalSource:'{\n  // Boilerplate for creating a modal, not relevant for add icon to the header\n  render:\n  // Internal helper, not part of the API\n  // Modal header with an icon example\n  /** Please follow the design guidelines when implementing custom title **/\n  () => {\n    const [show, setShow] = useState(false);\n    const openModalButtonRef = useRef(null);\n    const closeModal = useCallback(() => {\n      setShow(false);\n    }, []);\n    const openModalButton = useHelperOpenModalButton({\n      title: "Open modal",\n      setShow,\n      openModalButtonRef\n    });\n    return <div>\n          {openModalButton}\n          <Modal id={"story-book-modal"} triggerElement={openModalButtonRef.current} show={show} onClose={closeModal} closeButtonAriaLabel={"close"} width={Modal.width.DEFAULT} contentSpacing>\n            <ModalHeader description={"Description text goes here"}>\n              <EditableHeading type={EditableHeading.types.H2} value={"Modal title"} />\n            </ModalHeader>\n            <ModalContent>Modal content goes here</ModalContent>\n            <ModalFooterButtons primaryButtonText="Confirm" secondaryButtonText="Cancel" onPrimaryButtonClick={closeModal} onSecondaryButtonClick={closeModal} />\n          </Modal>\n        </div>;\n  },\n  name: "Modal with editable title"\n}',...ModalWithEditableTitle.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","WidthVariantsNormal","WidthVariantsFull","WidthVariantsCustom","ModalWithIcon","AlertModal","ModalWithEditableTitle"]},"./src/components/Modal/__stories__/Modal.stories.helpers.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ty:()=>DialogAsModalBadExample,XG:()=>ModalExampleWrapper,Ge:()=>TipAlertDialog,tC:()=>TipDevDropdownInsideModal,w8:()=>TipDialog,T1:()=>useHelperOpenModalButton});var react=__webpack_require__("../../node_modules/react/index.js"),Button=__webpack_require__("./src/components/Button/Button.tsx"),Modal=__webpack_require__("./src/components/Modal/Modal.tsx"),DialogContentContainer=__webpack_require__("./src/components/DialogContentContainer/DialogContentContainer.tsx"),LegacyHeading=__webpack_require__("./src/components/LegacyHeading/LegacyHeading.tsx"),Dialog=__webpack_require__("./src/components/Dialog/Dialog.tsx"),Flex=__webpack_require__("./src/components/Flex/Flex.tsx"),SplitButtonConstants=__webpack_require__("./src/components/SplitButton/SplitButtonConstants.ts"),ModalFooterButtons=__webpack_require__("./src/components/Modal/ModalFooter/ModalFooterButtons/ModalFooterButtons.tsx"),injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),Modal_stories_module=__webpack_require__("../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/Modal/__stories__/Modal.stories.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(Modal_stories_module.A,options);const _stories_Modal_stories_module=Modal_stories_module.A&&Modal_stories_module.A.locals?Modal_stories_module.A.locals:void 0;var classnames=__webpack_require__("../../node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),tip=__webpack_require__("../storybook-blocks/dist/src/components/tip/tip.js"),storybook_link=__webpack_require__("../storybook-blocks/dist/src/components/storybook-link/storybook-link.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const useHelperOpenModalButton=_ref=>{let{title="Open modal",setShow,openModalButtonRef,color,testId}=_ref;return(0,jsx_runtime.jsx)(Button.A,{onClick:()=>setShow(!0),ref:openModalButtonRef,color,"data-testid":testId,children:title})};useHelperOpenModalButton.displayName="useHelperOpenModalButton";const ModalExampleWrapper=_ref2=>{let{bestPractice,modalTitle,buttonTitle,children,hideFooter,show:defaultShow=!1,openModalTestId,...otherModalProps}=_ref2;const[show,setShow]=(0,react.useState)(defaultShow),openModalButtonRef=(0,react.useRef)(null),closeModal=(0,react.useCallback)((()=>{setShow(!1)}),[]),openModalColor=bestPractice?Button.A.colors.POSITIVE:Button.A.colors.NEGATIVE,openModalButton=useHelperOpenModalButton({testId:openModalTestId,title:buttonTitle||modalTitle,setShow,openModalButtonRef,color:openModalColor}),footer=hideFooter?null:(0,jsx_runtime.jsx)(ModalFooterButtons.A,{primaryButtonText:"Confirm",secondaryButtonText:"Cancel",onPrimaryButtonClick:closeModal,onSecondaryButtonClick:closeModal});return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[openModalButton,(0,jsx_runtime.jsxs)(Modal.A,{id:"story-book-modal",title:modalTitle,triggerElement:openModalButtonRef.current,show,onClose:closeModal,closeButtonAriaLabel:"close",width:Modal.A.width.DEFAULT,...otherModalProps,contentSpacing:!0,children:[children,footer]})]})},DialogAsModalBadExample=()=>{const[show,setShow]=(0,react.useState)(!1),closeDialog=(0,react.useCallback)((()=>{setShow(!1)}),[]),onShow=(0,react.useCallback)((()=>{setShow(!0)}),[]),dialogContent=(0,jsx_runtime.jsx)(DialogContentContainer.A,{style:{width:"500px",margin:"auto"},children:(0,jsx_runtime.jsxs)(Flex.A,{className:classnames_default()(_stories_Modal_stories_module.modalDialogBadExample,_stories_Modal_stories_module.content),direction:Flex.A.directions.COLUMN,justify:Flex.A.justify.START,align:Flex.A.align.START,children:[(0,jsx_runtime.jsx)(LegacyHeading.A,{className:classnames_default()(_stories_Modal_stories_module.modalDialogBadExample,_stories_Modal_stories_module.heading),type:LegacyHeading.A.types.h2,value:"Dialog title"}),"Dialog content",(0,jsx_runtime.jsx)(ModalFooterButtons.A,{primaryButtonText:"Confirm",secondaryButtonText:"Cancel",className:classnames_default()(_stories_Modal_stories_module.modalDialogBadExample,_stories_Modal_stories_module.footer),onPrimaryButtonClick:closeDialog,onSecondaryButtonClick:closeDialog})]})});return(0,jsx_runtime.jsx)(Dialog.A,{open:show,onClickOutside:closeDialog,wrapperClassName:classnames_default()(_stories_Modal_stories_module.modalDialogBadExample,_stories_Modal_stories_module.wrapper),content:dialogContent,showTrigger:SplitButtonConstants.S3,children:(0,jsx_runtime.jsx)(Button.A,{onClick:onShow,color:Button.A.colors.NEGATIVE,children:"Click here"})})};DialogAsModalBadExample.displayName="DialogAsModalBadExample";const TipAlertDialog=()=>(0,jsx_runtime.jsxs)(tip.A,{children:["Set ",(0,jsx_runtime.jsx)("code",{children:"alertDialog"})," to ",(0,jsx_runtime.jsx)("code",{children:"true"})," in order to allow closing the modal only by the close buttons and not by ESC or by clicking outside."]});TipAlertDialog.displayName="TipAlertDialog";const TipDialog=()=>(0,jsx_runtime.jsxs)(tip.A,{children:["For creating a popover positioned next to other components, like customized menus, check out our"," ",(0,jsx_runtime.jsx)(storybook_link.A,{page:"Components/Dialog/Dialog",size:storybook_link.A.sizes.SMALL,children:"Dialog"})," ","component."]});TipDialog.displayName="TipDialog";const TipDevDropdownInsideModal=()=>(0,jsx_runtime.jsxs)(tip.A,{title:"Dev tip",children:["If you wish to implement a dropdown inside a Modal container and need help displaying the dropdown's popovers\n    correctly, read more about our dropdown in popovers technical pattern ",(0,jsx_runtime.jsx)(storybook_link.A,{page:"Technical patterns/Dropdowns inside pop overs",story:"Modal with damaged dropdown",size:storybook_link.A.sizes.SMALL,children:"here."})]});TipDevDropdownInsideModal.displayName="TipDevDropdownInsideModal";try{useHelperOpenModalButton.displayName="useHelperOpenModalButton",useHelperOpenModalButton.__docgenInfo={description:"",displayName:"useHelperOpenModalButton",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/__stories__/Modal.stories.helpers.tsx#useHelperOpenModalButton"]={docgenInfo:useHelperOpenModalButton.__docgenInfo,name:"useHelperOpenModalButton",path:"src/components/Modal/__stories__/Modal.stories.helpers.tsx#useHelperOpenModalButton"})}catch(__react_docgen_typescript_loader_error){}try{ModalExampleWrapper.displayName="ModalExampleWrapper",ModalExampleWrapper.__docgenInfo={description:"",displayName:"ModalExampleWrapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/__stories__/Modal.stories.helpers.tsx#ModalExampleWrapper"]={docgenInfo:ModalExampleWrapper.__docgenInfo,name:"ModalExampleWrapper",path:"src/components/Modal/__stories__/Modal.stories.helpers.tsx#ModalExampleWrapper"})}catch(__react_docgen_typescript_loader_error){}},"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/Modal/__stories__/Modal.stories.module.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".Modal-stories-module_modalDialogBadExample.Modal-stories-module_wrapper{position:sticky !important;transform:none !important;bottom:50% !important}.Modal-stories-module_modalDialogBadExample.Modal-stories-module_content{margin-bottom:var(--sb-spacing-large);margin-inline:var(--sb-spacing-large)}.Modal-stories-module_modalDialogBadExample.Modal-stories-module_heading{padding:0}.Modal-stories-module_modalDialogBadExample.Modal-stories-module_footer{width:100%}","",{version:3,sources:["webpack://./src/components/Modal/__stories__/Modal.stories.module.scss"],names:[],mappings:"AACE,yEACE,0BAAA,CACA,yBAAA,CACA,qBAAA,CAGF,yEACE,qCAAA,CACA,qCAAA,CAGF,yEACE,SAAA,CAGF,wEACE,UAAA",sourcesContent:[".modalDialogBadExample {\n  &.wrapper {\n    position: sticky !important;\n    transform: none !important;\n    bottom: 50% !important;\n  }\n\n  &.content {\n    margin-bottom: var(--sb-spacing-large);\n    margin-inline: var(--sb-spacing-large);\n  }\n\n  &.heading {\n    padding: 0;\n  }\n\n  &.footer {\n    width: 100%;\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={modalDialogBadExample:"Modal-stories-module_modalDialogBadExample",wrapper:"Modal-stories-module_wrapper",content:"Modal-stories-module_content",heading:"Modal-stories-module_heading",footer:"Modal-stories-module_footer"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);