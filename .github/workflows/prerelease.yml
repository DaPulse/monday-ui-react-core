# This workflow will ensure all PRs are labeled so we can later create releases

name: Prerelease

on: push

jobs:
  prerelease:
    if: "contains(github.event.head_commit.message, '[prerelease]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: npm ci
      - name: Set up git credentials
        run: |
          git config --global user.name 'ci'
          git config --global user.email 'deploy@monday.com'
      - name: Push Updated version
        if: success()
        env:
          BRANCH_NAME: ${{ github.head_ref }}
        run: npm run prerelease -- --branch-name=$BRANCH_NAME
      - name: Publish the new version to npm
        id: publish_version
        if: success()
        run: | # Compare the latest version and the current version and publish only if the version changed
          echo "prerelease_version=$(node -e "console.log(require('./package.json').version)")\n" >> $GITHUB_OUTPUT
          echo "# prerelease_version=${{ steps.publish_version.outputs.stdout }}"
          if [ $(npm view monday-ui-react-core version) != $(node -e "console.log(require('./package.json').version)") ]; then npm run build && npm publish --tag prerelease; else echo ''; fi;
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: success()
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: prerelease
      - name: Create comment
        if: always()
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Prerelease version published : ${{ env.package_version }}
          edit-mode: create
