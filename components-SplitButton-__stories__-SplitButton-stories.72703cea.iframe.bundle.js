"use strict";(globalThis.webpackChunkmonday_ui_react_core=globalThis.webpackChunkmonday_ui_react_core||[]).push([[2655],{"./src/components/SplitButton/__stories__/SplitButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomMenu:()=>CustomMenu,Overview:()=>Overview,SecondarySplitButton:()=>SecondarySplitButton,Sizes:()=>Sizes,SplitButtonAsThePrimaryAction:()=>SplitButtonAsThePrimaryAction,SplitButtonWithIcons:()=>SplitButtonWithIcons,Types:()=>Types,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SplitButton_stories_SplitButton_stories});__webpack_require__("../../node_modules/react/index.js");var createComponentTemplate=__webpack_require__("../storybook-blocks/dist/src/functions/createComponentTemplate.js"),SplitButton=__webpack_require__("./src/components/SplitButton/SplitButton.tsx"),Button=__webpack_require__("./src/components/Button/Button.tsx"),Check=__webpack_require__("./src/components/Icon/Icons/components/Check.tsx"),Announcement=__webpack_require__("./src/components/Icon/Icons/components/Announcement.tsx"),Add=__webpack_require__("./src/components/Icon/Icons/components/Add.tsx"),Download=__webpack_require__("./src/components/Icon/Icons/components/Download.tsx"),Upload=__webpack_require__("./src/components/Icon/Icons/components/Upload.tsx"),Sun=__webpack_require__("./src/components/Icon/Icons/components/Sun.tsx"),Moon=__webpack_require__("./src/components/Icon/Icons/components/Moon.tsx"),Favorite=__webpack_require__("./src/components/Icon/Icons/components/Favorite.tsx"),createStoryMetaSettingsDecorator=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),SplitButtonMenu=__webpack_require__("./src/components/SplitButton/SplitButtonMenu/SplitButtonMenu.tsx"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem/MenuItem.tsx"),Menu=__webpack_require__("./src/components/Menu/Menu/Menu.tsx"),MenuTitle=__webpack_require__("./src/components/Menu/MenuTitle/MenuTitle.tsx"),injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),SplitButton_stories=__webpack_require__("../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/SplitButton/__stories__/SplitButton.stories.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(SplitButton_stories.A,options);SplitButton_stories.A&&SplitButton_stories.A.locals&&SplitButton_stories.A.locals;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),metaSettings=(0,createStoryMetaSettingsDecorator.B)({component:SplitButton.A,enumPropNamesArray:["kind","dialogPaddingSize",{propName:"secondaryDialogPosition",enumName:"secondaryPositions"}],iconPropNamesArray:["leftIcon","rightIcon"],actionPropsArray:["secondaryDialogContent","onSecondaryDialogDidShow","onSecondaryDialogDidHide","onClick"]});const SplitButton_stories_SplitButton_stories={parameters:{storySource:{source:'import React from "react";\n\nimport { createComponentTemplate } from "vibe-storybook-components";\nimport SplitButton from "../SplitButton";\nimport Button from "../../Button/Button";\nimport { Add, Announcement, Check, Download, Favorite, Moon, Sun, Upload } from "../../Icon/Icons";\nimport { createStoryMetaSettingsDecorator } from "../../../storybook";\nimport SplitButtonMenu from "../SplitButtonMenu/SplitButtonMenu";\nimport MenuItem from "../../Menu/MenuItem/MenuItem";\nimport Menu from "../../Menu/Menu/Menu";\nimport MenuTitle from "../../Menu/MenuTitle/MenuTitle";\nimport "./SplitButton.stories.scss";\n\nconst metaSettings = createStoryMetaSettingsDecorator({\n  component: SplitButton,\n  enumPropNamesArray: [\n    "kind",\n    "dialogPaddingSize",\n    {\n      propName: "secondaryDialogPosition",\n      enumName: "secondaryPositions"\n    }\n  ],\n  iconPropNamesArray: ["leftIcon", "rightIcon"],\n  actionPropsArray: ["secondaryDialogContent", "onSecondaryDialogDidShow", "onSecondaryDialogDidHide", "onClick"]\n});\n\nexport default {\n  title: "Buttons/SplitButton",\n  component: SplitButton,\n\n  subcomponents: {\n    SplitButtonMenu\n  },\n\n  argTypes: metaSettings.argTypes,\n  decorators: metaSettings.decorators\n};\n\nconst splitButtonTemplate = createComponentTemplate(SplitButton);\n\nexport const Overview = {\n  render: splitButtonTemplate.bind({}),\n  name: "Overview",\n\n  args: {\n    children: "Button",\n\n    secondaryDialogContent: () => (\n      <SplitButtonMenu id="split-menu">\n        <MenuItem icon={Check} title="Hey" />\n        <MenuItem icon={Announcement} title="There" />\n      </SplitButtonMenu>\n    )\n  },\n  parameters: {\n    docs: {\n      liveEdit: { isEnabled: false }\n    }\n  }\n};\n\nexport const Types = {\n  render: () => (\n    <>\n      <SplitButton\n        children="Primary"\n        secondaryDialogContent={\n          <SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>\n        }\n      />\n      <SplitButton\n        children="Secondary"\n        kind={SplitButton.kinds.SECONDARY}\n        secondaryDialogContent={\n          <SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>\n        }\n      />\n      <SplitButton\n        children="Tertiary"\n        kind={SplitButton.kinds.TERTIARY}\n        secondaryDialogContent={\n          <SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>\n        }\n      />\n    </>\n  ),\n\n  name: "Types",\n\n  parameters: {\n    docs: {\n      liveEdit: { scope: { Check, Announcement } }\n    }\n  }\n};\n\nexport const Sizes = {\n  render: () => (\n    <>\n      <SplitButton\n        children="Small"\n        size={SplitButton.sizes.SMALL}\n        secondaryDialogContent={\n          <SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>\n        }\n      />\n      <SplitButton\n        children="Medium"\n        size={SplitButton.sizes.MEDIUM}\n        secondaryDialogContent={\n          <SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>\n        }\n      />\n      <SplitButton\n        children="Large"\n        size={SplitButton.sizes.LARGE}\n        secondaryDialogContent={\n          <SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>\n        }\n      />\n    </>\n  ),\n\n  name: "Sizes",\n  parameters: {\n    docs: {\n      liveEdit: { scope: { Check, Announcement } }\n    }\n  }\n};\n\nexport const SplitButtonWithIcons = {\n  render: () => (\n    <>\n      <SplitButton\n        leftIcon={Add}\n        secondaryDialogContent={\n          <SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>\n        }\n      >\n        Left icon\n      </SplitButton>\n      <SplitButton\n        rightIcon={Add}\n        secondaryDialogContent={\n          <SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>\n        }\n      >\n        Right icon\n      </SplitButton>\n    </>\n  ),\n\n  name: "Split button with icons",\n  parameters: {\n    docs: {\n      liveEdit: { scope: { Add, Check, Announcement } }\n    }\n  }\n};\n\nexport const SplitButtonAsThePrimaryAction = {\n  render: () => (\n    <SplitButton\n      children="Use template"\n      secondaryDialogPosition={SplitButton.secondaryDialogPositions.BOTTOM_START}\n      secondaryDialogContent={\n        <SplitButtonMenu id="split-menu">\n          <MenuItem icon={Download} title="Import template" />\n          <MenuItem icon={Upload} title="Export template" />\n        </SplitButtonMenu>\n      }\n    />\n  ),\n\n  name: "Split button as the primary action",\n  parameters: {\n    docs: {\n      liveEdit: { scope: { Download, Upload } }\n    }\n  }\n};\n\nexport const SecondarySplitButton = {\n  render: () => (\n    <>\n      <SplitButton\n        children="Export to CSV"\n        kind={SplitButton.kinds.SECONDARY}\n        secondaryDialogPosition={SplitButton.secondaryDialogPositions.BOTTOM_START}\n        secondaryDialogContent={\n          <SplitButtonMenu id="split-menu">\n            <MenuItem title="Export to PDF" />\n            <MenuItem title="Export to DOCX" />\n            <MenuItem title="Export to Excel" />\n          </SplitButtonMenu>\n        }\n      />\n      <Button>New item</Button>\n    </>\n  ),\n\n  name: "Secondary split button"\n};\n\nexport const CustomMenu = {\n  render: () => (\n    <SplitButton\n      secondaryDialogContent={\n        <Menu focusItemIndexOnMount={2} id="menu" size={Menu.sizes.MEDIUM}>\n          <MenuTitle caption="Look up, you might see" captionPosition={MenuTitle.positions.TOP} />\n          <MenuItem icon={Sun} iconType={MenuItem.iconType.SVG} title="The sun" />\n          <MenuItem icon={Moon} iconType={MenuItem.iconType.SVG} title="The moon" />\n          <MenuItem icon={Favorite} iconType={MenuItem.iconType.SVG} title="And the stars" />\n        </Menu>\n      }\n    >\n      Custom menu\n    </SplitButton>\n  ),\n\n  name: "Custom menu",\n  parameters: {\n    docs: {\n      liveEdit: { scope: { Sun, Moon, Favorite } }\n    }\n  }\n};\n',locationsMap:{overview:{startLoc:{col:24,line:42},endLoc:{col:1,line:61},startBody:{col:24,line:42},endBody:{col:1,line:61}},types:{startLoc:{col:21,line:63},endLoc:{col:1,line:105},startBody:{col:21,line:63},endBody:{col:1,line:105}},sizes:{startLoc:{col:21,line:107},endLoc:{col:1,line:149},startBody:{col:21,line:107},endBody:{col:1,line:149}},"split-button-with-icons":{startLoc:{col:36,line:151},endLoc:{col:1,line:185},startBody:{col:36,line:151},endBody:{col:1,line:185}},"split-button-as-the-primary-action":{startLoc:{col:45,line:187},endLoc:{col:1,line:207},startBody:{col:45,line:187},endBody:{col:1,line:207}},"secondary-split-button":{startLoc:{col:36,line:209},endLoc:{col:1,line:229},startBody:{col:36,line:209},endBody:{col:1,line:229}},"custom-menu":{startLoc:{col:26,line:231},endLoc:{col:1,line:253},startBody:{col:26,line:231},endBody:{col:1,line:253}}}}},title:"Buttons/SplitButton",component:SplitButton.A,subcomponents:{SplitButtonMenu:SplitButtonMenu.A},argTypes:metaSettings.argTypes,decorators:metaSettings.decorators};var Overview={render:(0,createComponentTemplate.M)(SplitButton.A).bind({}),name:"Overview",args:{children:"Button",secondaryDialogContent:function secondaryDialogContent(){return(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Check.A,title:"Hey"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Announcement.A,title:"There"})]})}},parameters:{docs:{liveEdit:{isEnabled:!1}}}},Types={render:function render(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(SplitButton.A,{children:"Primary",secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Check.A,title:"Hey"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Announcement.A,title:"There"})]})}),(0,jsx_runtime.jsx)(SplitButton.A,{children:"Secondary",kind:SplitButton.A.kinds.SECONDARY,secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Check.A,title:"Hey"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Announcement.A,title:"There"})]})}),(0,jsx_runtime.jsx)(SplitButton.A,{children:"Tertiary",kind:SplitButton.A.kinds.TERTIARY,secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Check.A,title:"Hey"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Announcement.A,title:"There"})]})})]})},name:"Types",parameters:{docs:{liveEdit:{scope:{Check:Check.A,Announcement:Announcement.A}}}}},Sizes={render:function render(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(SplitButton.A,{children:"Small",size:SplitButton.A.sizes.SMALL,secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Check.A,title:"Hey"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Announcement.A,title:"There"})]})}),(0,jsx_runtime.jsx)(SplitButton.A,{children:"Medium",size:SplitButton.A.sizes.MEDIUM,secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Check.A,title:"Hey"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Announcement.A,title:"There"})]})}),(0,jsx_runtime.jsx)(SplitButton.A,{children:"Large",size:SplitButton.A.sizes.LARGE,secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Check.A,title:"Hey"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Announcement.A,title:"There"})]})})]})},name:"Sizes",parameters:{docs:{liveEdit:{scope:{Check:Check.A,Announcement:Announcement.A}}}}},SplitButtonWithIcons={render:function render(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(SplitButton.A,{leftIcon:Add.A,secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Check.A,title:"Hey"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Announcement.A,title:"There"})]}),children:"Left icon"}),(0,jsx_runtime.jsx)(SplitButton.A,{rightIcon:Add.A,secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Check.A,title:"Hey"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Announcement.A,title:"There"})]}),children:"Right icon"})]})},name:"Split button with icons",parameters:{docs:{liveEdit:{scope:{Add:Add.A,Check:Check.A,Announcement:Announcement.A}}}}},SplitButtonAsThePrimaryAction={render:function render(){return(0,jsx_runtime.jsx)(SplitButton.A,{children:"Use template",secondaryDialogPosition:SplitButton.A.secondaryDialogPositions.BOTTOM_START,secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{icon:Download.A,title:"Import template"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Upload.A,title:"Export template"})]})})},name:"Split button as the primary action",parameters:{docs:{liveEdit:{scope:{Download:Download.A,Upload:Upload.A}}}}},SecondarySplitButton={render:function render(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(SplitButton.A,{children:"Export to CSV",kind:SplitButton.A.kinds.SECONDARY,secondaryDialogPosition:SplitButton.A.secondaryDialogPositions.BOTTOM_START,secondaryDialogContent:(0,jsx_runtime.jsxs)(SplitButtonMenu.A,{id:"split-menu",children:[(0,jsx_runtime.jsx)(MenuItem.A,{title:"Export to PDF"}),(0,jsx_runtime.jsx)(MenuItem.A,{title:"Export to DOCX"}),(0,jsx_runtime.jsx)(MenuItem.A,{title:"Export to Excel"})]})}),(0,jsx_runtime.jsx)(Button.A,{children:"New item"})]})},name:"Secondary split button"},CustomMenu={render:function render(){return(0,jsx_runtime.jsx)(SplitButton.A,{secondaryDialogContent:(0,jsx_runtime.jsxs)(Menu.A,{focusItemIndexOnMount:2,id:"menu",size:Menu.A.sizes.MEDIUM,children:[(0,jsx_runtime.jsx)(MenuTitle.A,{caption:"Look up, you might see",captionPosition:MenuTitle.A.positions.TOP}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Sun.A,iconType:MenuItem.A.iconType.SVG,title:"The sun"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Moon.A,iconType:MenuItem.A.iconType.SVG,title:"The moon"}),(0,jsx_runtime.jsx)(MenuItem.A,{icon:Favorite.A,iconType:MenuItem.A.iconType.SVG,title:"And the stars"})]}),children:"Custom menu"})},name:"Custom menu",parameters:{docs:{liveEdit:{scope:{Sun:Sun.A,Moon:Moon.A,Favorite:Favorite.A}}}}};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: splitButtonTemplate.bind({}),\n  name: "Overview",\n  args: {\n    children: "Button",\n    secondaryDialogContent: () => <SplitButtonMenu id="split-menu">\n        <MenuItem icon={Check} title="Hey" />\n        <MenuItem icon={Announcement} title="There" />\n      </SplitButtonMenu>\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        isEnabled: false\n      }\n    }\n  }\n}',...Overview.parameters?.docs?.source}}},Types.parameters={...Types.parameters,docs:{...Types.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <SplitButton children="Primary" secondaryDialogContent={<SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>} />\n      <SplitButton children="Secondary" kind={SplitButton.kinds.SECONDARY} secondaryDialogContent={<SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>} />\n      <SplitButton children="Tertiary" kind={SplitButton.kinds.TERTIARY} secondaryDialogContent={<SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>} />\n    </>,\n  name: "Types",\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: {\n          Check,\n          Announcement\n        }\n      }\n    }\n  }\n}',...Types.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <SplitButton children="Small" size={SplitButton.sizes.SMALL} secondaryDialogContent={<SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>} />\n      <SplitButton children="Medium" size={SplitButton.sizes.MEDIUM} secondaryDialogContent={<SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>} />\n      <SplitButton children="Large" size={SplitButton.sizes.LARGE} secondaryDialogContent={<SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>} />\n    </>,\n  name: "Sizes",\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: {\n          Check,\n          Announcement\n        }\n      }\n    }\n  }\n}',...Sizes.parameters?.docs?.source}}},SplitButtonWithIcons.parameters={...SplitButtonWithIcons.parameters,docs:{...SplitButtonWithIcons.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <SplitButton leftIcon={Add} secondaryDialogContent={<SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>}>\n        Left icon\n      </SplitButton>\n      <SplitButton rightIcon={Add} secondaryDialogContent={<SplitButtonMenu id="split-menu">\n            <MenuItem icon={Check} title="Hey" />\n            <MenuItem icon={Announcement} title="There" />\n          </SplitButtonMenu>}>\n        Right icon\n      </SplitButton>\n    </>,\n  name: "Split button with icons",\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: {\n          Add,\n          Check,\n          Announcement\n        }\n      }\n    }\n  }\n}',...SplitButtonWithIcons.parameters?.docs?.source}}},SplitButtonAsThePrimaryAction.parameters={...SplitButtonAsThePrimaryAction.parameters,docs:{...SplitButtonAsThePrimaryAction.parameters?.docs,source:{originalSource:'{\n  render: () => <SplitButton children="Use template" secondaryDialogPosition={SplitButton.secondaryDialogPositions.BOTTOM_START} secondaryDialogContent={<SplitButtonMenu id="split-menu">\n          <MenuItem icon={Download} title="Import template" />\n          <MenuItem icon={Upload} title="Export template" />\n        </SplitButtonMenu>} />,\n  name: "Split button as the primary action",\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: {\n          Download,\n          Upload\n        }\n      }\n    }\n  }\n}',...SplitButtonAsThePrimaryAction.parameters?.docs?.source}}},SecondarySplitButton.parameters={...SecondarySplitButton.parameters,docs:{...SecondarySplitButton.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <SplitButton children="Export to CSV" kind={SplitButton.kinds.SECONDARY} secondaryDialogPosition={SplitButton.secondaryDialogPositions.BOTTOM_START} secondaryDialogContent={<SplitButtonMenu id="split-menu">\n            <MenuItem title="Export to PDF" />\n            <MenuItem title="Export to DOCX" />\n            <MenuItem title="Export to Excel" />\n          </SplitButtonMenu>} />\n      <Button>New item</Button>\n    </>,\n  name: "Secondary split button"\n}',...SecondarySplitButton.parameters?.docs?.source}}},CustomMenu.parameters={...CustomMenu.parameters,docs:{...CustomMenu.parameters?.docs,source:{originalSource:'{\n  render: () => <SplitButton secondaryDialogContent={<Menu focusItemIndexOnMount={2} id="menu" size={Menu.sizes.MEDIUM}>\n          <MenuTitle caption="Look up, you might see" captionPosition={MenuTitle.positions.TOP} />\n          <MenuItem icon={Sun} iconType={MenuItem.iconType.SVG} title="The sun" />\n          <MenuItem icon={Moon} iconType={MenuItem.iconType.SVG} title="The moon" />\n          <MenuItem icon={Favorite} iconType={MenuItem.iconType.SVG} title="And the stars" />\n        </Menu>}>\n      Custom menu\n    </SplitButton>,\n  name: "Custom menu",\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: {\n          Sun,\n          Moon,\n          Favorite\n        }\n      }\n    }\n  }\n}',...CustomMenu.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Types","Sizes","SplitButtonWithIcons","SplitButtonAsThePrimaryAction","SecondarySplitButton","CustomMenu"]},"../storybook-blocks/dist/src/functions/createComponentTemplate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>r});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function r(r){return function(e){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(r,Object.assign({},e))}}},"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/SplitButton/__stories__/SplitButton.stories.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".monday-storybook-split-button_dialog{min-width:176px;display:flex;flex-direction:column;align-items:flex-start;justify-content:left}.monday-storybook-split-button_dialog_option{padding-bottom:8px;padding-top:8px;display:flex}.monday-storybook-split-button_dialog_option:first-child{padding-top:0}.monday-storybook-split-button_dialog_option:last-child{padding-bottom:0}.monday-storybook-split-button_dialog_icon-spacing{margin-right:var(--sb-spacing-small)}.monday-storybook-split-button_spacing{padding-bottom:120px}","",{version:3,sources:["webpack://./src/components/SplitButton/__stories__/SplitButton.stories.scss"],names:[],mappings:"AACE,sCACE,eAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,oBAAA,CAEA,6CACE,kBAAA,CACA,eAAA,CACA,YAAA,CAEA,yDACE,aAAA,CAGF,wDACE,gBAAA,CAIJ,mDACE,oCAAA,CAIJ,uCACE,oBAAA",sourcesContent:[".monday-storybook-split-button {\n  &_dialog {\n    min-width: 176px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: left;\n\n    &_option {\n      padding-bottom: 8px;\n      padding-top: 8px;\n      display: flex;\n\n      &:first-child {\n        padding-top: 0;\n      }\n\n      &:last-child {\n        padding-bottom: 0;\n      }\n    }\n\n    &_icon-spacing {\n      margin-right: var(--sb-spacing-small);\n    }\n  }\n\n  &_spacing {\n    padding-bottom: 120px;\n  }\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);