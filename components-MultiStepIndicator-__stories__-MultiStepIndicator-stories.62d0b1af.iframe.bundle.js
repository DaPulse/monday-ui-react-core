"use strict";(globalThis.webpackChunk_vibe_core=globalThis.webpackChunk_vibe_core||[]).push([[4769],{"./src/components/MultiStepIndicator/__stories__/MultiStepIndicator.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FulfilledIcons:()=>FulfilledIcons,MultiStepWizard:()=>MultiStepWizard,Overview:()=>Overview,Placements:()=>Placements,Sizes:()=>Sizes,TransitionAnimation:()=>TransitionAnimation,Types:()=>Types,__namedExportsOrder:()=>__namedExportsOrder,default:()=>MultiStepIndicator_stories_MultiStepIndicator_stories});var react=__webpack_require__("../../node_modules/react/index.js"),MultiStepIndicator=__webpack_require__("./src/components/MultiStepIndicator/MultiStepIndicator.tsx"),MultiStepConstants=__webpack_require__("./src/components/MultiStepIndicator/MultiStepConstants.ts"),createComponentTemplate=__webpack_require__("../storybook-blocks/dist/src/functions/createComponentTemplate.js"),story_description=__webpack_require__("../storybook-blocks/dist/src/components/story-description/story-description.js"),Upgrade=__webpack_require__("../icons/dist/react/Upgrade.js"),Flex=__webpack_require__("./src/components/Flex/Flex.tsx"),injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),MultiStepIndicator_stories=__webpack_require__("../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/MultiStepIndicator/__stories__/MultiStepIndicator.stories.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(MultiStepIndicator_stories.A,options);MultiStepIndicator_stories.A&&MultiStepIndicator_stories.A.locals&&MultiStepIndicator_stories.A.locals;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const MultiStepIndicator_stories_MultiStepIndicator_stories={parameters:{storySource:{source:'import React from "react";\nimport { useCallback, useEffect, useMemo, useState } from "react";\nimport MultiStepIndicator from "../MultiStepIndicator";\nimport { StepStatus } from "../MultiStepConstants";\nimport { createComponentTemplate, StoryDescription } from "vibe-storybook-components";\nimport { Upgrade } from "@vibe/icons";\nimport Flex from "../../Flex/Flex";\nimport "./MultiStepIndicator.stories.scss";\nimport { Step } from "../MultiStep.types";\n\nexport default {\n  title: "Components/MultiStepIndicator",\n  component: MultiStepIndicator\n};\n\nconst multiStepIndicatorTemplate = createComponentTemplate(MultiStepIndicator);\n\nexport const Overview = {\n  render: multiStepIndicatorTemplate.bind({}),\n  name: "Overview",\n\n  args: {\n    steps: [\n      {\n        key: "FULFILLED",\n        status: "fulfilled",\n        titleText: "Everything you can do with Monday",\n        subtitleText: "Subtitle"\n      },\n      {\n        key: "PENDING",\n        status: "pending",\n        titleText: "Everything you can do with Monday",\n        subtitleText: "Subtitle"\n      },\n      {\n        key: "PENDING-2",\n        status: "pending",\n        titleText: "Everything you can do with Monday",\n        subtitleText: "Subtitle"\n      }\n    ]\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        isEnabled: false\n      }\n    }\n  }\n};\n\nexport const Placements = {\n  render: () => {\n    const steps: Step[] = useMemo(\n      () => [\n        {\n          key: "FULFILLED",\n          status: "fulfilled",\n          titleText: "Fulfilled title",\n          subtitleText: "Fulfilled subtitle"\n        },\n        {\n          key: "ACTIVE",\n          status: "active",\n          titleText: "Active title",\n          subtitleText: "Active subtitle"\n        },\n        {\n          key: "PENDING",\n          status: "pending",\n          titleText: "Pending title",\n          subtitleText: "Pending subtitle"\n        }\n      ],\n      []\n    );\n\n    return (\n      <div className="monday-storybook-multiStepIndicator_column-wrapper">\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Vertical</span>\n          <MultiStepIndicator\n            className="monday-storybook-multiStepIndicator_size"\n            textPlacement="vertical"\n            steps={steps}\n          />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Horizontal</span>\n          <MultiStepIndicator steps={steps} />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport const Types = {\n  render: () => {\n    const steps: Step[] = useMemo(\n      () => [\n        {\n          key: "FULFILLED",\n          status: "fulfilled",\n          titleText: "Fulfilled title",\n          subtitleText: "Fulfilled subtitle"\n        },\n        {\n          key: "ACTIVE",\n          status: "active",\n          titleText: "Active title",\n          subtitleText: "Active subtitle"\n        },\n        {\n          key: "PENDING",\n          status: "pending",\n          titleText: "Pending title",\n          subtitleText: "Pending subtitle"\n        }\n      ],\n      []\n    );\n\n    return (\n      <div className="monday-storybook-multiStepIndicator_column-wrapper">\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Primary</span>\n          <MultiStepIndicator steps={steps} type="primary" />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Success</span>\n          <MultiStepIndicator steps={steps} type="success" />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Danger</span>\n          <MultiStepIndicator steps={steps} type="danger" />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Dark</span>\n          <MultiStepIndicator steps={steps} type="dark" />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport const Sizes = {\n  render: () => {\n    const steps: Step[] = useMemo(\n      () => [\n        {\n          key: "FULFILLED",\n          status: "fulfilled",\n          titleText: "Fulfilled title",\n          subtitleText: "Fulfilled subtitle"\n        },\n        {\n          key: "ACTIVE",\n          status: "active",\n          titleText: "Active title",\n          subtitleText: "Active subtitle"\n        },\n        {\n          key: "PENDING",\n          status: "pending",\n          titleText: "Pending",\n          subtitleText: "Pending subtitle"\n        }\n      ],\n      []\n    );\n\n    return (\n      <Flex direction="column" align="start" gap="small">\n        <StoryDescription description="Regular">\n          <MultiStepIndicator steps={steps} size="regular" />\n        </StoryDescription>\n        <StoryDescription description="Compact">\n          <MultiStepIndicator className="multi_step_indicator_compact" steps={steps} size="compact" />\n        </StoryDescription>\n      </Flex>\n    );\n  },\n\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: { StoryDescription }\n      }\n    }\n  }\n};\n\nexport const FulfilledIcons = {\n  render: () => {\n    const steps: Step[] = useMemo(\n      () => [\n        {\n          key: "FULFILLED",\n          status: "fulfilled",\n          titleText: "Fulfilled title",\n          subtitleText: "Fulfilled subtitle"\n        },\n        {\n          key: "ACTIVE",\n          status: "active",\n          titleText: "Active title",\n          subtitleText: "Active subtitle"\n        },\n        {\n          key: "PENDING",\n          status: "pending",\n          titleText: "Pending title",\n          subtitleText: "Pending subtitle"\n        }\n      ],\n      []\n    );\n\n    return (\n      <div className="monday-storybook-multiStepIndicator_column-wrapper">\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Default (check)</span>\n          <MultiStepIndicator steps={steps} />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Number instead of icon</span>\n          <MultiStepIndicator steps={steps} isFulfilledStepDisplayNumber={true} />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Custom </span>\n          <MultiStepIndicator steps={steps} fulfilledStepIcon={Upgrade} />\n        </div>\n      </div>\n    );\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: { Upgrade }\n      }\n    }\n  }\n};\n\nexport const TransitionAnimation = {\n  render: () => {\n    const exampleSteps = useMemo<Record<string, Step>>(\n      () => ({\n        firstStep: {\n          key: "PENDING",\n          status: "pending",\n          titleText: "First step title",\n          subtitleText: "First subtitle"\n        },\n\n        secondStep: {\n          key: "PENDING-2",\n          status: "pending",\n          titleText: "Second step title",\n          subtitleText: "Second subtitle"\n        },\n\n        thirdStep: {\n          key: "PENDING-3",\n          status: "pending",\n          titleText: "Third step title",\n          subtitleText: "Third subtitle"\n        }\n      }),\n      []\n    );\n\n    const [steps, setSteps] = useState<Step[]>([\n      {\n        ...exampleSteps.firstStep\n      },\n      {\n        ...exampleSteps.secondStep\n      },\n      {\n        ...exampleSteps.thirdStep\n      }\n    ]);\n\n    const clearSteps = useCallback(() => {\n      setSteps([\n        {\n          ...exampleSteps.firstStep\n        },\n        {\n          ...exampleSteps.secondStep\n        },\n        {\n          ...exampleSteps.thirdStep\n        }\n      ]);\n    }, [exampleSteps.firstStep, exampleSteps.secondStep, exampleSteps.thirdStep]);\n\n    const [numActions, setNumActions] = useState(0);\n\n    const getStepKeyForTransition = useCallback(() => {\n      if (numActions < 2) return "firstStep";\n      else if (numActions < 4) return "secondStep";\n      else return "thirdStep";\n    }, [numActions]);\n\n    const STEP_TRANSITIONS = useMemo(\n      () => ({\n        [StepStatus.PENDING]: StepStatus.ACTIVE,\n        [StepStatus.ACTIVE]: StepStatus.FULFILLED,\n        [StepStatus.FULFILLED]: StepStatus.PENDING\n      }),\n      []\n    );\n\n    const performIndicatorStateTransition = useCallback(() => {\n      if (numActions === steps.length * 2) {\n        clearSteps();\n        setNumActions(0);\n        return;\n      }\n\n      const stepKey = getStepKeyForTransition();\n\n      const copySteps = {\n        firstStep: {\n          ...steps[0]\n        },\n\n        secondStep: {\n          ...steps[1]\n        },\n\n        thirdStep: {\n          ...steps[2]\n        }\n      };\n\n      copySteps[stepKey].status = STEP_TRANSITIONS[copySteps[stepKey].status];\n\n      setSteps([\n        {\n          ...copySteps.firstStep\n        },\n        {\n          ...copySteps.secondStep\n        },\n        {\n          ...copySteps.thirdStep\n        }\n      ]);\n\n      setNumActions(numActions + 1);\n    }, [numActions, steps, getStepKeyForTransition, STEP_TRANSITIONS, clearSteps]);\n\n    useEffect(() => {\n      const interval = setInterval(performIndicatorStateTransition, 2000);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }, [performIndicatorStateTransition]);\n\n    return <MultiStepIndicator steps={steps} />;\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: { StepStatus }\n      }\n    }\n  }\n};\n\nexport const MultiStepWizard = {\n  render: () => {\n    const steps: Step[] = useMemo(\n      () => [\n        {\n          key: "FULFILLED",\n          status: "fulfilled",\n          titleText: "Step 1",\n          subtitleText: "Learn how to use monday CRM"\n        },\n        {\n          key: "PENDING",\n          status: "pending",\n          titleText: "Step 2",\n          subtitleText: "Integrate your email"\n        },\n        {\n          key: "PENDING-3",\n          status: "pending",\n          titleText: "Step 3",\n          subtitleText: "Import your data"\n        }\n      ],\n      []\n    );\n\n    return (\n      <MultiStepIndicator\n        className="monday-storybook-multiStepIndicator_big-size"\n        steps={steps}\n        textPlacement="vertical"\n      />\n    );\n  }\n};\n',locationsMap:{overview:{startLoc:{col:24,line:18},endLoc:{col:1,line:51},startBody:{col:24,line:18},endBody:{col:1,line:51}},placements:{startLoc:{col:26,line:53},endLoc:{col:1,line:96},startBody:{col:26,line:53},endBody:{col:1,line:96}},types:{startLoc:{col:21,line:98},endLoc:{col:1,line:145},startBody:{col:21,line:98},endBody:{col:1,line:145}},sizes:{startLoc:{col:21,line:147},endLoc:{col:1,line:192},startBody:{col:21,line:147},endBody:{col:1,line:192}},"fulfilled-icons":{startLoc:{col:30,line:194},endLoc:{col:1,line:244},startBody:{col:30,line:194},endBody:{col:1,line:244}},"transition-animation":{startLoc:{col:35,line:246},endLoc:{col:1,line:374},startBody:{col:35,line:246},endBody:{col:1,line:374}},"multi-step-wizard":{startLoc:{col:31,line:376},endLoc:{col:1,line:410},startBody:{col:31,line:376},endBody:{col:1,line:410}}}}},title:"Components/MultiStepIndicator",component:MultiStepIndicator.A};var Overview={render:(0,createComponentTemplate.M)(MultiStepIndicator.A).bind({}),name:"Overview",args:{steps:[{key:"FULFILLED",status:"fulfilled",titleText:"Everything you can do with Monday",subtitleText:"Subtitle"},{key:"PENDING",status:"pending",titleText:"Everything you can do with Monday",subtitleText:"Subtitle"},{key:"PENDING-2",status:"pending",titleText:"Everything you can do with Monday",subtitleText:"Subtitle"}]},parameters:{docs:{liveEdit:{isEnabled:!1}}}},Placements={render:function render(){var steps=(0,react.useMemo)((function(){return[{key:"FULFILLED",status:"fulfilled",titleText:"Fulfilled title",subtitleText:"Fulfilled subtitle"},{key:"ACTIVE",status:"active",titleText:"Active title",subtitleText:"Active subtitle"},{key:"PENDING",status:"pending",titleText:"Pending title",subtitleText:"Pending subtitle"}]}),[]);return(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_column-wrapper",children:[(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_row-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-multiStepIndicator_title",children:"Vertical"}),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{className:"monday-storybook-multiStepIndicator_size",textPlacement:"vertical",steps})]}),(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_row-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-multiStepIndicator_title",children:"Horizontal"}),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps})]})]})}},Types={render:function render(){var steps=(0,react.useMemo)((function(){return[{key:"FULFILLED",status:"fulfilled",titleText:"Fulfilled title",subtitleText:"Fulfilled subtitle"},{key:"ACTIVE",status:"active",titleText:"Active title",subtitleText:"Active subtitle"},{key:"PENDING",status:"pending",titleText:"Pending title",subtitleText:"Pending subtitle"}]}),[]);return(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_column-wrapper",children:[(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_row-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-multiStepIndicator_title",children:"Primary"}),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps,type:"primary"})]}),(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_row-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-multiStepIndicator_title",children:"Success"}),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps,type:"success"})]}),(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_row-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-multiStepIndicator_title",children:"Danger"}),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps,type:"danger"})]}),(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_row-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-multiStepIndicator_title",children:"Dark"}),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps,type:"dark"})]})]})}},Sizes={render:function render(){var steps=(0,react.useMemo)((function(){return[{key:"FULFILLED",status:"fulfilled",titleText:"Fulfilled title",subtitleText:"Fulfilled subtitle"},{key:"ACTIVE",status:"active",titleText:"Active title",subtitleText:"Active subtitle"},{key:"PENDING",status:"pending",titleText:"Pending",subtitleText:"Pending subtitle"}]}),[]);return(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"start",gap:"small",children:[(0,jsx_runtime.jsx)(story_description.A,{description:"Regular",children:(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps,size:"regular"})}),(0,jsx_runtime.jsx)(story_description.A,{description:"Compact",children:(0,jsx_runtime.jsx)(MultiStepIndicator.A,{className:"multi_step_indicator_compact",steps,size:"compact"})})]})},parameters:{docs:{liveEdit:{scope:{StoryDescription:story_description.A}}}}},FulfilledIcons={render:function render(){var steps=(0,react.useMemo)((function(){return[{key:"FULFILLED",status:"fulfilled",titleText:"Fulfilled title",subtitleText:"Fulfilled subtitle"},{key:"ACTIVE",status:"active",titleText:"Active title",subtitleText:"Active subtitle"},{key:"PENDING",status:"pending",titleText:"Pending title",subtitleText:"Pending subtitle"}]}),[]);return(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_column-wrapper",children:[(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_row-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-multiStepIndicator_title",children:"Default (check)"}),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps})]}),(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_row-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-multiStepIndicator_title",children:"Number instead of icon"}),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps,isFulfilledStepDisplayNumber:!0})]}),(0,jsx_runtime.jsxs)("div",{className:"monday-storybook-multiStepIndicator_row-wrapper",children:[(0,jsx_runtime.jsx)("span",{className:"monday-storybook-multiStepIndicator_title",children:"Custom "}),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps,fulfilledStepIcon:Upgrade.A})]})]})},parameters:{docs:{liveEdit:{scope:{Upgrade:Upgrade.A}}}}},TransitionAnimation={render:function render(){var exampleSteps=(0,react.useMemo)((function(){return{firstStep:{key:"PENDING",status:"pending",titleText:"First step title",subtitleText:"First subtitle"},secondStep:{key:"PENDING-2",status:"pending",titleText:"Second step title",subtitleText:"Second subtitle"},thirdStep:{key:"PENDING-3",status:"pending",titleText:"Third step title",subtitleText:"Third subtitle"}}}),[]),_useState2=_slicedToArray((0,react.useState)([_objectSpread({},exampleSteps.firstStep),_objectSpread({},exampleSteps.secondStep),_objectSpread({},exampleSteps.thirdStep)]),2),steps=_useState2[0],setSteps=_useState2[1],clearSteps=(0,react.useCallback)((function(){setSteps([_objectSpread({},exampleSteps.firstStep),_objectSpread({},exampleSteps.secondStep),_objectSpread({},exampleSteps.thirdStep)])}),[exampleSteps.firstStep,exampleSteps.secondStep,exampleSteps.thirdStep]),_useState4=_slicedToArray((0,react.useState)(0),2),numActions=_useState4[0],setNumActions=_useState4[1],getStepKeyForTransition=(0,react.useCallback)((function(){return numActions<2?"firstStep":numActions<4?"secondStep":"thirdStep"}),[numActions]),STEP_TRANSITIONS=(0,react.useMemo)((function(){return _defineProperty(_defineProperty(_defineProperty({},MultiStepConstants.xo.PENDING,MultiStepConstants.xo.ACTIVE),MultiStepConstants.xo.ACTIVE,MultiStepConstants.xo.FULFILLED),MultiStepConstants.xo.FULFILLED,MultiStepConstants.xo.PENDING)}),[]),performIndicatorStateTransition=(0,react.useCallback)((function(){if(numActions===2*steps.length)return clearSteps(),void setNumActions(0);var stepKey=getStepKeyForTransition(),copySteps={firstStep:_objectSpread({},steps[0]),secondStep:_objectSpread({},steps[1]),thirdStep:_objectSpread({},steps[2])};copySteps[stepKey].status=STEP_TRANSITIONS[copySteps[stepKey].status],setSteps([_objectSpread({},copySteps.firstStep),_objectSpread({},copySteps.secondStep),_objectSpread({},copySteps.thirdStep)]),setNumActions(numActions+1)}),[numActions,steps,getStepKeyForTransition,STEP_TRANSITIONS,clearSteps]);return(0,react.useEffect)((function(){var interval=setInterval(performIndicatorStateTransition,2e3);return function(){clearInterval(interval)}}),[performIndicatorStateTransition]),(0,jsx_runtime.jsx)(MultiStepIndicator.A,{steps})},parameters:{docs:{liveEdit:{scope:{StepStatus:MultiStepConstants.xo}}}}},MultiStepWizard={render:function render(){var steps=(0,react.useMemo)((function(){return[{key:"FULFILLED",status:"fulfilled",titleText:"Step 1",subtitleText:"Learn how to use monday CRM"},{key:"PENDING",status:"pending",titleText:"Step 2",subtitleText:"Integrate your email"},{key:"PENDING-3",status:"pending",titleText:"Step 3",subtitleText:"Import your data"}]}),[]);return(0,jsx_runtime.jsx)(MultiStepIndicator.A,{className:"monday-storybook-multiStepIndicator_big-size",steps,textPlacement:"vertical"})}};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: multiStepIndicatorTemplate.bind({}),\n  name: "Overview",\n  args: {\n    steps: [{\n      key: "FULFILLED",\n      status: "fulfilled",\n      titleText: "Everything you can do with Monday",\n      subtitleText: "Subtitle"\n    }, {\n      key: "PENDING",\n      status: "pending",\n      titleText: "Everything you can do with Monday",\n      subtitleText: "Subtitle"\n    }, {\n      key: "PENDING-2",\n      status: "pending",\n      titleText: "Everything you can do with Monday",\n      subtitleText: "Subtitle"\n    }]\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        isEnabled: false\n      }\n    }\n  }\n}',...Overview.parameters?.docs?.source}}},Placements.parameters={...Placements.parameters,docs:{...Placements.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const steps: Step[] = useMemo(() => [{\n      key: "FULFILLED",\n      status: "fulfilled",\n      titleText: "Fulfilled title",\n      subtitleText: "Fulfilled subtitle"\n    }, {\n      key: "ACTIVE",\n      status: "active",\n      titleText: "Active title",\n      subtitleText: "Active subtitle"\n    }, {\n      key: "PENDING",\n      status: "pending",\n      titleText: "Pending title",\n      subtitleText: "Pending subtitle"\n    }], []);\n    return <div className="monday-storybook-multiStepIndicator_column-wrapper">\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Vertical</span>\n          <MultiStepIndicator className="monday-storybook-multiStepIndicator_size" textPlacement="vertical" steps={steps} />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Horizontal</span>\n          <MultiStepIndicator steps={steps} />\n        </div>\n      </div>;\n  }\n}',...Placements.parameters?.docs?.source}}},Types.parameters={...Types.parameters,docs:{...Types.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const steps: Step[] = useMemo(() => [{\n      key: "FULFILLED",\n      status: "fulfilled",\n      titleText: "Fulfilled title",\n      subtitleText: "Fulfilled subtitle"\n    }, {\n      key: "ACTIVE",\n      status: "active",\n      titleText: "Active title",\n      subtitleText: "Active subtitle"\n    }, {\n      key: "PENDING",\n      status: "pending",\n      titleText: "Pending title",\n      subtitleText: "Pending subtitle"\n    }], []);\n    return <div className="monday-storybook-multiStepIndicator_column-wrapper">\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Primary</span>\n          <MultiStepIndicator steps={steps} type="primary" />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Success</span>\n          <MultiStepIndicator steps={steps} type="success" />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Danger</span>\n          <MultiStepIndicator steps={steps} type="danger" />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Dark</span>\n          <MultiStepIndicator steps={steps} type="dark" />\n        </div>\n      </div>;\n  }\n}',...Types.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const steps: Step[] = useMemo(() => [{\n      key: "FULFILLED",\n      status: "fulfilled",\n      titleText: "Fulfilled title",\n      subtitleText: "Fulfilled subtitle"\n    }, {\n      key: "ACTIVE",\n      status: "active",\n      titleText: "Active title",\n      subtitleText: "Active subtitle"\n    }, {\n      key: "PENDING",\n      status: "pending",\n      titleText: "Pending",\n      subtitleText: "Pending subtitle"\n    }], []);\n    return <Flex direction="column" align="start" gap="small">\n        <StoryDescription description="Regular">\n          <MultiStepIndicator steps={steps} size="regular" />\n        </StoryDescription>\n        <StoryDescription description="Compact">\n          <MultiStepIndicator className="multi_step_indicator_compact" steps={steps} size="compact" />\n        </StoryDescription>\n      </Flex>;\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: {\n          StoryDescription\n        }\n      }\n    }\n  }\n}',...Sizes.parameters?.docs?.source}}},FulfilledIcons.parameters={...FulfilledIcons.parameters,docs:{...FulfilledIcons.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const steps: Step[] = useMemo(() => [{\n      key: "FULFILLED",\n      status: "fulfilled",\n      titleText: "Fulfilled title",\n      subtitleText: "Fulfilled subtitle"\n    }, {\n      key: "ACTIVE",\n      status: "active",\n      titleText: "Active title",\n      subtitleText: "Active subtitle"\n    }, {\n      key: "PENDING",\n      status: "pending",\n      titleText: "Pending title",\n      subtitleText: "Pending subtitle"\n    }], []);\n    return <div className="monday-storybook-multiStepIndicator_column-wrapper">\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Default (check)</span>\n          <MultiStepIndicator steps={steps} />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Number instead of icon</span>\n          <MultiStepIndicator steps={steps} isFulfilledStepDisplayNumber={true} />\n        </div>\n        <div className="monday-storybook-multiStepIndicator_row-wrapper">\n          <span className="monday-storybook-multiStepIndicator_title">Custom </span>\n          <MultiStepIndicator steps={steps} fulfilledStepIcon={Upgrade} />\n        </div>\n      </div>;\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: {\n          Upgrade\n        }\n      }\n    }\n  }\n}',...FulfilledIcons.parameters?.docs?.source}}},TransitionAnimation.parameters={...TransitionAnimation.parameters,docs:{...TransitionAnimation.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const exampleSteps = useMemo<Record<string, Step>>(() => ({\n      firstStep: {\n        key: "PENDING",\n        status: "pending",\n        titleText: "First step title",\n        subtitleText: "First subtitle"\n      },\n      secondStep: {\n        key: "PENDING-2",\n        status: "pending",\n        titleText: "Second step title",\n        subtitleText: "Second subtitle"\n      },\n      thirdStep: {\n        key: "PENDING-3",\n        status: "pending",\n        titleText: "Third step title",\n        subtitleText: "Third subtitle"\n      }\n    }), []);\n    const [steps, setSteps] = useState<Step[]>([{\n      ...exampleSteps.firstStep\n    }, {\n      ...exampleSteps.secondStep\n    }, {\n      ...exampleSteps.thirdStep\n    }]);\n    const clearSteps = useCallback(() => {\n      setSteps([{\n        ...exampleSteps.firstStep\n      }, {\n        ...exampleSteps.secondStep\n      }, {\n        ...exampleSteps.thirdStep\n      }]);\n    }, [exampleSteps.firstStep, exampleSteps.secondStep, exampleSteps.thirdStep]);\n    const [numActions, setNumActions] = useState(0);\n    const getStepKeyForTransition = useCallback(() => {\n      if (numActions < 2) return "firstStep";else if (numActions < 4) return "secondStep";else return "thirdStep";\n    }, [numActions]);\n    const STEP_TRANSITIONS = useMemo(() => ({\n      [StepStatus.PENDING]: StepStatus.ACTIVE,\n      [StepStatus.ACTIVE]: StepStatus.FULFILLED,\n      [StepStatus.FULFILLED]: StepStatus.PENDING\n    }), []);\n    const performIndicatorStateTransition = useCallback(() => {\n      if (numActions === steps.length * 2) {\n        clearSteps();\n        setNumActions(0);\n        return;\n      }\n      const stepKey = getStepKeyForTransition();\n      const copySteps = {\n        firstStep: {\n          ...steps[0]\n        },\n        secondStep: {\n          ...steps[1]\n        },\n        thirdStep: {\n          ...steps[2]\n        }\n      };\n      copySteps[stepKey].status = STEP_TRANSITIONS[copySteps[stepKey].status];\n      setSteps([{\n        ...copySteps.firstStep\n      }, {\n        ...copySteps.secondStep\n      }, {\n        ...copySteps.thirdStep\n      }]);\n      setNumActions(numActions + 1);\n    }, [numActions, steps, getStepKeyForTransition, STEP_TRANSITIONS, clearSteps]);\n    useEffect(() => {\n      const interval = setInterval(performIndicatorStateTransition, 2000);\n      return () => {\n        clearInterval(interval);\n      };\n    }, [performIndicatorStateTransition]);\n    return <MultiStepIndicator steps={steps} />;\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        scope: {\n          StepStatus\n        }\n      }\n    }\n  }\n}',...TransitionAnimation.parameters?.docs?.source}}},MultiStepWizard.parameters={...MultiStepWizard.parameters,docs:{...MultiStepWizard.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const steps: Step[] = useMemo(() => [{\n      key: "FULFILLED",\n      status: "fulfilled",\n      titleText: "Step 1",\n      subtitleText: "Learn how to use monday CRM"\n    }, {\n      key: "PENDING",\n      status: "pending",\n      titleText: "Step 2",\n      subtitleText: "Integrate your email"\n    }, {\n      key: "PENDING-3",\n      status: "pending",\n      titleText: "Step 3",\n      subtitleText: "Import your data"\n    }], []);\n    return <MultiStepIndicator className="monday-storybook-multiStepIndicator_big-size" steps={steps} textPlacement="vertical" />;\n  }\n}',...MultiStepWizard.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Placements","Types","Sizes","FulfilledIcons","TransitionAnimation","MultiStepWizard"]},"../storybook-blocks/dist/src/components/story-description/story-description.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>p});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react=__webpack_require__("../../node_modules/react/index.js"),classnames=__webpack_require__("../../node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),withStaticProps=__webpack_require__("../storybook-blocks/dist/src/types/withStaticProps.js"),FlexConstants=__webpack_require__("../storybook-blocks/dist/src/helpers/components/Flex/FlexConstants.js"),Flex=__webpack_require__("../storybook-blocks/dist/src/helpers/components/Flex/Flex.js"),e_description="story-description-module_description__yFjQO",e_vertical="story-description-module_vertical__C1SJj";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _defineProperty(obj,key,value){return key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key),key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var p=(0,withStaticProps.N)((function m(t){var o,l,n,_t$description=t.description,a=void 0===_t$description?"":_t$description,p=t.headerStyle,u=t.children,_t$vertical=t.vertical,v=void 0!==_t$vertical&&_t$vertical,f=t.className,j=t.align,_t$justify=t.justify,g=void 0===_t$justify?null===(o=m.justify)||void 0===o?void 0:o.START:_t$justify,h=t.headerAlign,y=t.headerJustify,x=(0,react.useMemo)((function(){var i,s;return v?null===(i=m.directions)||void 0===i?void 0:i.COLUMN:null===(s=m.directions)||void 0===s?void 0:s.ROW}),[v]);return(0,jsx_runtime.jsxs)(Flex.A,{direction:x,gap:null===(l=m.gaps)||void 0===l?void 0:l.MEDIUM,justify:g,align:j||void 0,className:f,children:[(0,jsx_runtime.jsx)(Flex.A,{className:classnames_default()(e_description,_defineProperty({},e_vertical,v)),style:Object.assign({width:"120px"},p),justify:y,align:h||(null===(n=m.align)||void 0===n?void 0:n.CENTER),children:a}),u]})}),{justify:FlexConstants.aP,align:FlexConstants.xB,gaps:FlexConstants.Us,directions:FlexConstants.bo})},"../storybook-blocks/dist/src/functions/createComponentTemplate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>r});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function r(r){return function(e){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(r,Object.assign({},e))}}},"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/MultiStepIndicator/__stories__/MultiStepIndicator.stories.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".monday-storybook-multiStepIndicator_column-wrapper{display:flex;flex-direction:column;gap:30px}.monday-storybook-multiStepIndicator_row-wrapper{display:flex;align-items:center;padding-left:30px}.monday-storybook-multiStepIndicator_title{width:140px}.monday-storybook-multiStepIndicator_size{width:700px}.monday-storybook-multiStepIndicator_big-size{width:100%}.monday-storybook-multiStepIndicator_small-size{padding:0}.monday-storybook-multiStepIndicator_spacing{width:400px;height:80px;padding-bottom:10px;background-color:var(--sb-primary-background-color);box-shadow:var(--box-shadow-medium)}.monday-storybook-multiStepIndicator_box-wrapper{display:flex;flex-direction:column;align-items:center;margin-top:40px;padding-top:80px;padding-bottom:40px}.monday-storybook-multiStepIndicator_line{margin-left:-40px}.monday-storybook-multiStepIndicator_line_divider{width:120px}.monday-storybook-multiStepIndicator_overflow figure{overflow:hidden}.multi_step_indicator_compact{width:400px}","",{version:3,sources:["webpack://./src/components/MultiStepIndicator/__stories__/MultiStepIndicator.stories.scss"],names:[],mappings:"AAGE,oDACE,YAAA,CACA,qBAAA,CACA,QAAA,CAGF,iDACE,YAAA,CACA,kBAAA,CACA,iBAAA,CAGF,2CACE,WAAA,CAGF,0CACE,WAAA,CAGF,8CACE,UAAA,CAGF,gDACE,SAAA,CAGF,6CACE,WAAA,CACA,WAAA,CACA,mBAAA,CACA,mDAAA,CACA,mCAAA,CAGF,iDACE,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,eAAA,CACA,gBAAA,CACA,mBAAA,CAGF,0CACE,iBAAA,CACA,kDACE,WAAA,CAKF,qDACE,eAAA,CAKN,8BACE,WAAA",sourcesContent:['@import "../../../styles/typography";\n\n.monday-storybook-multiStepIndicator {\n  &_column-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n  }\n\n  &_row-wrapper {\n    display: flex;\n    align-items: center;\n    padding-left: 30px;\n  }\n\n  &_title {\n    width: 140px;\n  }\n\n  &_size {\n    width: 700px;\n  }\n\n  &_big-size {\n    width: 100%;\n  }\n\n  &_small-size {\n    padding: 0;\n  }\n\n  &_spacing {\n    width: 400px;\n    height: 80px;\n    padding-bottom: 10px;\n    background-color: var(--sb-primary-background-color);\n    box-shadow: var(--box-shadow-medium);\n  }\n\n  &_box-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 40px;\n    padding-top: 80px;\n    padding-bottom: 40px;\n  }\n\n  &_line {\n    margin-left: -40px;\n    &_divider {\n      width: 120px;\n    }\n  }\n\n  &_overflow {\n    figure {\n      overflow: hidden;\n    }\n  }\n}\n\n.multi_step_indicator_compact {\n  width: 400px;\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);